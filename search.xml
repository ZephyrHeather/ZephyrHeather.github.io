<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>开学随想</title>
    <url>/posts/8d8bd145/</url>
    <content><![CDATA[<h1 id="生存"><a href="#生存" class="headerlink" title="生存"></a>生存</h1><blockquote>
<p>生存的能力就是在陌生的水域游泳。—— <em><strong>Dune</strong></em></p>
</blockquote>
<p>生活好似一只庞然巨兽，人在其腹中被消化升华，等待着下一个未知的管道。</p>
<p>转眼之间，我已踏入大学，这已然的事实中却蕴藏着无穷的未知。也许就该如此，总有一个存在紧握着我们生命的两端——生与死；而那中间的曲折未知——失落、恐惧、希望、新生，都由我们自己去体会个中滋味。</p>
<span id="more"></span>

<p>陌生的小道，陌生的声音，陌生的气息，陌生的人群，一切都足以使人惶恐不安。然而未知并不意味着危险，当我小心翼翼地迈出我的脚步，感知到是学长帮忙搬行李的身影，辅导员发来的消息，来自五湖四海的同学的笑容。</p>
<p>梦可怕吗？它是未知的。当然有噩梦和美梦，但这应该由潜意识把握。现实可怕吗？只不过是比梦更真实的未知。但也一样由我们自己去把握。去适应这片未知的水域，去感知这些未知的生灵。总有一天，自己已浑然不觉在这片水域中畅游。我倒是期待新的变换，总不能一直藏在安全的熟悉的水中慢慢僵化，受制于生活的惯性。只是希望今后的我保有这份生存的勇气，守住对未知的期待，探索这“恐惧”背后的热情。</p>
<h1 id="迷茫"><a href="#迷茫" class="headerlink" title="迷茫"></a>迷茫</h1><blockquote>
<p>此路危机四伏。——<em><strong>Dune</strong></em></p>
</blockquote>
<p>半夜（12：00？）我的高中好友发信息给我说自己又陷入了虚无主义，感到很痛苦。我和Ta是同一个类型的人，也经常陷于自己脑中奇怪的思想，倒是开学忙于适应新环境而无暇思索，要是我也熬夜无事估计也会有所思。然而，这很常见，也很正常。我想，这不是新的环境引起的。我已把这看作是我的一部分，在不同的时期，有不同的思考，有不同的困境。生活在这里，总是要去思考的，不然又何来”我思故我在“呢？即使有一个问题突然想通了，脱离了”苦海“，在下一个循环中又要陷进去再次思考的。</p>
<p>我承认这个过程比较痛苦（有物理题做不出也蛮痛苦的），但是我常常想要是有一天，我失去了痛苦思考的能力，那我该是无滋无味了。</p>
<p>最近看了本哲学的入门作品（也推荐给我的那位好友了），我们发现很多苦苦思索的问题其实哲学家已经思考了几个世纪。我们都有一种感觉——哲学把这个问题清晰地解释后，好像失去了那份思考的滋味，没了那种混沌的感觉。但我现在转念一想，这些问题还是有哲学家在研究啊，并不能因为几个世纪没有解决，就把其扔弃了，我们的思考还是有价值的。</p>
<p>与其逃离这份迷茫，把这份迷茫抛弃，不如好好享受它带来的感觉。</p>
<p>回到我的那位好友，第二天早上果然没事了，哈哈！</p>
<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><blockquote>
<p>On you mask, set on. ——<em><strong>Legion</strong></em></p>
</blockquote>
<p>新的开始，新的起点，朝气蓬勃的我们依然大有作为。</p>
<p>在这陌生的校园里，有着熟悉的鸟啼和蝉鸣，有着依然火热的梦想，更有着属于我们的挑战。</p>
<p>雨天，空中飘着细密的雨丝，一阵风吹过，我走在校园的路上，飘落了无数花朵。定格的那一瞬，有千万种可能，当她飘落在我的手掌上，便是新的开始。</p>
<p>我祝愿，</p>
<p>​		在熟悉的梦中寻找温暖，在陌生的园里挑战自我。</p>
<h1 id="不知道起什么标题了？"><a href="#不知道起什么标题了？" class="headerlink" title="不知道起什么标题了？"></a>不知道起什么标题了？</h1><p>最近一直懒得更博，于是写了这篇水一水(?)。其实我还有notion和THA(我们创办的一个学习小组)，Archlinux配置篇(Archlinux用iwd连接校园网还没解决_^)，至少保持月更吧。</p>
<p>送大家一首P.B.雪莱的诗和一首音乐(我写文的时候恰好听到)，以补救一下我的烂文，调剂一下心情。</p>
<blockquote>
<p>别揭开这画帷</p>
<p>别揭开这画帷：呵，人们就管这<br>叫作生活，虽然它画的没有真像；<br>它只是以随便涂抹的彩色<br>仿制我们意愿的事务——而希望<br>呵恐惧，双生的宿命，在后面藏躲，<br>给幽深的穴中不断编织着幻象。<br>曾有一个人，我知道，把它揭开过——<br>他想找到什么可以寄托他的爱情，<br>但却找不到。而世间也没有任何<br>真实的物象，能略略使他心动。<br>于是他飘泊在冷漠的人群中，<br>成为暗影中的光，是一点明斑<br>落上阴郁的景色，也是个精灵<br>追求真理，却像“传道者”一样兴叹。<br>            1818年</p>
</blockquote>
<blockquote>
<p> SONNET</p>
<p>Lift not the painted veil which those who live<br>Call Life: though unreal shapes be pictured there,<br>And it but mimic all we would believe<br>With colours idly spread,—behind, lurk Fear<br>And Hope, twin Destinies; who ever weave<br>Their shadows, o’er the chasm, sightless and drear.<br>I knew one who had lifted it—he sought,<br>For his lost heart was tender, things to love,<br>But found them not, alas! nor was there aught<br>The world contains, the which he could approve.<br>Through the unheeding many he did move,<br>A slendour among shadows, a Spirit that strove<br>For truth, and like the Preacher found it not.<br>                    1818.</p>
</blockquote>
<p>注：《旧约·传道书》载，科希列（或传道者）说：“凡事都是虚空。”</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=19934763&auto=1&height=66"></iframe>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>琐记</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Trackpy--Walkthrough</title>
    <url>/posts/9ce795e5/</url>
    <content><![CDATA[<blockquote>
<p>本文翻译自<a href="https://soft-matter.github.io/trackpy/v0.5.0/tutorial/walkthrough.html">trackpy文档</a>，仅供学习参考</p>
</blockquote>
<h1 id="Walkthrough"><a href="#Walkthrough" class="headerlink" title="Walkthrough"></a>Walkthrough</h1><p>分析纳米颗粒在水中的流动，跟踪轨迹并计算水滴粘度。</p>
<span id="more"></span>

<p><em><code>In [1]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> division<span class="token punctuation">,</span> unicode_literals<span class="token punctuation">,</span> print_fuction	<span class="token comment"># 为了兼容python2和python3，主要是python提前使用python的函数</span>
<span class="token keyword">import</span> matplotlib <span class="token keyword">as</span> mpl
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token operator">%</span>matplotlib inline	<span class="token comment"># ipython的魔法函数</span>

<span class="token comment"># 可选，调整样式</span>
mpl<span class="token punctuation">.</span>rc<span class="token punctuation">(</span><span class="token string">'figure'</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
mpl<span class="token punctuation">.</span>rc<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span></code></pre>

<p>导入python的科学计算库numpy和数据分析库pandas</p>
<p>导入trackpy跟踪，pims打开媒体</p>
<p><em><code>In [2]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token punctuation">,</span> Series	<span class="token comment"># 为了方便</span>

<span class="token keyword">import</span> pims
<span class="token keyword">import</span> trackpy <span class="token keyword">as</span> tp</code></pre>

<h2 id="Step-1-Read-the-Data"><a href="#Step-1-Read-the-Data" class="headerlink" title="Step 1: Read the Data"></a>Step 1: Read the Data</h2><p>打开图片或视频</p>
<p>为了将数据导入Python，我们使用一个trackpy的姐妹项目<a href="https://github.com/soft-matter/pims">PIMS</a>(Python Image Sequence)(pims的<a href="https://nbviewer.ipython.org/github/soft-matter/pims/tree/master/">notebook</a>)PIMS使得通过一个一致的接口加载和处理来自多种格式的视频数据变得容易和方便。</p>
<p>使用 PIMS，trackpy可以读取：</p>
<ul>
<li>一系列文件夹或压缩文件中的图片</li>
<li>多帧TIFF文件</li>
<li>一段视频(AVI、MOV等)</li>
<li>用于显微镜和科学视频捕捉的特殊格式：<ul>
<li><code>Cine</code>, NorPix <code>seq</code></li>
<li><code>LSM</code></li>
<li>Files supported by <a href="https://www.openmicroscopy.org/site/support/bio-formats5.1/supported-formats.html">Bioformats</a>(这个链接似乎失效了)</li>
<li><code>ND2</code> using <a href="https://github.com/soft-matter/pims_nd2">PIMS_ND2</a></li>
</ul>
</li>
</ul>
<p>(有些格式需要一些额外的依赖关系。有关完整列表，请参阅PIMS的README页面或文档中的安装说明。)</p>
<p>对于许多格式，使用<code>pims.open</code>就行。由于这些图像是彩色的，我们还需要设置一个管道，以便在读取图像时将其转换为灰度。</p>
<p><em><code>In [3]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@pims<span class="token punctuation">.</span>pipeline</span>
<span class="token keyword">def</span> <span class="token function">gray</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> image<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># Take just the green channel</span>

frames <span class="token operator">=</span> gray<span class="token punctuation">(</span>pims<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'../sample_data/bulk_water/*.png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<p><em><code>In [4]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">framses</code></pre>

<p><em><code>Out [4]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>ImageSequence<span class="token punctuation">,</span><span class="token punctuation">)</span> processed through proc_func<span class="token punctuation">.</span> Original <span class="token builtin">repr</span><span class="token punctuation">:</span>
    <span class="token operator">&lt;</span>Frames<span class="token operator">></span>
    Source<span class="token punctuation">:</span> <span class="token operator">/</span>Users<span class="token operator">/</span>nkeim<span class="token operator">/</span>projects<span class="token operator">/</span>trackpy<span class="token operator">/</span>trackpy<span class="token operator">-</span>examples<span class="token operator">/</span>sample_data<span class="token operator">/</span>bulk_water<span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span>png
    Length<span class="token punctuation">:</span> <span class="token number">300</span> frames
    Frame Shape<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">424</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
    Pixel Datatype<span class="token punctuation">:</span> uint8</code></pre>

<p>我们可以通过<code>frames[frame_number]</code>访问任意画面。图像被表示为一个numpy强度数组。如果你使用的是Python的Anaconda版本，这些值应该在[0,255]范围内。如果您有一个更自定义的环境，它们可能在[0,1]的范围内，在这种情况下，您将不得不试验以下最小质量参数。</p>
<p><em><code>In [5]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 第一帧</span></code></pre>

<p><em><code>Out [5]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">125</span> <span class="token number">125</span> <span class="token number">125</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">120</span> <span class="token number">120</span> <span class="token number">121</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">125</span> <span class="token number">125</span> <span class="token number">125</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">120</span> <span class="token number">121</span> <span class="token number">121</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">125</span> <span class="token number">125</span> <span class="token number">124</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">121</span> <span class="token number">123</span> <span class="token number">124</span><span class="token punctuation">]</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 <span class="token punctuation">[</span><span class="token number">125</span> <span class="token number">126</span> <span class="token number">125</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">108</span>  <span class="token number">98</span>  <span class="token number">97</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">125</span> <span class="token number">125</span> <span class="token number">125</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">116</span> <span class="token number">109</span> <span class="token number">106</span><span class="token punctuation">]</span>
 <span class="token punctuation">[</span><span class="token number">125</span> <span class="token number">125</span> <span class="token number">125</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">124</span> <span class="token number">119</span> <span class="token number">117</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre>

<p>在IPython笔记本中，框架是通过显示图像直接表示的。</p>
<p><em><code>In [6]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></code></pre>

<p><em><code>Out [6]:</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jE6XTI.png" loading="lazy"></p>
<p>另外，要使用轴和缩放控制来绘制适当的图，可以使用matplotlib的imshow()方法。</p>
<p><em><code>In [7]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><img src="https://s1.ax1x.com/2022/06/27/jE6vkt.png" loading="lazy"></p>
<p>帧的行为类似于numpy数组，但有一些额外的属性。</p>
<p><em><code>In [8]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">frames<span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">.</span>frame_no</code></pre>

<p><em><code>Out [8]</code></em></p>
<pre class="language-pyth" data-language="pyth"><code class="language-pyth">123</code></pre>

<p><em><code>In [9]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">frames<span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">.</span>metadata  <span class="token comment"># 科学格式可以在这里传递实验元数据。</span></code></pre>

<p><em><code>Out [9]</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></code></pre>

<h2 id="Step-2-Locate-Features"><a href="#Step-2-Locate-Features" class="headerlink" title="Step 2: Locate Features"></a>Step 2: Locate Features</h2><p>从第一帧开始。估计特征的大小(以像素为单位)。大小必须是一个奇数，最好是大一点，我们将在下面看到。我们估计11个像素。</p>
<p><em><code>In [10]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> tp<span class="token punctuation">.</span>locate<span class="token punctuation">(</span>frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> invert<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></code></pre>

<p>算法寻找明亮的特征;由于这组图像的特征是暗的，我们设置invert&#x3D;True。</p>
<p><code>locate</code>返回一个名为DataFrame的类似电子表格的对象。它列出了:</p>
<ul>
<li>每个特征的位置</li>
<li>它的外观的各种特征，我们将用它来过滤掉虚假的特征</li>
<li>“信号”强度和不确定度的估计都是由<a href="https://www.sciencedirect.com/science/article/pii/S0006349505731362?via=ihub">this paper</a>(这是一篇粒子追踪微流变学中的静态和动态误差的文献)推导出来的</li>
</ul>
<p>更多关于DataFrames的信息可以在<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html">pandas文档</a>中找到。DataFrames可以很容易地导出到格式，如CSV, Excel, SQL, HDF5等。</p>
<p><em><code>In [11]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">f<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 显示前几行数据</span></code></pre>

<p><em><code>Out [11]</code></em></p>
<table>
<thead>
<tr>
<th></th>
<th>y</th>
<th>x</th>
<th>mass</th>
<th>size</th>
<th>ecc</th>
<th>signal</th>
<th>raw_mass</th>
<th>ep</th>
<th>frame</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>4.750000</td>
<td>103.668564</td>
<td>192.862485</td>
<td>2.106615</td>
<td>0.066390</td>
<td>10.808405</td>
<td>10714.0</td>
<td>0.073666</td>
<td>0</td>
</tr>
<tr>
<td>1</td>
<td>5.249231</td>
<td>585.779487</td>
<td>164.659302</td>
<td>2.962674</td>
<td>0.078936</td>
<td>4.222033</td>
<td>10702.0</td>
<td>0.075116</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>5.785986</td>
<td>294.792544</td>
<td>244.624615</td>
<td>2.244542</td>
<td>0.219217</td>
<td>15.874846</td>
<td>10686.0</td>
<td>0.077141</td>
<td>0</td>
</tr>
<tr>
<td>3</td>
<td>5.869369</td>
<td>338.173423</td>
<td>187.458282</td>
<td>2.046201</td>
<td>0.185333</td>
<td>13.088304</td>
<td>10554.0</td>
<td>0.099201</td>
<td>0</td>
</tr>
<tr>
<td>4</td>
<td>6.746377</td>
<td>310.584169</td>
<td>151.486558</td>
<td>3.103294</td>
<td>0.053342</td>
<td>4.475355</td>
<td>10403.0</td>
<td>0.147430</td>
<td>0</td>
</tr>
</tbody></table>
<p><em><code>In [12]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">tp<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>f<span class="token punctuation">,</span> frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [12]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jE6zff.png" loading="lazy"></p>
<h3 id="Refine-parameters-to-elminate-spurious-features"><a href="#Refine-parameters-to-elminate-spurious-features" class="headerlink" title="Refine parameters to elminate spurious features"></a>Refine parameters to elminate spurious features</h3><p>(优化参数以消除虚假特征)</p>
<p>其中许多圈显然是错误的;它们是转瞬即逝的亮度峰值，实际上并不是粒子。删除它们通常会改善结果并加快功能查找。有很多方法可以区分真粒子和假粒子。最重要的方法是观察总亮度(“mass”)。</p>
<p><em><code>In [13]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token string">'mass'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>

<span class="token comment"># Optionally, label the axes.</span>
ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>xlabel<span class="token operator">=</span><span class="token string">'mass'</span><span class="token punctuation">,</span> ylabel<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [13]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEc91S.png" loading="lazy"></p>
<p>然后我们可以指定最小mass参数。</p>
<p>如果你的图像特别有噪声，你也会发现<code>threshold</code>(阈值)参数很有用。</p>
<p><em><code>In [14]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> tp<span class="token punctuation">.</span>locate<span class="token punctuation">(</span>frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> invert<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> minmass<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span></code></pre>

<p><em><code>In [15]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">tp<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>f<span class="token punctuation">,</span> frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [15]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jE6zff.png" loading="lazy"></p>
<p>有更多的控制和优化功能查找的选项。您可以在<a href="https://soft-matter.github.io/trackpy/stable/">文档</a>中查看它们，最全面的描述在API参考文档中。或者通过<code>tp.locate?</code>来查阅它们。</p>
<h3 id="Check-for-subpixel-accuracy"><a href="#Check-for-subpixel-accuracy" class="headerlink" title="Check for subpixel accuracy"></a>Check for subpixel accuracy</h3><p>(检查亚像素精度)</p>
<p>Eric Weeks在他的相关教程中指出，检查亚像素精度的一个快速方法是检查x和&#x2F;或y位置的小数部分是否均匀分布。</p>
<p>Trackpy为此提供了一个方便的绘图函数<code>subpx_bias</code>:</p>
<p><em><code>In [16]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">tp<span class="token punctuation">.</span>subpx_bias<span class="token punctuation">(</span>f<span class="token punctuation">)</span></code></pre>

<p><em><code>Out [16]</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>matplotlib<span class="token punctuation">.</span>axes<span class="token punctuation">.</span>_subplots<span class="token punctuation">.</span>AxesSubplot <span class="token builtin">object</span> at <span class="token number">0x1c268a1490</span><span class="token operator">></span><span class="token punctuation">,</span>
        <span class="token operator">&lt;</span>matplotlib<span class="token punctuation">.</span>axes<span class="token punctuation">.</span>_subplots<span class="token punctuation">.</span>AxesSubplot <span class="token builtin">object</span> at <span class="token number">0x1c269a54d0</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      dtype<span class="token operator">=</span><span class="token builtin">object</span><span class="token punctuation">)</span></code></pre>

<p><img src="https://s1.ax1x.com/2022/06/27/jEcVkq.png" loading="lazy"></p>
<p>如果我们使用的像素尺寸太小，直方图经常在中间显示一个下降。</p>
<p><em><code>In [17]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">tp<span class="token punctuation">.</span>subpx_bias<span class="token punctuation">(</span>tp<span class="token punctuation">.</span>locate<span class="token punctuation">(</span>frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> invert<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> minmass<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [17]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEcZt0.png" loading="lazy"></p>
<h3 id="Locate-features-in-all-frames"><a href="#Locate-features-in-all-frames" class="headerlink" title="Locate features in all frames"></a>Locate features in all frames</h3><p>(定位所有帧的特征)</p>
<p>或者，开始时，只是探索所有帧的一个子集。</p>
<table>
<thead>
<tr>
<th>selection</th>
<th>syntax example</th>
</tr>
</thead>
<tbody><tr>
<td>all the frames</td>
<td><code>frames[:]</code> or simply <code>frames</code>.</td>
</tr>
<tr>
<td>the first 10 frames</td>
<td><code>frames[:10]</code></td>
</tr>
<tr>
<td>the last 10 frames</td>
<td><code>frames[-10:]</code></td>
</tr>
<tr>
<td>a range of frames</td>
<td><code>frames[100:200]</code></td>
</tr>
<tr>
<td>every 10th frame</td>
<td><code>frame[::10]</code></td>
</tr>
<tr>
<td>a list of specific frames</td>
<td><code>frames[[100, 107, 113]]</code></td>
</tr>
</tbody></table>
<p>我们将在这段视频的前300帧中定位特征。我们使用<code>tp.batch</code>调用<code>tp.locate</code>对每一帧分析并收集结果。</p>
<p><em><code>In [18]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> tp<span class="token punctuation">.</span>batch<span class="token punctuation">(</span>frames<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> minmass<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> invert<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [18]</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">···
Frame <span class="token number">299</span><span class="token punctuation">:</span> <span class="token number">624</span> features
···</code></pre>

<p>在分析每一帧时，<code>tp.batch</code>报告帧号和发现了多少特征。如果这个数字意外地低或高，您可能希望中断它并尝试不同的参数。</p>
<p>如果您的图像很小，您可能会发现打印这个数字实际上大大降低了<code>batch</code>速度!在这种情况下，您可以运行<code>tp.quiet()</code>来关闭它。</p>
<h2 id="Step-3-Link-features-into-particle-trajectories"><a href="#Step-3-Link-features-into-particle-trajectories" class="headerlink" title="Step 3: Link features into particle trajectories"></a>Step 3: Link features into particle trajectories</h2><p>我们有粒子在每一帧中的位置。接下来，我们将逐帧跟踪粒子，给每个粒子一个编号以进行识别。</p>
<p>首先，我们必须指定一个最大位移，即质点在两帧间能移动的最远距离。我们应该选择最小的合理值，因为大的值会大大减慢计算时间。在这种情况下，5像素是合理的。</p>
<p>其次，我们考虑到粒子可能会错过几帧，然后再次看到的可能性。(可能是由于视频中的噪声，它的”mass”低于我们的截止值。)内存会跟踪消失的粒子，并在它们最后一次出现后保留它们的ID。这里我们使用3帧。</p>
<p><em><code>In [19]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># tp.quiet()  # 关闭进度报告以获得最佳性能</span>
t <span class="token operator">=</span> tp<span class="token punctuation">.</span>link<span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> memory<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span></code></pre>

<p><em><code>Out [19]</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">Frame <span class="token number">299</span><span class="token punctuation">:</span> <span class="token number">624</span> trajectories present<span class="token punctuation">.</span></code></pre>

<p>结果是特征DataFrame <code>f</code>加上一个额外的列粒子，用标签标识每个特征。我们标识这个新的DataFrame为 <code>t</code>。</p>
<p><em><code>In [20]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">t<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p><em><code>Out [20]</code></em></p>
<table>
<thead>
<tr>
<th></th>
<th>y</th>
<th>x</th>
<th>mass</th>
<th>size</th>
<th>ecc</th>
<th>signal</th>
<th>raw_mass</th>
<th>ep</th>
<th>frame</th>
<th>particle</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>4.750000</td>
<td>103.668564</td>
<td>192.862485</td>
<td>2.106615</td>
<td>0.066390</td>
<td>10.808405</td>
<td>10714.0</td>
<td>0.073666</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>365</td>
<td>284.118980</td>
<td>25.313881</td>
<td>149.037779</td>
<td>2.321961</td>
<td>0.031799</td>
<td>7.008575</td>
<td>10770.0</td>
<td>0.067577</td>
<td>0</td>
<td>1</td>
</tr>
<tr>
<td>364</td>
<td>282.753601</td>
<td>534.788476</td>
<td>222.754482</td>
<td>1.908443</td>
<td>0.103416</td>
<td>15.874846</td>
<td>10415.0</td>
<td>0.141946</td>
<td>0</td>
<td>2</td>
</tr>
<tr>
<td>363</td>
<td>280.010398</td>
<td>275.185353</td>
<td>186.782757</td>
<td>2.508665</td>
<td>0.183181</td>
<td>7.261897</td>
<td>10438.0</td>
<td>0.132499</td>
<td>0</td>
<td>3</td>
</tr>
<tr>
<td>362</td>
<td>279.134153</td>
<td>252.780324</td>
<td>151.064355</td>
<td>2.938060</td>
<td>0.253812</td>
<td>4.306474</td>
<td>10359.0</td>
<td>0.171764</td>
<td>0</td>
<td>4</td>
</tr>
</tbody></table>
<h3 id="Filter-spurious-trajectories"><a href="#Filter-spurious-trajectories" class="headerlink" title="Filter spurious trajectories"></a>Filter spurious trajectories</h3><p>(过滤虚假轨迹)</p>
<p>我们还有更多的过滤工作要做。短暂的轨迹——只能看到几帧——通常是虚假的，没有什么用处。方便的函数<code>filter_stub</code>只保留给定帧数的轨迹。</p>
<p><em><code>In [21]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">t1 <span class="token operator">=</span> tp<span class="token punctuation">.</span>filter_stubs<span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span>
<span class="token comment"># 比较未过滤和过滤后数据中的粒子数。</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Before:'</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span><span class="token string">'particle'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'After:'</span><span class="token punctuation">,</span> t1<span class="token punctuation">[</span><span class="token string">'particle'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>

<p><em><code>Out [21]</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">Before<span class="token punctuation">:</span> <span class="token number">13715</span>
After<span class="token punctuation">:</span> <span class="token number">1505</span></code></pre>

<p>我们还可以通过粒子的外观来过滤轨迹。在这个阶段，有了轨迹连接，我们就可以通过轨迹来观察一个特征的“平均外观”，从而给出更准确的图像。</p>
<p><em><code>In [22]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
tp<span class="token punctuation">.</span>mass_size<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'particle'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># convenience function -- just plots size vs. mass</span></code></pre>

<p><img src="https://s1.ax1x.com/2022/06/27/jEcnpT.png" loading="lazy"></p>
<p>“mass”特别小的粒子，或特别大的或非圆形(偏心)的粒子，可能分别失焦或聚集。最好是通过尝试和错误进行实验，过滤出”mass”大小的空间区域，并使用<code>tp.annotate</code>查看结果。最后，我们需要把好的粒子从虚假的粒子中分离出来，我们如何做到这一点并不重要。</p>
<p><em><code>In [23]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">t2 <span class="token operator">=</span> t1<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t1<span class="token punctuation">[</span><span class="token string">'mass'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>t1<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">2.6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>
         <span class="token punctuation">(</span>t1<span class="token punctuation">[</span><span class="token string">'ecc'</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre>

<p><em><code>In [24]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
tp<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>t2<span class="token punctuation">[</span>t2<span class="token punctuation">[</span><span class="token string">'frame'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [24]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEcu1U.png" loading="lazy"></p>
<p>使用<code>plot_traj()</code>跟踪轨迹:</p>
<p><em><code>In [25]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
tp<span class="token punctuation">.</span>plot_traj<span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [25]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEc1B9.png" loading="lazy"></p>
<h3 id="Remove-overall-drift"><a href="#Remove-overall-drift" class="headerlink" title="Remove overall drift"></a>Remove overall drift</h3><p>(删除整体漂移)</p>
<p>计算整体的漂移运动，我们将其减去，采用粒子的平均位置参考系。</p>
<p><em><code>In [26]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">d <span class="token operator">=</span> tp<span class="token punctuation">.</span>compute_drift<span class="token punctuation">(</span>t2<span class="token punctuation">)</span></code></pre>

<p><em><code>In [27]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">d<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p><em><code>Out [27]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEcJtx.png" loading="lazy"></p>
<p><em><code>In [28]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">tm <span class="token operator">=</span> tp<span class="token punctuation">.</span>subtract_drift<span class="token punctuation">(</span>t2<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span></code></pre>

<p>将整个漂移运动减去，我们再次绘制轨迹。我们观察到很好的随机游动。</p>
<p><em><code>In [29]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">ax <span class="token operator">=</span> tp<span class="token punctuation">.</span>plot_traj<span class="token punctuation">(</span>tm<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>

<p><img src="https://s1.ax1x.com/2022/06/27/jEcYh6.png" loading="lazy"></p>
<h2 id="Step-4-Analyze-trajectories"><a href="#Step-4-Analyze-trajectories" class="headerlink" title="Step 4: Analyze trajectories"></a>Step 4: Analyze trajectories</h2><p>Trackpy包括几个函数，以帮助一些常见的分析粒子轨迹。(请参阅API参考的”Static Analysis”(“静态分析”)和”Motion Analysis”(“运动分析”)章节。)</p>
<p>在这里，我们可以证明这些数据与胶态粒子在水中经历布朗运动是一致的。</p>
<h3 id="Mean-Squared-Displacement-of-Individal-Probes"><a href="#Mean-Squared-Displacement-of-Individal-Probes" class="headerlink" title="Mean Squared Displacement of Individal Probes"></a>Mean Squared Displacement of Individal Probes</h3><p>(单个探针的均方位移)</p>
<p>利用<code>imsd</code>函数计算每个粒子的均方位移(MSD)，并绘制MSD与滞后时间的关系图。</p>
<p><em><code>In [30]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">im <span class="token operator">=</span> tp<span class="token punctuation">.</span>imsd<span class="token punctuation">(</span>tm<span class="token punctuation">,</span> <span class="token number">100</span><span class="token operator">/</span><span class="token number">285.</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>  <span class="token comment"># microns per pixel = 100/285., frames per second = 24</span></code></pre>

<p><em><code>In [31]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>im<span class="token punctuation">.</span>index<span class="token punctuation">,</span> im<span class="token punctuation">,</span> <span class="token string">'k-'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>  <span class="token comment"># black lines, semitransparent</span>
ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>ylabel<span class="token operator">=</span><span class="token string">r'$\langle \Delta r^2 \rangle$ [$\mu$m$^2$]'</span><span class="token punctuation">,</span>
       xlabel<span class="token operator">=</span><span class="token string">'lag time $t$'</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_xscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span></code></pre>

<p><em><code>Out [31]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEcN9K.png" loading="lazy"></p>
<p>因为我们只分析了300帧，所以在大延迟时间下统计数据很差。有更多的帧，我们可以研究更大的滞后时间。</p>
<h3 id="Ensemble-Mean-Squared-Displacement"><a href="#Ensemble-Mean-Squared-Displacement" class="headerlink" title="Ensemble Mean Squared Displacement"></a>Ensemble Mean Squared Displacement</h3><p>(总体均方位移)</p>
<p>现在使用函数<code>emsd</code>计算所有粒子的整体均方位移(EMSD):</p>
<p><em><code>In [32]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">em <span class="token operator">=</span> tp<span class="token punctuation">.</span>emsd<span class="token punctuation">(</span>tm<span class="token punctuation">,</span> <span class="token number">100</span><span class="token operator">/</span><span class="token number">285.</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token comment"># microns per pixel = 100/285., frames per second = 24</span></code></pre>

<p><em><code>In [33]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>em<span class="token punctuation">.</span>index<span class="token punctuation">,</span> em<span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_xscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>ylabel<span class="token operator">=</span><span class="token string">r'$\langle \Delta r^2 \rangle$ [$\mu$m$^2$]'</span><span class="token punctuation">,</span>
       xlabel<span class="token operator">=</span><span class="token string">'lag time $t$'</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>ylim<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1e-2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>

<p><em><code>Out [33]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEc0nH.png" loading="lazy"></p>
<p>我们可以很容易地将这个集合的均方位移拟合到幂律$At^n$上，使用一个方便的函数<code>fit_powerlaw</code>，它在对数空间中执行线性回归。</p>
<p><em><code>In [34]:</code></em></p>
<pre class="language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">r'$\langle \Delta r^2 \rangle$ [$\mu$m$^2$]'</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'lag time $t$'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tp<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>fit_powerlaw<span class="token punctuation">(</span>em<span class="token punctuation">)</span>  <span class="token comment"># 图中在对数空间执行最佳线性拟合</span></code></pre>

<p><em><code>Out [34]</code></em></p>
<p><img src="https://s1.ax1x.com/2022/06/27/jEcyNt.png" loading="lazy"></p>
<table>
<thead>
<tr>
<th></th>
<th>n</th>
<th>A</th>
</tr>
</thead>
<tbody><tr>
<td>msd</td>
<td>1.0787</td>
<td>1.595089</td>
</tr>
</tbody></table>
<p>在水中，粘性物质，期望幂律指数$n&#x3D;1$。$A&#x3D;4D$，其中$D$为粒子的扩散系数。$D$通过Stokes-Einstein方程与粘度$\eta$、粒子半径$r$、温度$T$有关:<br>$$<br>D &#x3D; \frac{k_BT}{6\pi\eta r}<br>$$<br>kB是玻尔兹曼常数。对于直径为1 μm的颗粒在室温水中，a≈1.66 μm2&#x2F;s。上面n和A的值离我们不远了。(如果你想了解更多关于这个测量和它的不确定度，<a href="https://dx.doi.org/10.1119/1.4803529">这篇文章</a>是一个深入的讨论在高等本科水平。)</p>
]]></content>
      <categories>
        <category>科学计算</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>图像追踪</tag>
        <tag>数据处理</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux USB (安装篇)</title>
    <url>/posts/7879abfb/</url>
    <content><![CDATA[<blockquote>
<p>本文希望能尽可能地帮助没有任何基础知识但对Linux十分感兴趣的同学完成Arch Linux的安装，但本文不以安装为目的，而以学习为目的。</p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我从上个暑假开始接触Linux，当时正值新冠疫情网课，家里的电脑和我同一个辈分，是WinXP的系统，有各种弹窗，运行速度令人担忧,并且WinXP已经停止维护了。于是上网查了一下，发现了这篇文章<a href="https://madmalls.com/blog/post/install-bodhi-linux-distribution-on-old-pc/">安装Bodhi Linux让老旧电脑重新焕发活力</a>,于是开始了Linux的奇妙旅程。后来又了解到Arch Linux，便经过了一番努力，拥有了自己的U盘上的Arch Linux。它的确帮助我解决了不少问题，也让我学会了新的知识。</p>
<p>现在，有许多同学问我Linux学起来难吗，要花费多少精力，我也清楚没有任何基础接触Linux的尴尬，于是我想写下这篇文章，帮助大家减轻心理负担。</p>
<span id="more"></span>

<p>下面，请允许我把读者视为只会在Windows上点点鼠标的初学者。我会把基本的概念一一解释，其中也有不少废话，有能力的人请自行跳过。</p>
<h1 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h1><h2 id="心理准备-可跳"><a href="#心理准备-可跳" class="headerlink" title="心理准备(可跳)"></a>心理准备(可跳)</h2><p>学习Arch Linux，至少就我而言，是一件趣事。不必太心急，遇到一个困难，解决一个困难，每解决一个困难都会有巨大的成就感。</p>
<p>遇到困难，要学会自己寻找解决方法，<a href="https://wiki.archlinux.org/">ArchWiki</a>是你第一个应该参考的，如果不行，便要善用其他网络资源。</p>
<p>当然，你也可以向其他人寻求帮助。(Feel free to ask me!<em>虽然我的回答不一定及时</em>)</p>
<h2 id="物质准备"><a href="#物质准备" class="headerlink" title="物质准备"></a>物质准备</h2><p>一台计算机，网络，两个USB。</p>
<ul>
<li>计算机没有要求</li>
<li>网络最好是有线网，因为Arch的安装需要通过网络来获取，有线连接较稳定。</li>
<li>为了方便，我们把一个U盘叫作系统盘，另一个称作引导盘。系统盘就是最终安装Arch Linux的U盘，读写速度要快（USB3.0差不多了），容量要大（毕竟以后作为使用，要装软件，要放文件。我使用的是32G的USB3.0，有需求的可以再大，有钱的可以直接用移动硬盘。）</li>
</ul>
<h2 id="基础问答-可跳"><a href="#基础问答-可跳" class="headerlink" title="基础问答(可跳)"></a>基础问答(可跳)</h2><ul>
<li><p>什么是Linux?</p>
<p>和Windows、Mac一样，Linux也是一种操作系统。操作系统，换言之，就是计算机的思想，由她来管理整个计算机。Linux还有传奇的发展历史，有兴趣的同学可以自行搜索。</p>
</li>
<li><p>为什么使用Linux?</p>
<p>我的建议是有钱当然可以选择Mac，打游戏就基本是Windows了。根据我使用Linux的经历来看，Linux有以下特点：</p>
<ul>
<li>开源（请自行搜索开源协议）</li>
<li>安全（这也是开源带来的好处，毕竟源码公开，没人往里面塞病毒）</li>
<li>稳定（大部分服务器都使用Linux，可以一直跑很多年）</li>
<li>快速（Linux对计算机的要求很低，绝大部分的运行都很出色）</li>
</ul>
<hr>
<p>总而言之，如果你烦透了Windows的各种推销、各种坑钱，那么Linux可以给你纯朴、高效的体验。</p>
</li>
<li><p>为什么选择Arch Linux？</p>
<p>Linux有许多发行版包括著名的RedHat、CentOS、Debian、Ubuntu等等。大家可以看看Archwiki的<a href="https://wiki.archlinux.org/title/Arch_Linux_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">官方描述</a>，事实上Arch拥有所有Linux发行版中最大的软件仓库，提供了可高度定制化的环境，可以说是个人用户的首选。</p>
</li>
<li><p>为什么安装在U盘上？</p>
<p>现在大家去买电脑，都会送Windows系统，盗版的系统也到处都是，Windows也能满足正常的办公，没有必要把Linux装在硬盘上了。而装在U盘上的系统可以随身携带，加上Archlinux的高度适应性，就可以在几乎任何一台别人的计算机上使用自己的系统了，隐私性也很高。</p>
</li>
</ul>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul>
<li>所有命令输入完毕按<code>Enter</code>执行</li>
<li>命令可以用<code>Tab</code>键补全</li>
<li>Live环境中大写锁定切换为<code>Shift+CapsLk</code>，chroot环境为<code>CapsLk</code></li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>先贴一下参考链接：</p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Installatino guide–Archwiki</a></p>
<p><a href="https://mags.nsupdate.info/arch-usb.html">ArchLinux USB</a></p>
<p><a href="https://wiki.archlinux.org/title/Install_Arch_Linux_on_a_removable_medium_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Install Arch Linux on a removable medium (简体中文)</a></p>
<h2 id="准备启动盘"><a href="#准备启动盘" class="headerlink" title="准备启动盘"></a>准备启动盘</h2><ol>
<li><p>下载安装镜像</p>
<p><a href="https://archlinux.org/download/">镜像站</a>，找到China,选择镜像站（随便选），下载archlinux-  -x86_64.iso</p>
</li>
<li><p>刻录U盘（启动盘）</p>
<ul>
<li><p>Linux系统</p>
<p>直接使用dd命令</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/路径/arch<span class="token punctuation">..</span>.iso <span class="token assign-left variable">of</span><span class="token operator">=</span>/dev/sdx	<span class="token comment"># /dev/sdx为启动盘的位置</span></code></pre>


</li>
<li><p>Windows系统</p>
<p>使用刻录软件，如<a href="https://rufus.ie/zh/">Rufus</a>，<a href="https://cn.ultraiso.net/">ultraiso</a>，等。</p>
</li>
</ul>
</li>
</ol>
<h2 id="进入Live环境"><a href="#进入Live环境" class="headerlink" title="进入Live环境"></a>进入Live环境</h2><p>将启动盘插入计算机，开机，进入主板</p>
<p>有些主板在开机界面会有按键提示（请注意界面左下角）进入bios（主板）；如果没有，可以根据自己的主板型号搜索。将Secure Boot设置为disabled以禁用安全启动，然后允许U盘启动。具体请搜索bios设置u盘启动。</p>
<p>进入启动菜单，选择自己的启动盘，启动</p>
<h2 id="系统盘分区（以UEFI启动，32G的U盘为例）"><a href="#系统盘分区（以UEFI启动，32G的U盘为例）" class="headerlink" title="系统盘分区（以UEFI启动，32G的U盘为例）"></a>系统盘分区（以UEFI启动，32G的U盘为例）</h2><p><a href="https://wiki.archlinux.org/title/Partitioning_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%B8%83%E5%B1%80%E7%A4%BA%E4%BE%8B">分区</a>是将硬盘的可用空间划分为多个可以独立访问的区块。</p>
<p>每个分区在使用前需要格式化为 <a href="https://wiki.archlinux.org/title/File_systems_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">文件系统</a> 。</p>
<p>分区信息被存放在分区表中。目前有两种主流的模式：传统的 <a href="https://wiki.archlinux.org/title/Master_Boot_Record">Master Boot Record</a> 和新的 <a href="https://wiki.archlinux.org/title/GUID_Partition_Table">GUID Partition Table</a>。后者功能更强大，解决了许多MBR的限制。</p>
<ul>
<li><p>根分区</p>
<p>根目录是目录树的顶层，这里是主文件系统挂载和其他文件系统挂靠的地方。所有文件和目录都在根目录 <code>/</code> 显示，即使它们实际上存储在其他的物理设备上。根文件系统中的内容应该足以启动、恢复、修复系统。因此 <code>/</code> 目录下的特定目录是不能作为独立分区的。</p>
<p><code>/</code> 分区或叫根分区是最重要而且必需的，需要最先挂载，其他其他分区可以被它取代。</p>
</li>
<li><p>EFI系统分区</p>
<p>EFI 系统分区(也称为 ESP 或者 EFISYS)是一个 FAT32 格式的物理分区 (在硬盘主分区表上，而不是 LVM 或软件 RAID 等等) ，从这里 UEFI 固件启动 UEFI 引导器和应用程序。</p>
<p>它与操作系统无关而是作为 EFI 固件要启动的引导器和应用程序的存储空间，是 UEFI 启动所必须。</p>
<p>推荐使用 GPT 和 UEFI 搭配因为有的 UEFI 固件不支持 UEFI-MBR 启动。</p>
<ul>
<li>交换空间（可选）	参阅：<a href="https://wiki.archlinux.org/title/Swap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%BA%A4%E6%8D%A2%E6%96%87%E4%BB%B6">swap</a></li>
</ul>
<p>交换空间通常是一个磁盘分区，但是也可以是一个文件。用户可以在安装 Arch Linux 的时候创建交换空间，或者在安装后的任何时间建立交换空间。交换空间可用于两个目的，将虚拟内存扩大到超过已安装的物理内存的容量，也可用于 <a href="https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate">suspend-to-disk</a> 支持。</p>
<p>使用swap扩展您的虚拟内存是否有好处取决与您的物理内存。如果物理内存不足以支撑您日常使用全部的程序的话（体现在日常使用时内存满了导致的卡顿，死机），使用swap<em>也许</em>会对您有些帮助。这样可以避免 out of memory conditions，Linux内核OOM Killer机制将尝试通过杀进程的方式来自动释放内存。如果您想让虚拟内存足够使用，请添加相应的差值（或更多）作为交换空间。</p>
<p>启用交换的最大缺点是性能较低，请参阅：<a href="https://wiki.archlinux.org/title/Swap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96">#性能优化</a>。因此，启用swap是个人喜好问题：当物理内存用完时，有些人更喜欢杀死程序而不是启用交换，而另一些人更喜欢启用交换和较慢的系统。</p>
<blockquote>
<p>由于U盘的空间有限，加上现在的计算机内存越来越大，在这里我不推荐使用swap分区。如果你使用固态硬盘并且有需求，可以自己增加。</p>
</blockquote>
</li>
<li><p>目录</p>
<p>Linux系统使用目录树的形式对硬盘（包括虚拟内存盘）进行读取，所有其他目录都挂载在&#x2F;目录下，再依次挂载下去。</p>
<p>&#x2F;目录下面挂有如下目录：bin boot dev etc home lib lib64 mnt opt proc root run sbin srv sys tmp usr var .这些目录中我们涉及到<code>/boot</code>  <code>/home</code>  需要了解。</p>
<ul>
<li><p>&#x2F;boot</p>
<p><code>/boot</code> 分区包含内核、ramdisk 镜像以及 bootloader 配置文件和 bootloader stage。它也可以存放内核在执行用户态程序之前所使用的其他数据。<code>/boot</code> 在日常系统运行中并不需要，只在启动和内核升级（包括重建initial ramdisk）的时候用到。</p>
</li>
<li><p>&#x2F;home</p>
<p><code>/home</code>目录包含用户定义的配置文件、缓存、应用程序数据和媒体文件。简单来说<code>/home</code>就是用户个人场所。</p>
<blockquote>
<p>可以设置home分区并将其挂载在<code>/home</code>下，当然，如果U盘大小不允许，也可以不设置，我个人是不使用的（32G的U盘）</p>
</blockquote>
</li>
</ul>
</li>
<li></li>
</ul>
<table>
<thead>
<tr>
<th>挂载点</th>
<th>分区</th>
<th>分区类型</th>
<th>建议大小</th>
</tr>
</thead>
<tbody><tr>
<td><code>/mnt/boot/efi</code></td>
<td><code>/dev/*efi_system_partition（efi 系统分区）*</code></td>
<td><a href="https://wiki.archlinux.org/title/EFI_system_partition_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">EFI 系统分区</a></td>
<td>至少 260 MiB</td>
</tr>
<tr>
<td><code>/mnt</code></td>
<td><code>/dev/*root_partition（根分区）*</code></td>
<td>Linux x86-64 根目录 (&#x2F;)</td>
<td>自定义（<code>/分区</code>要用于安装软件，20~50G即可）</td>
</tr>
<tr>
<td><code>/home</code></td>
<td><code>/dev/*home_partition（home分区）*</code></td>
<td>Linux home</td>
<td>自定义</td>
</tr>
</tbody></table>
<ul>
<li><p>建立硬盘分区</p>
<p>将系统盘插入计算机，在Live环境中使用fdisk命令查看分区（也可以使用lsblk)，并创建分区（也可以使用cfdisk等）。以下以fdisk为例：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> -l		<span class="token comment"># 查看分区</span></code></pre>

<p>找到自己的系统盘</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">Disk /dev/nvme0n1: <span class="token number">476.94</span> GiB, <span class="token number">512110190592</span> bytes, <span class="token number">1000215216</span> sectors
Disk model: SAMSUNG MZVLB512HBJQ-000L2              
Units: sectors of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
Disklabel type: gpt
Disk identifier: 9192D0F6-8CA5-465B-9B8C-B68598D3ED72

Device             Start        End   Sectors   Size Type
/dev/nvme0n1p1      <span class="token number">2048</span>     <span class="token number">534527</span>    <span class="token number">532480</span>   260M EFI System
/dev/nvme0n1p2    <span class="token number">534528</span>     <span class="token number">567295</span>     <span class="token number">32768</span>    16M Microsoft reserved
/dev/nvme0n1p3    <span class="token number">567296</span>  <span class="token number">419997695</span> <span class="token number">419430400</span>   200G Microsoft basic data
/dev/nvme0n1p4 <span class="token number">419997696</span>  <span class="token number">788451327</span> <span class="token number">368453632</span> <span class="token number">175</span>.7G Microsoft basic data
/dev/nvme0n1p5 <span class="token number">788451328</span>  <span class="token number">998164479</span> <span class="token number">209713152</span>   100G Microsoft basic data
/dev/nvme0n1p6 <span class="token number">998166528</span> <span class="token number">1000214527</span>   <span class="token number">2048000</span>  1000M Windows recovery environment


Disk /dev/sda: <span class="token number">28.65</span> GiB, <span class="token number">30765219840</span> bytes, <span class="token number">60088320</span> sectors
Disk model:  SanDisk <span class="token number">3</span>.2Gen1
Units: sectors of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
Disklabel type: gpt
Disk identifier: D59BCF13-45C9-4E42-8034-0E098AEDFC88

Device      Start      End  Sectors  Size Type
/dev/sda1    <span class="token number">2048</span>   <span class="token number">616447</span>   <span class="token number">614400</span>  300M EFI System
/dev/sda2  <span class="token number">616448</span> <span class="token number">60088286</span> <span class="token number">59471839</span> <span class="token number">28</span>.4G Linux root <span class="token punctuation">(</span>x86<span class="token punctuation">)</span>

</code></pre>

<p>在这里（实例中）就是<code>/dev/sda</code>，可以看到我的U盘是SanDisk 3.2Gen1</p>
<p>细心的同学可以发现32G的U盘只有28.65G</p>
<blockquote>
<p>这是计算方法不同造成的</p>
<p>存储制造商为了计算方便，使用十进制计算方法，是以1000(103)为换算单位的，即1GB&#x3D;1000MB  ;而计算机使用二进制，系统是用1024(210)为换算单位的，即1GB&#x3D;1024MB  。这样计算机识别出的U盘容量就要小于U盘生产厂标称的容量，实际使用容量约为标示容量的90%左右。因此，所有U盘的实际容量都要小于标注容量，一般来说，8G为7.45G左右，16G为14.9G左右，以此类推。</p>
<p>因为存储的最小单位为字节(Byte)以16G的U盘为例，计算如下:</p>
<p>制造商计算的容量为:16G&#x3D;16<em>1000</em>1000*1000(Byte)&#x3D;16000000(Bytes)</p>
<p>而系统计算的实际容量应为:</p>
<p>16000000&#x2F;1024&#x2F;1024&#x2F;1024&#x3D;14.9012(GB)</p>
<p>得出的结果和14.7GB差不多。</p>
<p>1KB&#x3D;1000Bytes</p>
<p>1MB&#x3D;1000KB</p>
<p>1GB&#x3D;1000MB 。</p>
<p>而操作系统的换算则为</p>
<p>1KB&#x3D;1024Bytes</p>
<p>1MB&#x3D;1024KB</p>
<p>1GB&#x3D;1024MB 。</p>
<p>这就产生了存储设备标配容量和实际使用容量出现差异的情况。</p>
</blockquote>
<p>创建分区(以<code>/dev/sda</code>为例，32G的U盘，300M的EFI分区，剩余都划给根分区)</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> /dev/sda</code></pre>

<p>先按<code>m</code> for help(按下m然后Enter回车)，如下帮助</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">Help:
GPT
M   enter protective/hybrid MBR

Generic
d   delete a partition
F   list <span class="token function">free</span> unpartitioned space
l   list known partition types
n   <span class="token function">add</span> a new partition
p   print the partition table
t   change a partition <span class="token builtin class-name">type</span>
<span class="token function">v</span>   verify the partition table
i   print information about a partition

Misc
m   print this menu
x   extra functionality <span class="token punctuation">(</span>experts only<span class="token punctuation">)</span>

Script
I   load disk layout from sfdisk script <span class="token function">file</span>
O   dump disk layout to sfdisk script <span class="token function">file</span>

Save <span class="token operator">&amp;</span> Exit
w   <span class="token function">write</span> table to disk and <span class="token builtin class-name">exit</span>
q   quit without saving changes

Create a new label
g   create a new empty GPT partition table
G   create a new empty SGI <span class="token punctuation">(</span>IRIX<span class="token punctuation">)</span> partition table
o   create a new empty DOS partition table
s   create a new empty Sun partition table</code></pre>

<ol>
<li><p><code>g</code>创建新的GPT分区表</p>
</li>
<li><p><code>n</code>创建第一个新分区，起始位置默认即可（按下Enter),终止位置<code>:+300M</code></p>
</li>
<li><p><code>n</code>创建第二个新分区，都默认。</p>
</li>
<li><p><code>t</code>改变分区类型</p>
<blockquote>
<p>不同的分区类型有不同的UUID，可以理解为有不同的身份证明，便于操作系统识别，在之后会有用处</p>
</blockquote>
<p>选择<code>1</code>，即我们的300M的EFI分区</p>
<p><code>l</code>查看分区类型的种类，列出部分如下：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span> EFI System                     C12A7328-F81F-11D2-BA4B-00A0C93EC93B
<span class="token number">2</span> MBR partition scheme           024DEE41-33E7-11D3-9D69-0008C781F39F
<span class="token number">3</span> Intel Fast Flash               D3BFE2DE-3DAF-11DF-BA40-E3A556D89593
<span class="token number">4</span> BIOS boot                      <span class="token number">21686148</span>-6449-6E6F-744E-656564454649
<span class="token number">5</span> Sony boot partition            F4019732-066E-4E12-8273-346C5641494F
<span class="token number">6</span> Lenovo boot partition          BFBFAFE7-A34F-448A-9A5B-6213EB736C22
<span class="token number">7</span> PowerPC PReP boot              9E1A2D38-C612-4316-AA26-8B49521E5A8B
<span class="token number">8</span> ONIE boot                      7412F7D5-A156-4B13-81DC-867174929325
<span class="token number">9</span> ONIE config                    D4E6E2CD-4469-46F3-B5CB-1BFF57AFC149
<span class="token number">10</span> Microsoft reserved             E3C9E316-0B5C-4DB8-817D-F92DF00215AE
<span class="token number">11</span> Microsoft basic data           EBD0A0A2-B9E5-4433-87C0-68B6B72699C7
<span class="token number">12</span> Microsoft LDM metadata         5808C8AA-7E8F-42E0-85D2-E1E90434CFB3
<span class="token number">13</span> Microsoft LDM data             AF9B60A0-1431-4F62-BC68-3311714A69AD
<span class="token number">14</span> Windows recovery environment   DE94BBA4-06D1-4D40-A16A-BFD50179D6AC
<span class="token number">15</span> IBM General Parallel Fs        37AFFC90-EF7D-4E96-91C3-2D7AE055B174
<span class="token number">16</span> Microsoft Storage Spaces       E75CAF8F-F680-4CEE-AFA3-B001E56EFC2D
<span class="token number">17</span> HP-UX data                     75894C1E-3AEB-11D3-B7C1-7B03A0000000
<span class="token number">18</span> HP-UX <span class="token function">service</span>                  E2A1E728-32E3-11D6-A682-7B03A0000000
<span class="token number">19</span> Linux swap                     0657FD6D-A4AB-43C4-84E5-0933C84B4F4F
<span class="token number">20</span> Linux filesystem               0FC63DAF-8483-4772-8E79-3D69D8477DE4
<span class="token number">21</span> Linux server data              3B8F8425-20E0-4F3B-907F-1A25A76F98E8
<span class="token number">22</span> Linux root <span class="token punctuation">(</span>x86<span class="token punctuation">)</span>               <span class="token number">44479540</span>-F297-41B2-9AF7-D131D5F0458A
<span class="token number">23</span> Linux root <span class="token punctuation">(</span>x86-64<span class="token punctuation">)</span>            4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709 </code></pre>

<p><code>：q </code> 退出查看</p>
<p>选择1 EFI System</p>
<p>再<code>t</code>改变类型，选择2,即我们的根分区，选择23 Linux root (x86-64)</p>
</li>
<li><p><code>p</code>打印当前分区表</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">Disk /dev/sda: <span class="token number">28.65</span> GiB, <span class="token number">30765219840</span> bytes, <span class="token number">60088320</span> sectors
Disk model:  SanDisk <span class="token number">3</span>.2Gen1
Units: sectors of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
Disklabel type: gpt
Disk identifier: D59BCF13-45C9-4E42-8034-0E098AEDFC88

Device      Start      End  Sectors  Size Type
/dev/sda1    <span class="token number">2048</span>   <span class="token number">616447</span>   <span class="token number">614400</span>  300M EFI System
/dev/sda2  <span class="token number">616448</span> <span class="token number">60088286</span> <span class="token number">59471839</span> <span class="token number">28</span>.4G Linux root <span class="token punctuation">(</span>x86<span class="token punctuation">)</span>

</code></pre>

<p>如图，我们创建了两个分区，一个为<code>/dev/sda1</code>，是EFI分区；一个为<code>/dev/sda2</code>，是根分区。</p>
</li>
<li><p><code>w</code>保存并退出（写入新的分区表）</p>
</li>
<li><p>格式化分区（决定分区的<a href="https://wiki.archlinux.org/title/File_systems_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">文件系统</a>）</p>
<blockquote>
<p>文件系统控制数据的读和写。如果没有文件系统，储存介质里的信息就会变成一块无法理解的数据。通过把数据分块、命名，不同的信息就可以被隔离、分辨。每组数据被命名为“文件”是取自纸质信息系统的命名方式。而“文件系统”是指用于管理信息的分组和命名的结构和逻辑规则。</p>
<p>文件系统有很多，每个磁盘分区可以而且只可以使用其中的某一个。每种文件系统有自己的优缺点和独有特性。</p>
</blockquote>
<p>EFI分区需要fat32格式，<code>/</code>分区需要ext4格式，如果创建了home分区（可以选择ext4格式，读写较快；也可以选择ntfs或exfat，便于与Windows进行数据交换，Windows无法识别ext4）</p>
<p>分区格式化命令：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">mkfs.fat -F32 /dev/sda1		<span class="token comment"># EFI分区</span>
mkfs.ext4 /dev/sda2		<span class="token comment"># /分区</span>
<span class="token function">mkswap</span> /dev/swap_partition		<span class="token comment"># 交换分区</span>
mkfs.ntfs /dev/home_partition		<span class="token comment"># home分区格式化为ntfs</span>
mkfs.exfat /dev/home_partition		<span class="token comment"># home分区格式化为exfat</span></code></pre>

<p>可以给分区加上Lable(卷标，也就是名字)，则命令如下：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">mkfs.fat -F32 /dev/sda1 -n <span class="token string">"名字"</span>
mkfs.ext4 /dev/sda2 -L <span class="token string">"名字"</span>
<span class="token function">mkswap</span> /dev/swap_partition
mkfs.ntfs -f /dev/home_partition -L <span class="token string">"名字"</span>	<span class="token comment"># -f表示快速格式化，最好加上</span>
mkfs.exfat /dev/home_partition -L <span class="token string">"名字"</span></code></pre>

<blockquote>
<p>将home分区格式化为ext4之外的格式并写入fstab默认挂载会使得该分区的所有者为root，新建用户后出现权限问题，请做好调试的准备——2022&#x2F;2&#x2F;8更新</p>
</blockquote>
</li>
<li><p>挂载分区</p>
<p>先回忆一下表格</p>
<table>
<thead>
<tr>
<th>挂载点</th>
<th>分区</th>
<th>分区类型</th>
<th>建议大小</th>
</tr>
</thead>
<tbody><tr>
<td><code>/mnt/boot/efi</code></td>
<td><code>/dev/*efi_system_partition（efi 系统分区）*</code>  我们的<code>/dev/sda1</code></td>
<td><a href="https://wiki.archlinux.org/title/EFI_system_partition_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">EFI 系统分区</a></td>
<td>至少 260 MiB</td>
</tr>
<tr>
<td><code>/mnt</code></td>
<td><code>/dev/*root_partition（根分区）*</code>  我们的&#x2F;<code>dev/sda2</code></td>
<td>Linux x86-64 根目录 (&#x2F;)</td>
<td>自定义（<code>/分区</code>要用于安装软件，20~50G即可）</td>
</tr>
<tr>
<td><code>/home</code></td>
<td><code>/dev/*home_partition（home分区）*</code></td>
<td>Linux home</td>
<td>自定义</td>
</tr>
</tbody></table>
<ul>
<li><p>挂载根分区</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/sda2 /mnt</code></pre>
</li>
<li><p>挂载EFI分区(不推荐现在挂载，因为EFI分区只在启动时被读取，内核启动后就没用了，所以没有必要写入fstab默认挂载，可以在<a href="#EFI%E6%8C%82%E8%BD%BD">后面</a>挂载) —— <code>2022/2/8更新</code></p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /mnt/boot
<span class="token function">mkdir</span> /mnt/boot/efi
<span class="token function">mount</span> /dev/sda1 /mnt/boot/efi</code></pre>
</li>
<li><p>挂载home分区</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /mnt/home
<span class="token function">mount</span> /dev/home_partition /mnt/home</code></pre>
</li>
<li><p>启用swap分区</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">swapon</span> /dev/swap_partition</code></pre></li>
</ul>
<blockquote>
<p><code>mkdir</code>就是新建一个文件夹，<code>mount</code>就是把分区挂载到某个文件夹下使其能被访问</p>
</blockquote>
</li>
</ol>
</li>
</ul>
<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><ul>
<li><p>联网</p>
<ul>
<li><p>有线网</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">dhcpcd</code></pre>
</li>
<li><p>无线网</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">iwctl		<span class="token comment"># 进入iwd的交互界面</span>
<span class="token punctuation">[</span>iwd<span class="token punctuation">]</span><span class="token comment"># help		# 查看帮助</span>
<span class="token punctuation">[</span>iwd<span class="token punctuation">]</span><span class="token comment"># device list		#查看网卡</span>
<span class="token punctuation">[</span>iwd<span class="token punctuation">]</span><span class="token comment"># station wlan0 scan		# 扫描</span>
<span class="token punctuation">[</span>iwd<span class="token punctuation">]</span><span class="token comment"># station wlan0 get-networks		# 查看网络</span>
<span class="token punctuation">[</span>iwd<span class="token punctuation">]</span><span class="token comment"># station wlan0 connect ****		# 连接</span>
<span class="token punctuation">[</span>iwd<span class="token punctuation">]</span><span class="token comment"># exit		# 退出交互界面</span></code></pre>
</li>
<li><p>有线网（静态ip）</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> l	<span class="token comment"># 查看网卡</span>
<span class="token function">ip</span> l <span class="token builtin class-name">set</span> enps0<span class="token punctuation">(</span>网卡<span class="token punctuation">)</span> up	<span class="token comment"># 打开网卡</span>
<span class="token function">ip</span> a <span class="token function">add</span> <span class="token number">192.168</span>.17.201/24 dev enps0	<span class="token comment"># 加入ip根据自己的</span>
<span class="token function">ip</span> r <span class="token function">add</span> default via <span class="token number">192.168</span>.17.1	<span class="token comment"># 增加网关，与上面对应</span></code></pre>
</li>
<li><p>检查网络连接</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ping</span> -c <span class="token number">4</span> www.baidu.com</code></pre>

<p>出现如下则成功</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">PING www.a.shifen.com <span class="token punctuation">(</span><span class="token number">182.61</span>.200.6<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from <span class="token number">182.61</span>.200.6 <span class="token punctuation">(</span><span class="token number">182.61</span>.200.6<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">50</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">28.1</span> ms
<span class="token number">64</span> bytes from <span class="token number">182.61</span>.200.6 <span class="token punctuation">(</span><span class="token number">182.61</span>.200.6<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">50</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30.5</span> ms
<span class="token number">64</span> bytes from <span class="token number">182.61</span>.200.6 <span class="token punctuation">(</span><span class="token number">182.61</span>.200.6<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">50</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30.5</span> ms
<span class="token number">64</span> bytes from <span class="token number">182.61</span>.200.6 <span class="token punctuation">(</span><span class="token number">182.61</span>.200.6<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">50</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">30.2</span> ms

--- www.a.shifen.com <span class="token function">ping</span> statistics ---
<span class="token number">4</span> packets transmitted, <span class="token number">4</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 3005ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">28.132</span>/29.863/30.549/1.007 ms

</code></pre></li>
</ul>
</li>
<li><p>安装</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pacstrap /mnt base linux linux-firmware base-devel <span class="token function">vim</span> <span class="token function">nano</span> dhcpcd iwd intel-ucode amd-ucode</code></pre>

<p>这一步就是将ArchLinux的内核、驱动、基本包、文本编辑器、联网工具、微码安装到<code>/mnt</code>即我们的根分区上</p>
</li>
</ul>
<ol>
<li><p>配置系统</p>
<ol>
<li><p>Fstab</p>
<p>用以下命令生成 <a href="https://wiki.archlinux.org/title/Fstab">fstab</a> 文件 (用 <code>-U</code> 或 <code>-L</code> 选项设置UUID 或卷标，前提是已经设置卷标)：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">genfstab -U /mnt <span class="token operator">>></span> /mnt/etc/fstab</code></pre>

<p>检查一下生成的 <code>/mnt/etc/fstab</code> 文件是否正确：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /mnt/etc/fstab</code></pre>
</li>
<li><p>Chroot</p>
<p><a href="https://wiki.archlinux.org/title/Change_root_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Change root</a> 到新安装的系统：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">arch-chroot /mnt</code></pre>
</li>
<li><p>本地化</p>
<p>程序和库如果需要本地化文本，都依赖 <a href="https://wiki.archlinux.org/title/Locale">Locale</a>，后者明确规定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准。</p>
<p>需在这两个文件设置：<code>locale.gen</code> 与 <code>locale.conf</code></p>
<p>编辑 <code>/etc/locale.gen</code>，然后取消掉 <code>en_US.UTF-8 UTF-8</code>和<code>zh_CN.UTF-8 UTF-8</code> 前的注释（#）。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">nano</span> /etc/locale.gen</code></pre>

<p>在nano中<code>Ctrl+w</code>可以查找，<code>Ctrl+x</code>退出(退出时按y确认修改，再按Enter)</p>
<p>接着执行 <code>locale-gen</code> 以生成 locale 信息：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">locale-gen</code></pre>

<p>然后创建 <a href="https://man.archlinux.org/man/locale.conf.5">locale.conf(5)</a> 文件</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"LANG=en_US.UTF-8"</span> <span class="token operator">>></span> /etc/locale.conf</code></pre>
</li>
<li><p>创建主机名</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"你自己取的主机名"</span> <span class="token operator">>></span> /etc/hostname</code></pre>

<p>编辑&#x2F;etc&#x2F;hosts（使用nano）如下：</p>
<pre class="language-none"><code class="language-none">127.0.0.1	localhost
::1		localhost
127.0.1.1	myhostname.localdomain	myhostname</code></pre>


</li>
<li><p>Initramfs(此步骤为U盘安装必需)</p>
<p>创建新的 initramfs</p>
<p><a href="https://wiki.archlinux.org/title/Mkinitcpio#Image_creation_and_activation">创建 RAM Disk</a> 前，修改 <code>/etc/mkinitcpio.conf</code>，将 <code>block</code> 和 <code>keyboard</code> 钩子移动到 <code>autodetect</code> 前面。只有这样生成的早期用户空间才能包含支持不同的系统硬件的模块。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">nano</span> /etc/mkinitcpio.conf</code></pre>

<p>将<code>HOOKS</code>(即钩子)修改如下：</p>
<pre class="language-none"><code class="language-none">HOOKS&#x3D;(base udev block keyboard autodetect modconf filesystems fsck)</code></pre>

<p>生成新的RAM Disk</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">mkinitcpio -P</code></pre>


</li>
<li><p>Root 密码</p>
<p>root是Linux中的管理员用户，拥有最高权限</p>
<p>设置 Root <a href="https://wiki.archlinux.org/title/Password">密码</a>：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span></code></pre>


</li>
<li><p>安装引导程序</p>
<p>因为这里需要使用Pacman（Archlinux的包管理器）安装软件，先修改Pacman的配置</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">nano</span> /etc/pacman.d/mirrorlist</code></pre>

<p>默认已经按照速度排序，先<code>Ctrl+\</code>将所有<code>Server</code>替换成<code>#Server</code>，再除去第一个<code>Server</code>的<code>#</code>即可</p>
<p>安装grub和efibootmgr</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pacman -Sy grub efibootmgr</code></pre>

<p><span id = EFI挂载>EFI挂载</span></p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p /boot/efi
<span class="token function">mount</span> /dev/sda1 /boot/efi</code></pre>

<p>——<code>2022/2/8更新</code></p>
<p>设置grub</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">grub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span>/boot/efi --removable --recheck </code></pre>

<p>生成 GRUB 配置：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg</code></pre>


</li>
<li><p>添加用户</p>
<p>正常情况下应该使用普通用户登录，故创建用户如下：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -m -g wheel -s /bin/bash username<span class="token punctuation">(</span>你的用户名<span class="token punctuation">)</span></code></pre>

<p>设置用户密码</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> username<span class="token punctuation">(</span>你的用户名<span class="token punctuation">)</span></code></pre>

<p>为用户添加sudo权限：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">nano</span> /etc/sudoers</code></pre>

<p>除去<code>## %wheel ALL=(ALL)ALL</code>前的<code>##</code></p>
</li>
<li><p>重启</p>
<p>输入 <code>exit</code> 或按 <code>Ctrl+d</code> 退出 chroot 环境。</p>
<p>执行<code>reboot</code>重启。</p>
</li>
<li><p>结束</p>
</li>
</ol>
</li>
</ol>
<hr>
<p>2022&#x2F;2&#x2F;8更新</p>
<p>有同学根据这篇文章完成了第一次ArchLinux的安装，并且发现其中有一些笔误和需要更新的地方而向我指出。在此感谢各位，Arch的安装经常有变化，希望大家发现问题后能够指出。</p>
<p>此外，由于部分主板不支持UEFI启动，在参考文章<a href="https://mags.nsupdate.info/arch-usb.html">ArchLinux USB</a>中已经有BIOS&amp;UEFI双引导的方案提高兼容性。由于现在大部分计算机都已支持UEFI，所以之前没有特别指出这一点。但是有同学遇到了不支持UEFI的情况，并已对此提供了详尽的解释和解决方案。<code>传送门</code>:<a href="https://g-dab.github.io/2022/01/16/mo-yao-ke/linux/archlinux/dui-zephyr-s-arch-de-usb-an-zhuang-de-yi-dian-bu-chong/">ggdab~~</a></p>
<p>再次感谢各位！</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux USB(配置篇)</title>
    <url>/posts/55b25ac5/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章看一看作是<a href="https://zephyrheather.github.io/2021/07/16/arch-linux-usb-an-zhuang-pian/">Arch Linux USB(安装篇)</a>的后续，不过archlinux的自由度很高，每一个人都能配置出高度个人定制化的东西，所以这里也只是结合archwiki和我个人的一些配置简单介绍一下。</p>
<span id="more"></span>

<p>参考：<a href="https://wiki.archlinux.org/title/General_recommendations_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%94%A8%E6%88%B7%E7%9A%84%E6%8E%A8%E8%8D%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">General recommendations (简体中文)</a>(这个页面还特地做了<a href="https://wiki.archlinux.org/title/General_recommendations_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%94%A8%E6%88%B7%E7%9A%84%E6%8E%A8%E8%8D%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">#中国大陆用户的推荐解决方案</a>)</p>
<p>以下引文不加注释都引自<a href="https://wiki.archlinux.org/title/General_recommendations_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%94%A8%E6%88%B7%E7%9A%84%E6%8E%A8%E8%8D%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">General recommendations (简体中文)</a></p>
<h2 id="系统和软件包管理"><a href="#系统和软件包管理" class="headerlink" title="系统和软件包管理"></a>系统和软件包管理</h2><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><blockquote>
<p>新安装的系统只有一个<a href="https://en.wikipedia.org/wiki/Superuser">超级用户</a>，即 root。使用 root 进行日常操作是不安全的。应当<a href="https://wiki.archlinux.org/title/User_Management_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">创建</a>普通用户进行日常操作，仅在管理系统时使用 root。不要在服务器上给 root 开放<a href="https://wiki.archlinux.org/title/SSH">SSH</a>登录权限。普通用户的创建方法请参阅 <a href="https://wiki.archlinux.org/title/Users_and_groups_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">用户和用户组</a>。</p>
<p><a href="https://wiki.archlinux.org/title/Users_and_groups_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">用户和用户组</a>是GNU&#x2F;Linux 权限控制机制的基础。管理员通过调整用户组的成员、所有者，可以控制用户使用系统资源。</p>
</blockquote>
<p>换言之，平常用普通用户，只有涉及系统管理时使用root的权限。可以用<code>sudo</code>命令获取临时的root权限，只要在命令前加上<code>sudo</code>就可以。而<code>su</code>命令则是以指定用户登录一个新的shell，比如<code>su - xxx</code>就是登录用户名为xxx的用户，而默认<code>su -</code>登录的就是root。使用<code>exit</code>退出<code>su</code>命令登录的用户，回到原来的shell。</p>
<p>服务管理：</p>
<blockquote>
<p>Arch Linux 使用 <a href="https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">systemd (简体中文)</a> 管理系统服务。新用户有必要了解其基本使用方法。通常使用 <code># systemctl</code> 命令进行系统管理，参见<a href="https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#systemd_%E5%9F%BA%E6%9C%AC%E5%B7%A5%E5%85%B7">此文</a>。</p>
</blockquote>
<p>注意，新的服务都需要用户重新设置和管理，设置哪些服务开机自启动，哪些服务在用的时候手动启动，可以减少资源浪费。</p>
<p>系统维护：</p>
<blockquote>
<p>Arch 是滚动发行系统，软件包的更新速度很快，用户需要花些时间进行 <a href="https://wiki.archlinux.org/title/System_maintenance">系统维护</a>。 <a href="https://wiki.archlinux.org/title/Security">安全</a>页面也给出了很多加强系统安全性的建议和技巧。</p>
</blockquote>
<p>微软总是催着你windows系统更新，但是Arch是自己手动更新的。经常看到有人说Arch这样的滚动发行版不稳定，容易滚挂。我反正从来没遇到过，Arch更新虽然是整个系统重新安装的，但是速度很快，而且也很稳定。</p>
<p>更新系统的时候使用<code>pacman -Syu</code>(要root权限)，注意不要在一堆服务和进程在运行的时候更新系统，最好在刚开机的时候在字符界面就更新，更新之后<code>reboot</code>重启就行。</p>
<p>虽然一般建议Arch经常更新，但是我曾经半年没更也没什么。就是有时候<code>pacman -Sy</code>安装软件的时候发现lib库和软件已经对不上了，那就更新系统吧。</p>
<p>另外，安装在USB或者移动硬盘等可移动介质的同学一定要注意，在使用过程中不要拔插，关机前最后一件事一定是<code>sync</code>确保数据同步写入。</p>
<h3 id="软件包管理"><a href="#软件包管理" class="headerlink" title="软件包管理"></a>软件包管理</h3><p>具体看archwiki学习</p>
<p>Arch拥有Linux中最丰富的软件包资源，由官方软件仓库和非官方软件仓库(AUR)组成。</p>
<p>Pacman 是Arch 的软件包管理器(简称包管理器)<br>下面列一些我常用的命令</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pacman -Sy 		<span class="token comment"># 更新软件源并安装</span>
pacman -Ss		<span class="token comment"># 搜索软件</span>
pacman -Si 		<span class="token comment"># 查看软件包具体信息</span>
pacman -Syu		<span class="token comment">#更新系统及所有包</span>
pacman -Qs		<span class="token comment"># 搜索已安装的包</span>
pacman -Qi		<span class="token comment"># 查看已安装的包的信息</span>
pacman -Rs		<span class="token comment"># 删除软件包及其依赖</span></code></pre>

<p>有关pacman的一些配置在&#x2F;etc&#x2F;pacman.conf，贴一下我的配置</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#</span>
<span class="token comment"># /etc/pacman.conf</span>
<span class="token comment">#</span>
<span class="token comment"># See the pacman.conf(5) manpage for option and repository directives</span>

<span class="token comment">#</span>
<span class="token comment"># GENERAL OPTIONS</span>
<span class="token comment">#</span>
<span class="token punctuation">[</span>options<span class="token punctuation">]</span>
<span class="token comment"># The following paths are commented out with their default values listed.</span>
<span class="token comment"># If you wish to use different paths, uncomment and update the paths.</span>
<span class="token comment">#RootDir     = /</span>
<span class="token comment">#DBPath      = /var/lib/pacman/</span>
<span class="token comment">#CacheDir    = /var/cache/pacman/pkg/</span>
<span class="token comment">#LogFile     = /var/log/pacman.log</span>
<span class="token comment">#GPGDir      = /etc/pacman.d/gnupg/</span>
<span class="token comment">#HookDir     = /etc/pacman.d/hooks/</span>
HoldPkg     <span class="token operator">=</span> pacman glibc
<span class="token comment">#XferCommand = /usr/bin/curl -L -C - -f -o %o %u</span>
<span class="token comment">#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u</span>
<span class="token comment">#CleanMethod = KeepInstalled</span>
Architecture <span class="token operator">=</span> auto

<span class="token comment"># Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup</span>
<span class="token comment">#IgnorePkg   =</span>
<span class="token comment">#IgnoreGroup =</span>

<span class="token comment">#NoUpgrade   =</span>
<span class="token comment">#NoExtract   =</span>

<span class="token comment"># Misc options</span>
<span class="token comment">#UseSyslog</span>
Color
ILoveCandy
<span class="token comment">#TotalDownload</span>
CheckSpace
<span class="token comment">#VerbosePkgLists</span>

<span class="token comment"># By default, pacman accepts packages signed by keys that its local keyring</span>
<span class="token comment"># trusts (see pacman-key and its man page), as well as unsigned packages.</span>
SigLevel    <span class="token operator">=</span> Required DatabaseOptional
LocalFileSigLevel <span class="token operator">=</span> Optional
<span class="token comment">#RemoteFileSigLevel = Required</span>

<span class="token comment"># NOTE: You must run `pacman-key --init` before first using pacman; the local</span>
<span class="token comment"># keyring can then be populated with the keys of all official Arch Linux</span>
<span class="token comment"># packagers with `pacman-key --populate archlinux`.</span>

<span class="token comment">#</span>
<span class="token comment"># REPOSITORIES</span>
<span class="token comment">#   - can be defined here or included from another file</span>
<span class="token comment">#   - pacman will search repositories in the order defined here</span>
<span class="token comment">#   - local/custom mirrors can be added here or in separate files</span>
<span class="token comment">#   - repositories listed first will take precedence when packages</span>
<span class="token comment">#     have identical names, regardless of version number</span>
<span class="token comment">#   - URLs will have $repo replaced by the name of the current repo</span>
<span class="token comment">#   - URLs will have $arch replaced by the name of the architecture</span>
<span class="token comment">#</span>
<span class="token comment"># Repository entries are of the format:</span>
<span class="token comment">#       [repo-name]</span>
<span class="token comment">#       Server = ServerName</span>
<span class="token comment">#       Include = IncludePath</span>
<span class="token comment">#</span>
<span class="token comment"># The header [repo-name] is crucial - it must be present and</span>
<span class="token comment"># uncommented to enable the repo.</span>
<span class="token comment">#</span>

<span class="token comment"># The testing repositories are disabled by default. To enable, uncomment the</span>
<span class="token comment"># repo name header and Include lines. You can add preferred servers immediately</span>
<span class="token comment"># after the header, and they will be used before the default mirrors.</span>

<span class="token comment">#[testing]</span>
<span class="token comment">#Include = /etc/pacman.d/mirrorlist</span>

<span class="token punctuation">[</span>core<span class="token punctuation">]</span>
Include <span class="token operator">=</span> /etc/pacman.d/mirrorlist

<span class="token punctuation">[</span>extra<span class="token punctuation">]</span>
Include <span class="token operator">=</span> /etc/pacman.d/mirrorlist

<span class="token comment">#[community-testing]</span>
<span class="token comment">#Include = /etc/pacman.d/mirrorlist</span>

<span class="token punctuation">[</span>community<span class="token punctuation">]</span>
Include <span class="token operator">=</span> /etc/pacman.d/mirrorlist

<span class="token comment"># If you want to run 32 bit applications on your x86_64 system,</span>
<span class="token comment"># enable the multilib repositories as required here.</span>

<span class="token comment">#[multilib-testing]</span>
<span class="token comment">#Include = /etc/pacman.d/mirrorlist</span>

<span class="token comment">#[multilib]</span>
<span class="token comment">#Include = /etc/pacman.d/mirrorlist</span>

<span class="token comment"># An example of a custom package repository.  See the pacman manpage for</span>
<span class="token comment"># tips on creating your own repositories.</span>
<span class="token comment">#[custom]</span>
<span class="token comment">#SigLevel = Optional TrustAll</span>
<span class="token comment">#Server = file:///home/custompkgs</span>

<span class="token punctuation">[</span>archlinuxcn<span class="token punctuation">]</span>
SigLevel <span class="token operator">=</span> Never
Server <span class="token operator">=</span> https://mirrors.ustc.edu.cn/archlinuxcn/<span class="token variable">$arch</span></code></pre>

<p>我的配置主要就是取消了<code>Color</code>前的注释，是Pacman 的输出是彩色的更易识别，然后<code>ILoveCandy</code>是我自己加上的，这是Pacman 的一个彩蛋，因为pacman也是那款叫作吃豆人的著名游戏，加上<code>ILoveCandy</code>后会出现吃豆人。</p>
<p>最后加上了archlinuxcn的源，因为里面提供了更多为中国用户进行优化的软件包，用的是科大的源，加上之后需要<code>pacman -S archlinuxcn-keyring</code>安装对应的密钥。</p>
<p>主要的pacman 镜像我用的是北外的镜像，在<code>/etc/pacman.d/mirrorlist</code>中更改，一般里面已经按照速度排序排好了，如果没有，可以参见 <a href="https://wiki.archlinux.org/title/Mirrors_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E9%95%9C%E5%83%8F%E7%8A%B6%E6%80%81">#镜像状态</a> 和 <a href="https://wiki.archlinux.org/title/Mirrors_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%8C%89%E9%80%9F%E5%BA%A6%E6%8E%92%E5%BA%8F">#按速度排序</a> 查看帮助选择镜像的工具。</p>
<p>当然也可以和我一样用北外的镜像(不推荐清华的镜像，至少我自己的使用不佳)</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">Server <span class="token operator">=</span> https://mirrors.bfsu.edu.cn/archlinux/<span class="token variable">$repo</span>/os/<span class="token variable">$arch</span></code></pre>

<p>其他镜像</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## China</span>
<span class="token comment">#Server = http://mirrors.163.com/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.aliyun.com/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.bfsu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.bfsu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.cqu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.cqu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.dgut.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.dgut.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.hit.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.hit.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirror.lzu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.neusoft.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.neusoft.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.nju.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.nju.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirror.redrock.team/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirror.redrock.team/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.sjtug.sjtu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.wsyu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.wsyu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = https://mirrors.xjtu.edu.cn/archlinux/$repo/os/$arch</span>
<span class="token comment">#Server = http://mirrors.zju.edu.cn/archlinux/$repo/os/$arch</span></code></pre>

<p>记得<code>pacman -S archlinux-keyring</code></p>
<hr>
<p>然后是<a href="https://wiki.archlinux.org/title/Arch_User_Repository_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">AUR</a> 的包。</p>
<blockquote>
<p>Arch 编译系统提供了编译官方库软件的脚本，而 <a href="https://wiki.archlinux.org/title/Arch_User_Repository_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">AUR</a> 则提供了用户提交的、非官方的软件包编译脚本。这是一个基于 <a href="https://aur.archlinux.org/index.php">web 界面</a>或通过 <a href="https://wiki.archlinux.org/title/AUR_helper_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">AUR 工具</a>访问的非官方软件仓库。</p>
</blockquote>
<p>aur里面有更多的软件包可以选择，当然由于是非官方，也会有无人维护的情况。</p>
<p>基于web界面是指，aur的包可以到<a href="https://aur.archlinux.org/">https://aur.archlinux.org/</a> 这个网页上去查找相关信息。</p>
<p>由于aur的包不能由pacman 直接安装，所以需要采取一下方法：</p>
<ol>
<li>从 AUR 下载包含 <a href="https://wiki.archlinux.org/title/PKGBUILD_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">PKGBUILD</a> 和其他安装文件（比如 <a href="https://wiki.archlinux.org/title/Systemd">systemd</a> 和补丁，通常不是实际代码）的 tar 包。</li>
<li>用命令 <code>tar -xvf packagename.tar.gz</code> 解包到一个仅用于编译 AUR 的空闲文件夹。</li>
<li>验证 <a href="https://wiki.archlinux.org/title/PKGBUILD_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">PKGBUILD</a> 和其它相关文件，确保其中不含有恶意代码。</li>
<li>在上述文件夹中运行 <code>makepkg -si</code>。命令会自动调用 <a href="https://wiki.archlinux.org/title/Pacman_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">pacman</a> 解决依赖关系，然后下载代码、编译并打包。然后安装软件包。</li>
</ol>
<p>我一般跳过了验证那一步，<del>(懒得验证)</del>，对AUR受信用户（简称 TU）展现出充分的信任</p>
<p>当然，使用<a href="https://wiki.archlinux.org/title/AUR_helper_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">AUR 工具</a> 会简单一些(因为上面那个方法其实也蛮简单了)</p>
<p>具体查看wiki，我用过yay，因为已经pacman封装了，所以语法和pacman一样。</p>
<h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><h3 id="从字符到图形"><a href="#从字符到图形" class="headerlink" title="从字符到图形"></a>从字符到图形</h3><p><code>pacman -Sy xorg-server</code>安装X服务器</p>
<blockquote>
<p><a href="https://en.wikipedia.org/wiki/X_Window_System">X 窗口管理系统</a>(<strong>X11</strong>或者<strong>X</strong>) 是基于网络的显示协议，提供了窗口功能，包含建立图形用户界面(GUI)的标准工具和协议。<a href="https://wiki.archlinux.org/title/Xorg_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Xorg</a>是X窗口系统11版本的开源实现，提供图形用户界面, 安装和配置请阅读<a href="https://wiki.archlinux.org/title/Xorg_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Xorg</a>。</p>
<p><a href="https://wiki.archlinux.org/title/Wayland_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Wayland</a> 是新的显示服务协议，Weston 是参考实现。目前还处于开发阶段，支持的程序很少。</p>
</blockquote>
<p>只有X能够进入图形界面了，不过只有最基本的框架，需要配合 <a href="https://wiki.archlinux.org/title/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83">桌面环境</a>(DE)才能使用。</p>
<blockquote>
<p>桌面环境通常提供图标、小程序（applets）、窗口、工具栏、文件夹、壁纸、应用程序和拖放等功能。使用<a href="https://wiki.archlinux.org/title/GNOME_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">GNOME</a>、<a href="https://wiki.archlinux.org/title/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">KDE</a>、<a href="https://wiki.archlinux.org/title/LXDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">LXDE</a>、<a href="https://wiki.archlinux.org/title/Xfce_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Xfce</a>这类<a href="https://wiki.archlinux.org/title/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83">桌面环境</a>，是最简单的配置方法. <a href="https://wiki.archlinux.org/title/Category:Desktop_environments">Category:Desktop environments</a> 包含了各种桌面环境。</p>
</blockquote>
<p>其中KDE和GNOME是两个功能完全的主流桌面环境，KDE体积更加大一点。由于U盘大小有限，我使用的是轻量化的Xfce。</p>
<p>对于Xfce，只需要<code>pacman Sy xfce4</code>，我没有使用额外的显示管理器(也就是从图形界面登录用户并自动启动图形界面)，一方面从字符界面启动更加轻量，另一方面并不是每一次都有进入图形界面的需要。Xfce自带从字符界面启动的命令<code>startxfce4</code></p>
<p>后来我更倾向于使用i3wm作为桌面环境，更加轻量快速， <a href="https://wiki.archlinux.org/title/Start_X_at_Login_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Start X at Login</a> 提供了直接从终端启动的轻量方法。i3wm的定制化程度更高，也意味着配置需要一定的精力，这里就不展开了。</p>
<h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><p>毫无疑问<code>pacman -Sy firefox</code></p>
<p>当你打开浏览器输入诸如<code>www.baidu.com</code>之类的中文网页，你会发现一堆矩形之类的乱码。</p>
<h3 id="从英文到中文"><a href="#从英文到中文" class="headerlink" title="从英文到中文"></a>从英文到中文</h3><p>因为你还没有安装字体，所以无法正常显示中文。</p>
<p><code>pacman -Sy wqy-microhei</code>文泉驿的中文字体之一。还有其他字体，可以自己去发现。</p>
<p>然后就能看到中文了。</p>
<p>同时在启动桌面环境的命令前加上指定用中文启动，就可以以中文为默认语言使用桌面环境，例：<code>LANG=zh_CN.UTF-8 startxfce4</code></p>
<h3 id="声音"><a href="#声音" class="headerlink" title="声音"></a>声音</h3><p>如果和我一样使用了轻量化的桌面环境，一般要手动调整声音，<code>pacman -Sy alsa-utils</code>安装声音配置相关的一些工具，其中<code>alsamixer</code>命令可以在终端中用类似图形化的方式调整声音</p>
<p>有时候没有声音还要设置默认声卡，有时候没有混音还得自己手动开启dmix.这里就不展开了。</p>
<h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><p>参见 <a href="https://wiki.archlinux.org/title/Fcitx_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Fcitx (简体中文)</a> 、 <a href="https://wiki.archlinux.org/title/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Fcitx5 (简体中文)</a> 或 <a href="https://wiki.archlinux.org/title/IBus_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Ibus</a>。</p>
<p>我使用的是Fcitx5，是fcitx的最新版本，<code>pacman -Sy fcitx5-im fcitx5-chinese-addons</code>，里面有图形界面的配置工具</p>
<p>欲在程序中正常启用 Fcitx5, 需设置以下环境变量，并重新登录：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">~/.pam_environment
-------------------------------------------------
GTK_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
QT_IM_MODULE  <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
<span class="token environment constant">XMODIFIERS</span>    <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>@im<span class="token operator">=</span>fcitx
INPUT_METHOD  <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
SDL_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
GLFW_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>ibus</code></pre>

<p>还有一个小工具在fcitx5上可以使用搜狗输入法的皮肤，大家自己查吧</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>类似于记事本的工具：leafpad或者mousepad</p>
<p>音乐：netease-cloud-music, yesplaymusic, iease-music(后两个都是网易云的第三方客户端，非常漂亮)</p>
<p>ofiice: <a href="https://wiki.archlinux.org/title/WPS_Office_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">WPS Office (简体中文)</a>或者<a href="https://wiki.archlinux.org/title/LibreOffice_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">LibreOffice (简体中文)</a></p>
<p>视频音频的播放： <a href="https://wiki.archlinux.org/title/VLC_media_player">VLC</a></p>
<p>邮件客户端：Mailspring (也是颜值很高，而且有一些实用的功能)</p>
<p>终端模拟器：**<a href="https://wiki.archlinux.org/title/Tilda">Tilda</a>** — 可配置的下拉终端模拟器(很方便，可以随时唤出)</p>
<p>其他的大家看<a href="https://wiki.archlinux.org/title/List_of_applications_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">List of applications</a>各取所需吧。</p>
<hr>
<p>希望看到大家自己的Arch！</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Linux配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux的私人配置</title>
    <url>/posts/170530f2/</url>
    <content><![CDATA[<pre class="language-none"><code class="language-none">base linux linux-firmware base-devel vim nano dhcpcd iwd intel-ucode amd-ucode zsh polkit xorg-server xorg-xinit i3-gaps xfce4-termianl fctix5-im fcitx5-chinese-addons fcitx5-pinyin-zhwiki fcitx5-pinyin-moegirl networkmanager network-manager-applet alsa-utils polybar maim ranger ristretto vlc firefox typora pandoc netease-cloud-music bat thunar neofetch ncdu xclip arch-install-scripts tmux archlinuxcn-key dmenu git wget ttf-lxgw-wenkai-mono picom feh ttf-font-awesome yay man-db xorg-xdpyinfo ssfconv sof-firmware bluez bluez-utils blueberry nodejs ddnet xf86-video-intel w3m clash</code></pre>

<div class="info">

<blockquote>
<p>本文为个人配置，长期更新。</p>
</blockquote>
</div>

<span id="more"></span>


<table>
<thead>
<tr>
<th>分类</th>
<th>软件</th>
<th>手动配置的</th>
</tr>
</thead>
<tbody><tr>
<td>系统</td>
<td>base linux linux-firmware base-devel intel-ucode amd-ucode polkit zsh</td>
<td>zsh</td>
</tr>
<tr>
<td>网络</td>
<td>dhcpcd iwd networkmanager network-manager-applet</td>
<td></td>
</tr>
<tr>
<td>声音</td>
<td>alsa-utils sof-firmware</td>
<td>alsa</td>
</tr>
<tr>
<td>字体</td>
<td>ttf-lxgw-wenkai-mono ttf-font-awesome</td>
<td></td>
</tr>
<tr>
<td>编辑器</td>
<td>vim nano typora</td>
<td>vim</td>
</tr>
<tr>
<td>文件管理</td>
<td>thunar ranger ncdu</td>
<td>ranger</td>
</tr>
<tr>
<td>图形界面</td>
<td>xorg-server xorg-xinit i3-gaps polybar xf86-video-intel picom feh dmenu</td>
<td>i3-gaps polybar</td>
</tr>
<tr>
<td>输入法</td>
<td>fctix5-im fcitx5-chinese-addons fcitx5-pinyin-zhwiki fcitx5-pinyin-moegirl ssfconv</td>
<td>fcitx5-im ssfconv</td>
</tr>
<tr>
<td>浏览器</td>
<td>firefox w3m</td>
<td></td>
</tr>
<tr>
<td>蓝牙</td>
<td>bluez bluez-utils blueberry</td>
<td></td>
</tr>
<tr>
<td>游戏</td>
<td>ddnet</td>
<td></td>
</tr>
<tr>
<td>终端</td>
<td>xfce4-termianl</td>
<td>xfce4-terminal</td>
</tr>
<tr>
<td>截屏</td>
<td>maim</td>
<td>maim</td>
</tr>
<tr>
<td>图像查看</td>
<td>ristretto feh</td>
<td></td>
</tr>
<tr>
<td>多媒体</td>
<td>vlc</td>
<td></td>
</tr>
<tr>
<td>文件转换</td>
<td>pandoc</td>
<td></td>
</tr>
<tr>
<td>音乐</td>
<td>netease-cloud-music</td>
<td></td>
</tr>
<tr>
<td>工具</td>
<td>bat xclip arch-install-scripts tmux git wget yay man-db xorg-xdpyinfo ssfconv clash</td>
<td>git</td>
</tr>
</tbody></table>
<hr>
<h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><p>这里是涉及系统层面的软件，大多不用配置，只做简单的介绍。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="base-amp-base-devel"><a href="#base-amp-base-devel" class="headerlink" title="base &amp; base-devel"></a>base &amp; base-devel</h3><p>base和base-devel都是软件包组，由一系列软件包组成，或称为元软件包(<a href="https://wiki.archlinux.org/title/Meta_package_and_package_group_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">meta package</a>)。</p>
<p>其中base包含了 Arch Linux 安装时需要的最小软件集，包含：</p>
<ul>
<li>基本的 glibc 和 bash</li>
<li>发行版相关工具如 pacman 和 systemd</li>
<li>POSIX 工具 core utilities、进程、文件、压缩工具等</li>
<li>网络工具 iproute2</li>
</ul>
<p><span class="heimu">是的，你没看错，<a href="https://wiki.archlinux.org/title/Kernel">kernel</a> 是可选依赖！内核不在最小安装里！</span></p>
<p>请参考<a href="https://archlinux.org/news/base-group-replaced-by-mandatory-base-package-manual-intervention-required/">发布说明</a> 和 <a href="https://lists.archlinux.org/archives/list/arch-dev-public@lists.archlinux.org/thread/GRX4NIR2AQVBUGYS4K4TKBS3HGSAS456/">为什么 base 是元软件包</a>。</p>
<h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>linux就是kernel(内核)，无需多说，有其他的内核可选，参见<a href="https://wiki.archlinux.org/title/Kernel_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">kernel</a></p>
<h3 id="intel-ucode-amp-amd-ucode"><a href="#intel-ucode-amp-amd-ucode" class="headerlink" title="intel-ucode &amp; amd-ucode"></a>intel-ucode &amp; amd-ucode</h3><p>是Intel或者AMD CPU的微码，维持CPU的稳定性和安全性更新，参见<a href="https://wiki.archlinux.org/title/Microcode_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Microcode</a></p>
<h3 id="polkit"><a href="#polkit" class="headerlink" title="polkit"></a>polkit</h3><p>polkit在系统层级进行权限控制，对于普通用户调节亮度或者关机之类的操作有用，一般的图形界面有对应的组件，使用<code>i3wm</code>需要自行安装。</p>
<h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><p>一种shell。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="zsh-1"><a href="#zsh-1" class="headerlink" title="zsh"></a>zsh</h3><p>安装oh-my-zsh</p>
<p>官方安装(见<a href="ohmyz.sh">ohmyz.sh</a>):</p>
<pre class="language-none"><code class="language-none">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.github.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;	# 使用curl

sh -c &quot;$(wget https:&#x2F;&#x2F;raw.github.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;master&#x2F;tools&#x2F;install.sh -O -)&quot;	# 使用wget</code></pre>

<p>gitee安装：</p>
<pre class="language-none"><code class="language-none">git clone https:&#x2F;&#x2F;gitee.com&#x2F;mirrors&#x2F;oh-my-zsh.git ~&#x2F;.oh-my-zsh
cp ~&#x2F;.oh-my-zsh&#x2F;templates&#x2F;zshrc.zsh-template ~&#x2F;.zshrc
chsh -l			# 查看有哪些shell
chsh -s &#x2F;bin&#x2F;zsh 	# 切换到zsh
source ~&#x2F;.zshrc		# 读取zshrc的配置，可能需要重新登录用户才能起效</code></pre>

<p>zsh-autosuggestions命令自动补全插件</p>
<pre class="language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-autosuggestions</code></pre>

<p>zsh-syntax-highlighting高亮显示常用命令</p>
<pre class="language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-syntax-highlighting</code></pre>

<p>启用插件和主题</p>
<center> ~/.zshrc </center>


<pre class="language-none"><code class="language-none">ZSH_THEME&#x3D;&quot;3denhw&quot;
plugins&#x3D;(git sudo zsh-syntax-highlighting zsh-autosuggestions z)</code></pre>

<p><code>3denhw</code>是我用<code>3den</code>改的硬件时钟版本</p>
<center>~/.oh-my-zsh/themes/3denhw.zsh-theme</center>


<pre class="language-none"><code class="language-none">PROMPT&#x3D;$&#39;%&#123;$fg[white]%&#125;$(ruby_prompt_info) %&#123;$fg_bold[cyan]%&#125;%~%&#123;$reset_color%&#125;$(git_prompt_info) %&#123;$fg[cyan]%&#125;[%*]\
%&#123;$fg_bold[green]%&#125;%n$%&#123;$reset_color%&#125; &#39;

ZSH_THEME_GIT_PROMPT_PREFIX&#x3D;&quot; %&#123;$fg[white]%&#125;(&quot;
ZSH_THEME_GIT_PROMPT_SUFFIX&#x3D;&quot;)%&#123;$reset_color%&#125;&quot;
ZSH_THEME_GIT_PROMPT_DIRTY&#x3D;&quot;*&quot;
ZSH_THEME_GIT_PROMPT_CLEAN&#x3D;&quot;&quot;</code></pre>

<h3 id="sudo权限"><a href="#sudo权限" class="headerlink" title="sudo权限"></a>sudo权限</h3><p>使用<code>EDITOR=vim visudo</code></p>
<center>/etc/sudoers</center>


<pre class="language-none"><code class="language-none">%wheel ALL&#x3D;(ALL:ALL) ALL	# 给wheel组的用户sudo权限</code></pre>

<h3 id="grub"><a href="#grub" class="headerlink" title="grub"></a>grub</h3><details>
  <summary>/boot/grub/grub.cfg</summary>

<pre class="language-none"><code class="language-none">insmod part_gpt
insmod part_msdos
if [ -s $prefix&#x2F;grubenv ]; then
  load_env
fi
if [ &quot;$&#123;next_entry&#125;&quot; ] ; then
   set default&#x3D;&quot;$&#123;next_entry&#125;&quot;
   set next_entry&#x3D;
   save_env next_entry
   set boot_once&#x3D;true
else
   set default&#x3D;&quot;$&#123;saved_entry&#125;&quot;
fi

if [ x&quot;$&#123;feature_menuentry_id&#125;&quot; &#x3D; xy ]; then
  menuentry_id_option&#x3D;&quot;--id&quot;
else
  menuentry_id_option&#x3D;&quot;&quot;
fi

export menuentry_id_option

if [ &quot;$&#123;prev_saved_entry&#125;&quot; ]; then
  set saved_entry&#x3D;&quot;$&#123;prev_saved_entry&#125;&quot;
  save_env saved_entry
  set prev_saved_entry&#x3D;
  save_env prev_saved_entry
  set boot_once&#x3D;true
fi

function savedefault &#123;
  if [ -z &quot;$&#123;boot_once&#125;&quot; ]; then
    saved_entry&#x3D;&quot;$&#123;chosen&#125;&quot;
    save_env saved_entry
  fi
&#125;

function load_video &#123;
  if [ x$feature_all_video_module &#x3D; xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
&#125;

set menu_color_normal&#x3D;light-blue&#x2F;black
set menu_color_highlight&#x3D;light-cyan&#x2F;blue

if [ x$feature_default_font_path &#x3D; xy ] ; then
   font&#x3D;unicode
else
insmod part_gpt
insmod ext2
set root&#x3D;&#39;hd0,gpt2&#39;
if [ x$feature_platform_search_hint &#x3D; xy ]; then
  search --no-floppy --fs-uuid --set&#x3D;root --hint-bios&#x3D;hd0,gpt2 --hint-efi&#x3D;hd0,gpt2 --hint-baremetal&#x3D;ahci0,gpt2  aaf969e5-f85a-4a06-940a-5afd1ab1c646
else
  search --no-floppy --fs-uuid --set&#x3D;root aaf969e5-f85a-4a06-940a-5afd1ab1c646
fi
    font&#x3D;&quot;&#x2F;usr&#x2F;share&#x2F;grub&#x2F;unicode.pf2&quot;
fi

if loadfont $font ; then
  set gfxmode&#x3D;auto
  load_video
  insmod gfxterm
  set locale_dir&#x3D;$prefix&#x2F;locale
  set lang&#x3D;en_US
  insmod gettext
fi
terminal_input console
terminal_output gfxterm
insmod part_gpt
insmod ext2
set root&#x3D;&#39;hd0,gpt2&#39;
if [ x$feature_platform_search_hint &#x3D; xy ]; then
  search --no-floppy --fs-uuid --set&#x3D;root --hint-bios&#x3D;hd0,gpt2 --hint-efi&#x3D;hd0,gpt2 --hint-baremetal&#x3D;ahci0,gpt2  aaf969e5-f85a-4a06-940a-5afd1ab1c646
else
  search --no-floppy --fs-uuid --set&#x3D;root aaf969e5-f85a-4a06-940a-5afd1ab1c646
fi
insmod jpeg
background_image -m stretch &#x2F;boot&#x2F;grub&#x2F;picture&#x2F;Gnulove.jpg
if [ x$feature_timeout_style &#x3D; xy ] ; then
  set timeout_style&#x3D;menu
  set timeout&#x3D;5
# Fallback normal timeout code in case the timeout_style feature is
# unavailable.
else
  set timeout&#x3D;5
fi

menuentry &#39;ArchMage&#39; --class arch --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-simple-aaf969e5-f85a-4a06-940a-5afd1ab1c646&#39; &#123;
	load_video
	set gfxpayload&#x3D;keep
	insmod gzio
	insmod part_gpt
	insmod ext2
	set root&#x3D;&#39;hd0,gpt2&#39;
	if [ x$feature_platform_search_hint &#x3D; xy ]; then
	  search --no-floppy --fs-uuid --set&#x3D;root --hint-bios&#x3D;hd0,gpt2 --hint-efi&#x3D;hd0,gpt2 --hint-baremetal&#x3D;ahci0,gpt2  aaf969e5-f85a-4a06-940a-5afd1ab1c646
	else
	  search --no-floppy --fs-uuid --set&#x3D;root aaf969e5-f85a-4a06-940a-5afd1ab1c646
	fi
	echo	&#39;Loading ArchMage ...&#39;
	linux	&#x2F;boot&#x2F;vmlinuz-linux root&#x3D;UUID&#x3D;aaf969e5-f85a-4a06-940a-5afd1ab1c646 rw  loglevel&#x3D;3
	echo	&#39;Loading initial ramdisk ...&#39;
	initrd	&#x2F;boot&#x2F;intel-ucode.img &#x2F;boot&#x2F;amd-ucode.img &#x2F;boot&#x2F;initramfs-linux.img
&#125;


menuentry &quot;ArchMoon&quot; --class arch --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-simple-aaf969e5-f85a-4a06-940a-5afd1ab1c646&#39; &#123;
	load_video
	set gfxpayload&#x3D;keep
	insmod gzio
	insmod part_gpt
	insmod ext2
	search --no-floppy --fs-uuid --set&#x3D;root 07275492-5b3c-4ba7-b5e8-a38486bf7cea
	echo &quot;Loading ArchMoon ...&quot;
	linux   &#x2F;boot&#x2F;vmlinuz-linux root&#x3D;UUID&#x3D;07275492-5b3c-4ba7-b5e8-a38486bf7cea rw      loglevel&#x3D;3
	echo    &#39;Loading initial ramdisk ...&#39;
	initrd  &#x2F;boot&#x2F;intel-ucode.img &#x2F;boot&#x2F;amd-ucode.img &#x2F;boot&#x2F;initramfs-linux.img
&#125;

submenu &#39;Magic&#39; $menuentry_id_option &#39;gnulinux-advanced-aaf969e5-f85a-4a06-940a-5afd1ab1c646&#39; &#123;
	menuentry &#39;ArchMage(fallback)&#39; --class arch --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-linux-fallback-aaf969e5-f85a-4a06-940a-5afd1ab1c646&#39; &#123;
		load_video
		set gfxpayload&#x3D;keep
		insmod gzio
		insmod part_gpt
		insmod ext2
		set root&#x3D;&#39;hd0,gpt2&#39;
		if [ x$feature_platform_search_hint &#x3D; xy ]; then
		  search --no-floppy --fs-uuid --set&#x3D;root --hint-bios&#x3D;hd0,gpt2 --hint-efi&#x3D;hd0,gpt2 --hint-baremetal&#x3D;ahci0,gpt2  aaf969e5-f85a-4a06-940a-5afd1ab1c646
		else
		  search --no-floppy --fs-uuid --set&#x3D;root aaf969e5-f85a-4a06-940a-5afd1ab1c646
		fi
		echo	&#39;Loading Linux linux ...&#39;
		linux	&#x2F;boot&#x2F;vmlinuz-linux root&#x3D;UUID&#x3D;aaf969e5-f85a-4a06-940a-5afd1ab1c646 rw  loglevel&#x3D;3
		echo	&#39;Loading initial ramdisk ...&#39;
		initrd	&#x2F;boot&#x2F;intel-ucode.img &#x2F;boot&#x2F;amd-ucode.img &#x2F;boot&#x2F;initramfs-linux-fallback.img
	&#125;

	menuentry &quot;ArchMoon(fallback)&quot; --class arch --class gnu-linux --class gnu --class os $menuentry_id_option &#39;gnulinux-linux-fallback-aaf969e5-f85a-4a06-940a-5afd1ab1c646&#39; &#123;
		load_video
		set gfxpayload&#x3D;keep
		insmod gzio
		insmod part_gpt
		insmod ext2
		search --no-floppy --fs-uuid --set&#x3D;root 07275492-5b3c-4ba7-b5e8-a38486bf7cea
		echo &quot;Loading ArchMoon ...&quot;
		linux   &#x2F;boot&#x2F;vmlinuz-linux root&#x3D;UUID&#x3D;07275492-5b3c-4ba7-b5e8-a38486bf7cea rw      loglevel&#x3D;3
		echo    &#39;Loading initial ramdisk ...&#39;
		initrd  &#x2F;boot&#x2F;intel-ucode.img &#x2F;boot&#x2F;amd-ucode.img &#x2F;boot&#x2F;initramfs-linux-fallback.img
	&#125;

	menuentry &quot;Shutdown&quot;&#123;
		echo &quot;System shutting down ...&quot;
		halt
	&#125;

	menuentry &quot;Restart&quot;&#123;
		echo &quot;System rebooting ...&quot;
		reboot
	&#125;

	menuentry &#39;UEFI Firmware Settings&#39; $menuentry_id_option &#39;uefi-firmware&#39; &#123;
		fwsetup
	&#125;
&#125;
</code></pre>

</details>

<h3 id="pacman"><a href="#pacman" class="headerlink" title="pacman"></a>pacman</h3><center>/etc/pacman.d/mirrlist</center>


<pre class="language-none"><code class="language-none">Server &#x3D; https:&#x2F;&#x2F;mirrors.bfsu.edu.cn&#x2F;archlinux&#x2F;$repo&#x2F;os&#x2F;$arch
Server &#x3D; http:&#x2F;&#x2F;mirrors.bfsu.edu.cn&#x2F;archlinux&#x2F;$repo&#x2F;os&#x2F;$arch</code></pre>

<center>/etc/pacman.conf修改</center>


<pre class="language-none"><code class="language-none"># Misc options
#UseSyslog
Color
ILoveCandy
#NoProgressBar
CheckSpace
#VerbosePkgLists
#ParallelDownloads &#x3D; 5

# 末尾加上archlinuxcn的源
[archlinuxcn]
SigLevel &#x3D; Never
Server &#x3D; https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;archlinuxcn&#x2F;$arch</code></pre>

<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><h3 id="dhcpcd"><a href="#dhcpcd" class="headerlink" title="dhcpcd"></a>dhcpcd</h3><p>连接有线网</p>
<pre class="language-none"><code class="language-none">sudo dhcpcd</code></pre>

<h3 id="iwctl"><a href="#iwctl" class="headerlink" title="iwctl"></a>iwctl</h3><p>连接无线网</p>
<div class="tag-common tabs" id="iwctl"><ul class="nav-tabs"><li class="tab active"><a data-target="iwctl-1"><span class="iconify icon" data-icon="ri:home-4-line"></span>sheel中执行</a></li><li class="tab"><a data-target="iwctl-2"><span class="iconify icon" data-icon="ri:cloud-line"></span>iwctl交互界面</a></li></ul><div class="tab-content"><div class="tab-pane active" id="iwctl-1"><pre class="language-none"><code class="language-none">sudo systemctl start iwd
iwctl
sudo systemctl start dhcpcd@wlan0</code></pre></div><div class="tab-pane" id="iwctl-2"><pre class="language-none"><code class="language-none">station list
station wlan0 scan
station wlan0 get-networks
station wlan connect SSID</code></pre></div></div></div>

<h3 id="networkmanger-amp-network-manager-applet"><a href="#networkmanger-amp-network-manager-applet" class="headerlink" title="networkmanger &amp; network-manager-applet"></a>networkmanger &amp; network-manager-applet</h3><p>用于图形界面的网络连接</p>
<pre class="language-none"><code class="language-none">systemctl enable NetworkMannger</code></pre>

<h1 id="声音"><a href="#声音" class="headerlink" title="声音"></a>声音</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><h3 id="alsa"><a href="#alsa" class="headerlink" title="alsa"></a>alsa</h3><p>声音系统，较新的笔记本需要安装驱动sof-firmware,参见<a href="https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">alsa</a></p>
<p>对于i3需要手动开启软混</p>
<center>~/.asoundrc</center>


<pre class="language-none"><code class="language-none">pcm.card0&amp;#123;
    type hw
    card 0
&amp;#125;

pcm.!default&amp;#123;
    type plug
    slave.pcm &quot;dmix&quot;
&amp;#125;
</code></pre>

<h3 id="alsa-utils"><a href="#alsa-utils" class="headerlink" title="alsa-utils"></a>alsa-utils</h3><p>包含了一些工具，使用<code>alsamixer</code>调整各声道</p>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>中文和英文：ttf-lxgw-wenkai-mono<br>图标：ttf-font-awesome(用于polybar)</p>
<h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><p>vim配置待完善</p>
<h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><h2 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h2><h3 id="thunar"><a href="#thunar" class="headerlink" title="thunar"></a>thunar</h3><p>图形界面的文件管理器，几乎不用</p>
<h3 id="ncdu"><a href="#ncdu" class="headerlink" title="ncdu"></a>ncdu</h3><p>管理磁盘</p>
<h3 id="ranger"><a href="#ranger" class="headerlink" title="ranger"></a>ranger</h3><p>终端中的文件管理，有vim风格</p>
<p>生成配置：<code>ranger --copy-config=all</code></p>
<center>~/.config/ranger/rc.conf</center>


<pre class="language-none"><code class="language-none">set colorscheme solarized
set prewview_images true
set prewview_images w3m</code></pre>

<p>并在<code>~/.zshrc</code>添加以下设置</p>
<pre class="language-none"><code class="language-none">ranger() &#123;
    if [ -z &quot;$RANGER_LEVEL&quot; ]; then
        &#x2F;usr&#x2F;bin&#x2F;ranger &quot;$@&quot;
    else
        exit
    fi
&#125;</code></pre>

<h1 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h1><h2 id="xorg"><a href="#xorg" class="headerlink" title="xorg"></a>xorg</h2><p><code>xorg-server</code>是启动X服务的服务，<code>xorg-xinit</code>提供了<code>xinit</code>的启动方式</p>
<center>~/.xinitrc</center>


<pre class="language-none"><code class="language-none">exec i3	# 将末尾改成如此，一定要在最后exec</code></pre>

<p><code>xf86-video-intel</code>提供了intel集显的驱动</p>
<h2 id="触摸板"><a href="#触摸板" class="headerlink" title="触摸板"></a>触摸板</h2><p>在i3下触摸板使用需要自行配置</p>
<center>/etc/X11/xorg.conf.d/touchpad.conf</center>

<pre class="language-none"><code class="language-none">Section &quot;InputClass&quot;
        Identifier &quot;touchpad&quot;
        MatchIsTouchpad &quot;on&quot;
        Driver &quot;libinput&quot;
        Option &quot;Tapping&quot; &quot;on&quot;
        Option &quot;TappingButtonMap&quot; &quot;lrm&quot;
        Option &quot;NaturalScrolling&quot; &quot;on&quot;
        Option &quot;ScrollMethod&quot; &quot;twofinger&quot;
EndSection</code></pre>

<h2 id="i3"><a href="#i3" class="headerlink" title="i3"></a>i3</h2><p><code>i3-gaps</code>提供了有间隙的i3<del>废话</del></p>
<details>
  <summary>~/.config/i3/config</summary>

<pre class="language-none"><code class="language-none">set $mod Mod4

# Start fcitx5
exec --no-startup-id fcitx5

# Start polybar
exec_always --no-startup-id $HOME&#x2F;.config&#x2F;polybar&#x2F;launch.sh

# Start picom
exec --no-startup-id picom -b

# Start feh to use wallpaper
exec --no-startup-id feh --bg-fill $HOME&#x2F;Picture&#x2F;wallpaper&#x2F;1.jpg

# Start blueberry for bluetooth
# exec --no-startup-id blueberry

#design windows
default_border none
default_floating_border normal
hide_edge_borders both

gaps inner 9
gaps outer 3

# start web browers in private mod
bindsym $mod+Shift+p exec --no-startup-id firefox --private

# use maim to capture screen and save to $HOME&#x2F;Picture&#x2F;screenshot
# screenshot the curren active window
bindsym $mod+i exec --no-startup-id maim -i $(xdotool getactivewindow) $HOME&#x2F;Picture&#x2F;screenshot&#x2F;$(date +%s).png
#screenshot the full screen
bindsym $mod+Print exec --no-startup-id maim $HOME&#x2F;Picture&#x2F;screenshot&#x2F;$(date +%s).png
# screenshot a selected aera
bindsym $mod+Shift+Print exec --no-startup-id maim -s $HOME&#x2F;Picture&#x2F;screenshot&#x2F;$(date +%s).png

# 删除最后的i3stautes</code></pre>

</details>

<h2 id="polybar"><a href="#polybar" class="headerlink" title="polybar"></a>polybar</h2><p>创建配置文件<code>cp /etc/polybar/config.ini ~/.config/polybar/config</code></p>
<details>
  <summary>~/.config/polybar/config</summary>

<pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">;==========================================================</span>
<span class="token comment">;</span>
<span class="token comment">;</span>
<span class="token comment">;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗</span>
<span class="token comment">;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗</span>
<span class="token comment">;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝</span>
<span class="token comment">;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗</span>
<span class="token comment">;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║</span>
<span class="token comment">;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝</span>
<span class="token comment">;</span>
<span class="token comment">;</span>
<span class="token comment">;   To learn more about how to configure Polybar</span>
<span class="token comment">;   go to https://github.com/polybar/polybar</span>
<span class="token comment">;</span>
<span class="token comment">;   The README contains a lot of information</span>
<span class="token comment">;</span>
<span class="token comment">;==========================================================</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">colors</span><span class="token punctuation">]</span></span>
<span class="token comment">;background = $&#123;xrdb:color0:#222&#125;</span>
<span class="token key attr-name">background</span> <span class="token punctuation">=</span> <span class="token value attr-value">#222</span>
<span class="token key attr-name">background-alt</span> <span class="token punctuation">=</span> <span class="token value attr-value">#444</span>
<span class="token comment">;foreground = $&#123;xrdb:color7:#222&#125;</span>
<span class="token key attr-name">foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#dfdfdf</span>
<span class="token key attr-name">foreground-alt</span> <span class="token punctuation">=</span> <span class="token value attr-value">#555</span>
<span class="token key attr-name">primary</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ffb52a</span>
<span class="token key attr-name">secondary</span> <span class="token punctuation">=</span> <span class="token value attr-value">#e60053</span>
<span class="token key attr-name">alert</span> <span class="token punctuation">=</span> <span class="token value attr-value">#bd2c40</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">bar/example</span><span class="token punctuation">]</span></span>
<span class="token comment">;monitor = $&#123;env:MONITOR:HDMI-1&#125;</span>
<span class="token key attr-name">width</span> <span class="token punctuation">=</span> <span class="token value attr-value">100%</span>
<span class="token key attr-name">height</span> <span class="token punctuation">=</span> <span class="token value attr-value">27</span>
<span class="token key attr-name">offset-x</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">offset-y</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">radius</span> <span class="token punctuation">=</span> <span class="token value attr-value">6.0</span>
<span class="token key attr-name">fixed-center</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

<span class="token key attr-name">background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.background&#125;</span>
<span class="token key attr-name">foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground&#125;</span>

<span class="token key attr-name">line-size</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>
<span class="token key attr-name">line-color</span> <span class="token punctuation">=</span> <span class="token value attr-value">#f00</span>

<span class="token key attr-name">border-size</span> <span class="token punctuation">=</span> <span class="token value attr-value">4</span>
<span class="token key attr-name">border-color</span> <span class="token punctuation">=</span> <span class="token value attr-value">#00000000</span>

<span class="token key attr-name">padding-left</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">padding-right</span> <span class="token punctuation">=</span> <span class="token value attr-value">9</span>

<span class="token key attr-name">module-margin-left</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">module-margin-center</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>
<span class="token key attr-name">module-margin-right</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>

<span class="token key attr-name">font-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">fixed:pixelsize=10;1</span>
<span class="token comment">;font-1 = unifont:fontformat=truetype:size=8:antialias=false;0</span>
<span class="token comment">;font-2 = siji:pixelsize=10;1</span>
<span class="token key attr-name">font-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">FontAwesome6FreeSolid:pixelsize=12;1</span>
<span class="token key attr-name">font-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">FontAwesome6Brands:pixelsize=8;1</span>

<span class="token key attr-name">modules-left</span> <span class="token punctuation">=</span> <span class="token value attr-value">i3</span>
<span class="token key attr-name">modules-center</span> <span class="token punctuation">=</span> <span class="token value attr-value">alsa date backlight</span>
<span class="token key attr-name">modules-right</span> <span class="token punctuation">=</span> <span class="token value attr-value">xkeyboard memory cpu  battery</span> 
<span class="token key attr-name">tray-position</span> <span class="token punctuation">=</span> <span class="token value attr-value">right</span>
<span class="token key attr-name">tray-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>
<span class="token comment">;tray-background = #0063ff</span>

<span class="token comment">;wm-restack = bspwm</span>
<span class="token comment">;wm-restack = i3</span>

<span class="token comment">;override-redirect = true</span>

<span class="token comment">;scroll-up = bspwm-desknext</span>
<span class="token comment">;scroll-down = bspwm-deskprev</span>

<span class="token comment">;scroll-up = i3wm-wsnext</span>
<span class="token comment">;scroll-down = i3wm-wsprev</span>

<span class="token key attr-name">cursor-click</span> <span class="token punctuation">=</span> <span class="token value attr-value">pointer</span>
<span class="token key attr-name">cursor-scroll</span> <span class="token punctuation">=</span> <span class="token value attr-value">ns-resize</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/xwindow</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/xwindow</span>
<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value">%title:0:30:...%</span>

<span class="token comment">;[module/xkeyboard]</span>
<span class="token comment">;type = internal/xkeyboard</span>
<span class="token comment">;blacklist-0 = num lock</span>
<span class="token comment">;</span>
<span class="token comment">;format-prefix = " "</span>
<span class="token comment">;format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span>
<span class="token comment">;format-prefix-underline = $&#123;colors.secondary&#125;</span>
<span class="token comment">;</span>
<span class="token comment">;label-layout = %layout%</span>
<span class="token comment">;label-layout-underline = $&#123;colors.secondary&#125;</span>
<span class="token comment">;</span>
<span class="token comment">;label-indicator-padding = 2</span>
<span class="token comment">;label-indicator-margin = 1</span>
<span class="token comment">;label-indicator-background = $&#123;colors.secondary&#125;</span>
<span class="token comment">;label-indicator-underline = $&#123;colors.secondary&#125;</span>

<span class="token comment">; ===键盘提示===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-xkeyboard</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/xkeyboard</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/xkeyboard</span>


<span class="token comment">; 忽略列表</span>
<span class="token key attr-name">blacklist-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">scroll lock</span>

<span class="token comment">; &lt;label-indicator></span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label-layout> &lt;label-indicator></span>
<span class="token key attr-name">format-spacing</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>

<span class="token key attr-name">label-layout</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-layout-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#93b5cf</span>
<span class="token key attr-name">label-indicator-on-capslock</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-indicator-off-capslock</span> <span class="token punctuation">=</span>
<span class="token comment">;label-indicator-on-numlock = 🅽</span>
<span class="token comment">;label-indicator-off-numlock =</span>

<span class="token key attr-name">label-indicator-on-capslock-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>



<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/filesystem</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/fs</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">25</span>

<span class="token key attr-name">mount-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">/</span>

<span class="token key attr-name">label-mounted</span> <span class="token punctuation">=</span> <span class="token value attr-value">%&#123;F#0a81f5&#125;%mountpoint%%&#123;F-&#125;: %percentage_used%%</span>
<span class="token key attr-name">label-unmounted</span> <span class="token punctuation">=</span> <span class="token value attr-value">%mountpoint% not mounted</span>
<span class="token key attr-name">label-unmounted-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/bspwm</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/bspwm</span>

<span class="token key attr-name">label-focused</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-focused-background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.background-alt&#125;</span>
<span class="token key attr-name">label-focused-underline</span><span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.primary&#125;</span>
<span class="token key attr-name">label-focused-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token key attr-name">label-occupied</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-occupied-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token key attr-name">label-urgent</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%!</span>
<span class="token key attr-name">label-urgent-background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.alert&#125;</span>
<span class="token key attr-name">label-urgent-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token key attr-name">label-empty</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-empty-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>
<span class="token key attr-name">label-empty-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token comment">; Separator in between workspaces</span>
<span class="token comment">; label-separator = |</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/i3</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/i3</span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label-state> &lt;label-mode></span>
<span class="token key attr-name">index-sort</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
<span class="token key attr-name">wrapping-scroll</span> <span class="token punctuation">=</span> <span class="token value attr-value">false</span>

<span class="token comment">; Only show workspaces on the same output as the bar</span>
<span class="token comment">;pin-workspaces = true</span>

<span class="token key attr-name">label-mode-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>
<span class="token key attr-name">label-mode-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#000</span>
<span class="token key attr-name">label-mode-background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.primary&#125;</span>

<span class="token comment">; focused = Active workspace on focused monitor</span>
<span class="token key attr-name">label-focused</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-focused-background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.background-alt&#125;</span>
<span class="token key attr-name">label-focused-underline</span><span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.primary&#125;</span>
<span class="token key attr-name">label-focused-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token comment">; unfocused = Inactive workspace on any monitor</span>
<span class="token key attr-name">label-unfocused</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-unfocused-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token comment">; visible = Active workspace on unfocused monitor</span>
<span class="token key attr-name">label-visible</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-visible-background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;self.label-focused-background&#125;</span>
<span class="token key attr-name">label-visible-underline</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;self.label-focused-underline&#125;</span>
<span class="token key attr-name">label-visible-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;self.label-focused-padding&#125;</span>

<span class="token comment">; urgent = Workspace with urgency hint set</span>
<span class="token key attr-name">label-urgent</span> <span class="token punctuation">=</span> <span class="token value attr-value">%index%</span>
<span class="token key attr-name">label-urgent-background</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.alert&#125;</span>
<span class="token key attr-name">label-urgent-padding</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>

<span class="token comment">; Separator in between workspaces</span>
<span class="token comment">; label-separator = |</span>


<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/mpd</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/mpd</span>
<span class="token key attr-name">format-online</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label-song>  &lt;icon-prev> &lt;icon-stop> &lt;toggle> &lt;icon-next></span>

<span class="token key attr-name">icon-prev</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">icon-stop</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">icon-play</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">icon-pause</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">icon-next</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">label-song-maxlen</span> <span class="token punctuation">=</span> <span class="token value attr-value">25</span>
<span class="token key attr-name">label-song-ellipsis</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/xbacklight</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/xbacklight</span>

<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label> &lt;bar></span>
<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value">BL</span>

<span class="token key attr-name">bar-width</span> <span class="token punctuation">=</span> <span class="token value attr-value">10</span>
<span class="token key attr-name">bar-indicator</span> <span class="token punctuation">=</span> <span class="token value attr-value">|</span>
<span class="token key attr-name">bar-indicator-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fff</span>
<span class="token key attr-name">bar-indicator-font</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>
<span class="token key attr-name">bar-fill</span> <span class="token punctuation">=</span> <span class="token value attr-value">─</span>
<span class="token key attr-name">bar-fill-font</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>
<span class="token key attr-name">bar-fill-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#9f78e1</span>
<span class="token key attr-name">bar-empty</span> <span class="token punctuation">=</span> <span class="token value attr-value">─</span>
<span class="token key attr-name">bar-empty-font</span> <span class="token punctuation">=</span> <span class="token value attr-value">2</span>
<span class="token key attr-name">bar-empty-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>

<span class="token comment">; ===屏幕亮度===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-xbacklight</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/backlight</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/backlight</span>

<span class="token comment">; 使用命令查询到设备文件:</span>
<span class="token comment">; ls -1 /sys/class/backlight/</span>
<span class="token key attr-name">card</span> <span class="token punctuation">=</span> <span class="token value attr-value">intel_backlight</span>

<span class="token comment">; 滚轮调节亮度</span>
<span class="token comment">; see /etc/udev/rules.d/backlight.rules</span>
<span class="token comment">; Default: false</span>
<span class="token key attr-name">enable-scroll</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp> &lt;label></span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value">%percentage%%</span>

<span class="token comment">; 用于 &lt;ramp></span>
<span class="token key attr-name">ramp-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span> 
<span class="token key attr-name">ramp-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span> 
<span class="token key attr-name">ramp-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">ramp-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#3d3b4f</span>
<span class="token comment">; 用于 &lt;bar></span>
<span class="token key attr-name">bar-width</span> <span class="token punctuation">=</span> <span class="token value attr-value">10</span>
<span class="token key attr-name">bar-indicator</span> <span class="token punctuation">=</span> <span class="token value attr-value">|</span>
<span class="token key attr-name">bar-fill</span> <span class="token punctuation">=</span> <span class="token value attr-value">-</span>
<span class="token key attr-name">bar-empty</span> <span class="token punctuation">=</span> <span class="token value attr-value">-</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/backlight-acpi</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">inherit</span> <span class="token punctuation">=</span> <span class="token value attr-value">module/xbacklight</span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/backlight</span>
<span class="token key attr-name">card</span> <span class="token punctuation">=</span> <span class="token value attr-value">intel_backlight</span>

<span class="token comment">;[module/cpu]</span>
<span class="token comment">;type = internal/cpu</span>
<span class="token comment">;interval = 2</span>
<span class="token comment">;format-prefix = " "</span>
<span class="token comment">;format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span>
<span class="token comment">;format-underline = #f90000</span>
<span class="token comment">;label = %percentage:2%%</span>
<span class="token comment">;</span>
<span class="token comment">;[module/memory]</span>
<span class="token comment">;type = internal/memory</span>
<span class="token comment">;interval = 2</span>
<span class="token comment">;format-prefix = " "</span>
<span class="token comment">;format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span>
<span class="token comment">;format-underline = #4bffdc</span>
<span class="token comment">;label = %percentage_used%%</span>

<span class="token comment">; ===CPU===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-cpu</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/cpu</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/cpu</span>

<span class="token comment">; 刷新间隔，默认: 1</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.5</span>

<span class="token comment">;format = &lt;label> &lt;ramp-coreload></span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label></span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %percentage%%</span>
<span class="token key attr-name">label-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#2e4e7e</span>

<span class="token comment">; Spacing between individual per-core ramps</span>
<span class="token key attr-name">ramp-coreload-spacing</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">ramp-coreload-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">▁</span>
<span class="token key attr-name">ramp-coreload-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">▂</span>
<span class="token key attr-name">ramp-coreload-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">▃</span>
<span class="token key attr-name">ramp-coreload-3</span> <span class="token punctuation">=</span> <span class="token value attr-value">▄</span>
<span class="token key attr-name">ramp-coreload-4</span> <span class="token punctuation">=</span> <span class="token value attr-value">▅</span>
<span class="token key attr-name">ramp-coreload-5</span> <span class="token punctuation">=</span> <span class="token value attr-value">▆</span>
<span class="token key attr-name">ramp-coreload-6</span> <span class="token punctuation">=</span> <span class="token value attr-value">▇</span>
<span class="token key attr-name">ramp-coreload-7</span> <span class="token punctuation">=</span> <span class="token value attr-value">█</span>

<span class="token key attr-name">ramp-coreload-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-coreload-5-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-coreload-6-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-coreload-7-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>

<span class="token comment">; ===内存===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-memory</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/memory</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/memory</span>

<span class="token comment">; 刷新间隔，默认: 1</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>

<span class="token comment">;format = &lt;label> &lt;ramp-used> &lt;ramp-free></span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label></span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %gb_used%/%gb_free%</span>
<span class="token key attr-name">label-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#065279</span>

<span class="token comment">; 用于 &lt;ramp-used></span>
<span class="token key attr-name">ramp-used-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">▁</span>
<span class="token key attr-name">ramp-used-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">▂</span>
<span class="token key attr-name">ramp-used-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">▃</span>
<span class="token key attr-name">ramp-used-3</span> <span class="token punctuation">=</span> <span class="token value attr-value">▄</span>
<span class="token key attr-name">ramp-used-4</span> <span class="token punctuation">=</span> <span class="token value attr-value">▅</span>
<span class="token key attr-name">ramp-used-5</span> <span class="token punctuation">=</span> <span class="token value attr-value">▆</span>
<span class="token key attr-name">ramp-used-6</span> <span class="token punctuation">=</span> <span class="token value attr-value">▇</span>
<span class="token key attr-name">ramp-used-7</span> <span class="token punctuation">=</span> <span class="token value attr-value">█</span>

<span class="token key attr-name">ramp-used-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-used-5-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-used-6-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-used-7-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>

<span class="token comment">; 用于 &lt;ramp-free></span>
<span class="token key attr-name">ramp-free-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">▁</span>
<span class="token key attr-name">ramp-free-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">▂</span>
<span class="token key attr-name">ramp-free-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">▃</span>
<span class="token key attr-name">ramp-free-3</span> <span class="token punctuation">=</span> <span class="token value attr-value">▄</span>
<span class="token key attr-name">ramp-free-4</span> <span class="token punctuation">=</span> <span class="token value attr-value">▅</span>
<span class="token key attr-name">ramp-free-5</span> <span class="token punctuation">=</span> <span class="token value attr-value">▆</span>
<span class="token key attr-name">ramp-free-6</span> <span class="token punctuation">=</span> <span class="token value attr-value">▇</span>
<span class="token key attr-name">ramp-free-7</span> <span class="token punctuation">=</span> <span class="token value attr-value">█</span>

<span class="token key attr-name">ramp-free-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-free-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-free-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-free-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-free-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-free-5-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-free-6-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-free-7-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>


<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/wlan</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/network</span>
<span class="token key attr-name">interface</span> <span class="token punctuation">=</span> <span class="token value attr-value">net1</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">3.0</span>

<span class="token key attr-name">format-connected</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp-signal> &lt;label-connected></span>
<span class="token key attr-name">format-connected-underline</span> <span class="token punctuation">=</span> <span class="token value attr-value">#9f78e1</span>
<span class="token key attr-name">label-connected</span> <span class="token punctuation">=</span> <span class="token value attr-value">%essid%</span>

<span class="token key attr-name">format-disconnected</span> <span class="token punctuation">=</span>
<span class="token comment">;format-disconnected = &lt;label-disconnected></span>
<span class="token comment">;format-disconnected-underline = $&#123;self.format-connected-underline&#125;</span>
<span class="token comment">;label-disconnected = %ifname% disconnected</span>
<span class="token comment">;label-disconnected-foreground = $&#123;colors.foreground-alt&#125;</span>

<span class="token key attr-name">ramp-signal-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-signal-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-signal-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-signal-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-signal-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-signal-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/eth</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/network</span>
<span class="token key attr-name">interface</span> <span class="token punctuation">=</span> <span class="token value attr-value">enp94s0f1</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">3.0</span>

<span class="token key attr-name">format-connected-underline</span> <span class="token punctuation">=</span> <span class="token value attr-value">#55aa55</span>
<span class="token key attr-name">format-connected-prefix</span> <span class="token punctuation">=</span> <span class="token value attr-value">"<span class="token inner-value"> </span>"</span>
<span class="token key attr-name">format-connected-prefix-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>
<span class="token key attr-name">label-connected</span> <span class="token punctuation">=</span> <span class="token value attr-value">%local_ip%</span>

<span class="token key attr-name">format-disconnected</span> <span class="token punctuation">=</span>
<span class="token comment">;format-disconnected = &lt;label-disconnected></span>
<span class="token comment">;format-disconnected-underline = $&#123;self.format-connected-underline&#125;</span>
<span class="token comment">;label-disconnected = %ifname% disconnected</span>
<span class="token comment">;label-disconnected-foreground = $&#123;colors.foreground-alt&#125;</span>

<span class="token comment">;[module/date]</span>
<span class="token comment">;type = internal/date</span>
<span class="token comment">;interval = 5</span>
<span class="token comment">;</span>
<span class="token comment">;date =</span>
<span class="token comment">;date-alt = " %Y-%m-%d"</span>
<span class="token comment">;</span>
<span class="token comment">;time = %H:%M</span>
<span class="token comment">;time-alt = %H:%M:%S</span>
<span class="token comment">;</span>
<span class="token comment">;format-prefix = </span>
<span class="token comment">;format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span>
<span class="token comment">;format-underline = #0a6cf5</span>
<span class="token comment">;</span>
<span class="token comment">;label = %date% %time%</span>

<span class="token comment">; ===日期时间===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-date</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/date</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/date</span>

<span class="token comment">; 更新间隔, 默认: 1.0</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">1.0</span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label></span>

<span class="token key attr-name">date</span> <span class="token punctuation">=</span> <span class="token value attr-value">%Y-%m-%d%</span>
<span class="token key attr-name">time</span> <span class="token punctuation">=</span> <span class="token value attr-value">%H:%M</span>

<span class="token comment">; 另一种格式</span>
<span class="token key attr-name">date-alt</span> <span class="token punctuation">=</span> <span class="token value attr-value">%A, %d %B %Y</span>
<span class="token key attr-name">time-alt</span> <span class="token punctuation">=</span> <span class="token value attr-value">%H:%M:%S</span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %date%  %time%</span>
<span class="token key attr-name">label-font</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">label-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#eefafafa</span>


<span class="token comment">;[module/pulseaudio]</span>
<span class="token comment">;type = internal/pulseaudio</span>
<span class="token comment">;</span>
<span class="token comment">;format-volume = &lt;label-volume> &lt;bar-volume></span>
<span class="token comment">;label-volume = VOL %percentage%%</span>
<span class="token comment">;label-volume-foreground = $&#123;root.foreground&#125;</span>
<span class="token comment">;</span>
<span class="token comment">;label-muted = </span>
<span class="token comment">;label-muted-foreground = #666</span>
<span class="token comment">;</span>
<span class="token comment">;bar-volume-width = 10</span>
<span class="token comment">;bar-volume-foreground-0 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-1 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-2 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-3 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-4 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-5 = #f5a70a</span>
<span class="token comment">;bar-volume-foreground-6 = #ff5555</span>
<span class="token comment">;bar-volume-gradient = false</span>
<span class="token comment">;bar-volume-indicator = |</span>
<span class="token comment">;bar-volume-indicator-font = 2</span>
<span class="token comment">;bar-volume-fill = ─</span>
<span class="token comment">;bar-volume-fill-font = 2</span>
<span class="token comment">;bar-volume-empty = ─</span>
<span class="token comment">;bar-volume-empty-font = 2</span>
<span class="token comment">;bar-volume-empty-foreground = $&#123;colors.foreground-alt&#125;</span>

<span class="token comment">; ===音量===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-pulseaudio</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/alsa</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/alsa</span>
<span class="token key attr-name">sink</span> <span class="token punctuation">=</span> <span class="token value attr-value">alsa_output.pci-0000_12_00.3.analog-stereo</span>
<span class="token key attr-name">use-ui-max</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">5</span>

<span class="token key attr-name">format-volume</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp-volume> &lt;label-volume></span>

<span class="token key attr-name">label-muted</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-muted-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#a1afc9</span>

<span class="token key attr-name">ramp-volume-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-volume-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-volume-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token comment">; 左右键功能，pavucontrol 用于开关音量</span>
<span class="token key attr-name">click-left</span> <span class="token punctuation">=</span> <span class="token value attr-value">pavucontrol</span>
<span class="token comment">; click-middle =</span>


<span class="token comment">;[module/alsa]</span>
<span class="token comment">;type = internal/alsa</span>
<span class="token comment">;</span>
<span class="token comment">;format-volume = &lt;label-volume> &lt;bar-volume></span>
<span class="token comment">;label-volume = VOL</span>
<span class="token comment">;label-volume-foreground = $&#123;root.foreground&#125;</span>
<span class="token comment">;</span>
<span class="token comment">;format-muted-prefix = " "</span>
<span class="token comment">;format-muted-foreground = $&#123;colors.foreground-alt&#125;</span>
<span class="token comment">;label-muted = sound muted</span>
<span class="token comment">;</span>
<span class="token comment">;bar-volume-width = 10</span>
<span class="token comment">;bar-volume-foreground-0 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-1 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-2 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-3 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-4 = #55aa55</span>
<span class="token comment">;bar-volume-foreground-5 = #f5a70a</span>
<span class="token comment">;bar-volume-foreground-6 = #ff5555</span>
<span class="token comment">;bar-volume-gradient = false</span>
<span class="token comment">;bar-volume-indicator = |</span>
<span class="token comment">;bar-volume-indicator-font = 2</span>
<span class="token comment">;bar-volume-fill = ─</span>
<span class="token comment">;bar-volume-fill-font = 2</span>
<span class="token comment">;bar-volume-empty = ─</span>
<span class="token comment">;bar-volume-empty-font = 2</span>
<span class="token comment">;bar-volume-empty-foreground = $&#123;colors.foreground-alt&#125;</span>


<span class="token comment">; ===电源提示===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-battery</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/battery</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/battery</span>

<span class="token comment">; 电量大于 99% 显示充电完成</span>
<span class="token key attr-name">full-at</span> <span class="token punctuation">=</span> <span class="token value attr-value">99</span>

<span class="token comment">; 使用以下命令列出电池和适配器:</span>
<span class="token comment">; ls -1 /sys/class/power_supply/</span>
<span class="token key attr-name">battery</span> <span class="token punctuation">=</span> <span class="token value attr-value">BAT1</span>
<span class="token key attr-name">adapter</span> <span class="token punctuation">=</span> <span class="token value attr-value">ACAD</span>

<span class="token key attr-name">poll-interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>

<span class="token comment">; 时间过格式,默认: %H:%M:%S</span>
<span class="token key attr-name">time-format</span> <span class="token punctuation">=</span> <span class="token value attr-value">%H:%M</span>

<span class="token comment">; 充电</span>
<span class="token key attr-name">format-charging</span> <span class="token punctuation">=</span> <span class="token value attr-value"> &lt;animation-charging> &lt;label-charging></span>

<span class="token comment">; 放电</span>
<span class="token key attr-name">format-discharging</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp-capacity> &lt;label-discharging></span>

<span class="token comment">; 充电完成</span>
<span class="token key attr-name">format-full</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label-full></span>

<span class="token comment">; 充电状态</span>
<span class="token key attr-name">label-charging</span> <span class="token punctuation">=</span>  <span class="token value attr-value">%percentage%(%time%)</span>


<span class="token comment">; 放电状态</span>
<span class="token key attr-name">label-discharging</span> <span class="token punctuation">=</span> <span class="token value attr-value">%percentage%(%time%)</span>

<span class="token comment">;充电完成</span>
<span class="token key attr-name">label-full</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %percentage%</span>
<span class="token key attr-name">label-full-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>

<span class="token key attr-name">ramp-capacity-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">ramp-capacity-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff461f</span> 
<span class="token key attr-name">ramp-capacity-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#eaff56</span> 
<span class="token key attr-name">ramp-capacity-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#bddd22</span>
<span class="token key attr-name">ramp-capacity-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#7bcfa6</span>
<span class="token key attr-name">ramp-capacity-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#3de1ad</span>

<span class="token key attr-name">bar-capacity-width</span> <span class="token punctuation">=</span> <span class="token value attr-value">10</span>

<span class="token key attr-name">animation-charging-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">animation-charging-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff461f</span> 
<span class="token key attr-name">animation-charging-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#eaff56</span> 
<span class="token key attr-name">animation-charging-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#bddd22</span>
<span class="token key attr-name">animation-charging-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#7bcfa6</span>
<span class="token key attr-name">animation-charging-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#3de1ad</span>
<span class="token comment">; 动画帧率(毫秒)</span>
<span class="token key attr-name">animation-charging-framerate</span> <span class="token punctuation">=</span> <span class="token value attr-value">750</span>

<span class="token comment">;animation-discharging-0 = </span>
<span class="token comment">;animation-discharging-1 = </span>
<span class="token comment">;animation-discharging-2 = </span>
<span class="token comment">;animation-discharging-3 = </span>
<span class="token comment">;animation-discharging-4 = </span>
<span class="token comment">; 动画帧率(毫秒)</span>
<span class="token comment">;animation-discharging-framerate = 500</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/temperature</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/temperature</span>
<span class="token key attr-name">thermal-zone</span> <span class="token punctuation">=</span> <span class="token value attr-value">0</span>
<span class="token key attr-name">warn-temperature</span> <span class="token punctuation">=</span> <span class="token value attr-value">60</span>

<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp> &lt;label></span>
<span class="token key attr-name">format-underline</span> <span class="token punctuation">=</span> <span class="token value attr-value">#f50a4d</span>
<span class="token key attr-name">format-warn</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp> &lt;label-warn></span>
<span class="token key attr-name">format-warn-underline</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;self.format-underline&#125;</span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value">%temperature-c%</span>
<span class="token key attr-name">label-warn</span> <span class="token punctuation">=</span> <span class="token value attr-value">%temperature-c%</span>
<span class="token key attr-name">label-warn-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.secondary&#125;</span>

<span class="token key attr-name">ramp-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/powermenu</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">custom/menu</span>

<span class="token key attr-name">expand-right</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

<span class="token key attr-name">format-spacing</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>

<span class="token key attr-name">label-open</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-open-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.secondary&#125;</span>
<span class="token key attr-name">label-close</span> <span class="token punctuation">=</span> <span class="token value attr-value"> cancel</span>
<span class="token key attr-name">label-close-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.secondary&#125;</span>
<span class="token key attr-name">label-separator</span> <span class="token punctuation">=</span> <span class="token value attr-value">|</span>
<span class="token key attr-name">label-separator-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">$&#123;colors.foreground-alt&#125;</span>

<span class="token key attr-name">menu-0-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">reboot</span>
<span class="token key attr-name">menu-0-0-exec</span> <span class="token punctuation">=</span> <span class="token value attr-value">menu-open-1</span>
<span class="token key attr-name">menu-0-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">power off</span>
<span class="token key attr-name">menu-0-1-exec</span> <span class="token punctuation">=</span> <span class="token value attr-value">menu-open-2</span>

<span class="token key attr-name">menu-1-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">cancel</span>
<span class="token key attr-name">menu-1-0-exec</span> <span class="token punctuation">=</span> <span class="token value attr-value">menu-open-0</span>
<span class="token key attr-name">menu-1-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">reboot</span>
<span class="token key attr-name">menu-1-1-exec</span> <span class="token punctuation">=</span> <span class="token value attr-value">sudo reboot</span>

<span class="token key attr-name">menu-2-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">power off</span>
<span class="token key attr-name">menu-2-0-exec</span> <span class="token punctuation">=</span> <span class="token value attr-value">sudo poweroff</span>
<span class="token key attr-name">menu-2-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">cancel</span>
<span class="token key attr-name">menu-2-1-exec</span> <span class="token punctuation">=</span> <span class="token value attr-value">menu-open-0</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">settings</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">screenchange-reload</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
<span class="token comment">;compositing-background = xor</span>
<span class="token comment">;compositing-background = screen</span>
<span class="token comment">;compositing-foreground = source</span>
<span class="token comment">;compositing-border = over</span>
<span class="token comment">;pseudo-transparency = false</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">global/wm</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">margin-top</span> <span class="token punctuation">=</span> <span class="token value attr-value">5</span>
<span class="token key attr-name">margin-bottom</span> <span class="token punctuation">=</span> <span class="token value attr-value">5</span>

<span class="token comment">; vim:ft=dosini</span>

</code></pre>

</details>

<h3 id="亮度调节"><a href="#亮度调节" class="headerlink" title="亮度调节"></a>亮度调节</h3><p>为了使<code>polybar</code>中的亮度调节生效，增加以下配置</p>
<center>/etc/udev/rules.d/backlight.rules</center>

<pre class="language-none"><code class="language-none">RUN+&#x3D;&quot;&#x2F;bin&#x2F;chgrp wheel &#x2F;sys&#x2F;class&#x2F;backlight&#x2F;intel_backlight&#x2F;brightness&quot;
RUN+&#x3D;&quot;&#x2F;bin&#x2F;chmod g+w &#x2F;sys&#x2F;class&#x2F;backlight&#x2F;intel_backlight&#x2F;brightness&quot;</code></pre>

<h1 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h1><h2 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h2><h3 id="fcitx5-im"><a href="#fcitx5-im" class="headerlink" title="fcitx5-im"></a>fcitx5-im</h3><p>包含了fcitx5的基本框架和配置工具</p>
<h3 id="fcitx5-chinese-addons"><a href="#fcitx5-chinese-addons" class="headerlink" title="fcitx5-chinese-addons"></a>fcitx5-chinese-addons</h3><p>fcitx5的各种中文输入</p>
<h3 id="ssfconv"><a href="#ssfconv" class="headerlink" title="ssfconv"></a>ssfconv</h3><p>用于将搜狗的输入法皮肤转换为fcitx&#x2F;fcitx5的theme</p>
<h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>在双拼设置中：使用小鹤双拼，将快速输入触发键改为&#96;Super+`&#96;，设置模糊音<br>在附加组件中修改主题</p>
<h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><h2 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h2><p>在GNU&#x2F;Linux里还想用别的？</p>
<h2 id="w3m"><a href="#w3m" class="headerlink" title="w3m"></a>w3m</h2><p><del>用来为了ranger服务</del></p>
<h1 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h1><h2 id="bluez-bluez-utils"><a href="#bluez-bluez-utils" class="headerlink" title="bluez bluez-utils"></a>bluez bluez-utils</h2><p>安装之后启动服务，<code>systemctl enable bluetooth</code></p>
<h2 id="blueberry"><a href="#blueberry" class="headerlink" title="blueberry"></a>blueberry</h2><p>图形界面的蓝牙，可以不用一直开</p>
<h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><h2 id="ddnet"><a href="#ddnet" class="headerlink" title="ddnet"></a>ddnet</h2><p>teeworlds的衍生版本(虽然不是开源，但是默认支持更多mod)</p>
<h1 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h1><h2 id="xfce4-termianl"><a href="#xfce4-termianl" class="headerlink" title="xfce4-termianl"></a>xfce4-termianl</h2><p>轻量一点就好，<del>没看出其他终端大在哪里了</del><br>外观设置：</p>
<ul>
<li>一般：禁用滚动条</li>
<li>外观：字体使用<code>FreeMono Regular 15</code>；使用透明背景，透明度0.7；取消菜单栏、工具栏、边框</li>
</ul>
<h1 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h1><h2 id="maim"><a href="#maim" class="headerlink" title="maim"></a>maim</h2><p>见i3中相关的快捷键配置</p>
<h1 id="图像查看"><a href="#图像查看" class="headerlink" title="图像查看"></a>图像查看</h1><h2 id="ristretto"><a href="#ristretto" class="headerlink" title="ristretto"></a>ristretto</h2><p>用来看图</p>
<h2 id="feh"><a href="#feh" class="headerlink" title="feh"></a>feh</h2><p>用来设置i3背景，但是也可用于图像查看</p>
<h1 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h1><h2 id="vlc"><a href="#vlc" class="headerlink" title="vlc"></a>vlc</h2><p>视频和音频播放</p>
<h1 id="文件转换"><a href="#文件转换" class="headerlink" title="文件转换"></a>文件转换</h1><h2 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h2><p><span class="heimu">暂时没有介绍</span></p>
<h1 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h1><h2 id="netease-cloud-music"><a href="#netease-cloud-music" class="headerlink" title="netease-cloud-music"></a>netease-cloud-music</h2><p><span class="heimu">不得不说网易在Linux上的开发比腾讯好得太多</span></p>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><del>下回分解</del></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Linux配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux挂载Windows分区问题</title>
    <url>/posts/6b1091a3/</url>
    <content><![CDATA[<h2 id="分区格式"><a href="#分区格式" class="headerlink" title="分区格式"></a>分区格式</h2><p>首先，Linux和Windows采用的分区格式不同，Linux采用ext4，而Windows采用ntfs。</p>
<p>Windows不支持访问ext4，尽管有些软件可以使用，但是效果不佳，目前可以用WSL挂载ext4格式的分区。Linux也不能直接访问ntfs格式的分区，但是见ArchWiki</p>
<blockquote>
<p><a href="https://www.kernel.org/doc/html/latest/filesystems/ntfs3.html">ntfs3</a>驱动自内核版本5,15起提供此文件系统的读写支持</p>
<p>所有在内核版本5.15后构建的<a href="https://wiki.archlinux.org/title/Kernel#Officially_supported_kernels">公开内核</a>均在选择<code>CONFIG_NTFS3_FS=m</code> 后支持此驱动。</p>
<p>对内核版本&lt;5.15，NTFS的读写支持由<a href="https://wiki.archlinux.org/title/NTFS-3G">NTFS-3G</a> NTFS-3GFUSE文件系统提供. 或使用向后支持的NTFS3经由<a href="https://aur.archlinux.org/packages/ntfs3-dkms/">ntfs3-dkms</a>AUR.</p>
</blockquote>
<p>所以，只要安装了对应的驱动，Linux读写ntfs完全没有问题。</p>
<h2 id="BitLocker"><a href="#BitLocker" class="headerlink" title="BitLocker"></a>BitLocker</h2><p>在之前，使用Linux访问Windows几乎没有问题，直到拥有了自己的笔记本，发现无法挂载，准确的说是</p>
<center>Authentication Required</center>

<p>A passphrase is needed to access encrypted data on “XXXXX”</p>
<p>然后要输入一个密码，可是我从来没有设置过硬盘的密码。</p>
<p>后来发现是WIndows启动了BitLocker加密了分区，可以用密码、恢复密码和PIN码(？我没尝试，大家可以先试试)打开。</p>
<p>反正我的笔记本上也没有加密数据的需求，所以干脆把BitLocker关掉了。</p>
<p>打开Windows的终端(Windows Terminal 或 PowerShell 或 命令提示符cmd)，注意以管理员模式打开。<code>manage-bde -?</code>查看命令提示，<code>manage-bde -off C:</code>关闭对应盘的BitLocker加密，打开任务管理器 ，发现磁盘一直在100% 使用， 当过几分钟后 磁盘恢复正常， 就表示bitlock已经关闭了 。</p>
<hr>
<p>然后，你以为就能正常挂载WIndows分区了……….</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mount</span> /dev/XXX /tmp/XXX</code></pre>

<h2 id="Windows快速启动"><a href="#Windows快速启动" class="headerlink" title="Windows快速启动"></a>Windows快速启动</h2><p>如果你运行以上命令没有任何问题，那么恭喜你成功挂载，如果有提示如下：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">Windows is hibernated, refused to mount.
The disk contains an unclean <span class="token function">file</span> system <span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span>.
Metadata kept <span class="token keyword">in</span> Windows cache, refused to mount.
Falling back to read-only <span class="token function">mount</span> because the NTFS partition is <span class="token keyword">in</span> an
unsafe state. Please resume and <span class="token function">shutdown</span> Windows fully <span class="token punctuation">(</span>no hibernation
or fast restarting.<span class="token punctuation">)</span></code></pre>

<p>那么你也应该看懂了，由于Windows休眠或者启用了快速启动而把数据写入了磁盘，使硬盘处于不安全的状态，所以只能以只读模式挂载。</p>
<p>一般我们都关机了才会用Linux去访问Windows的分区，不会处于休眠状况，所以快速启动又是啥？</p>
<p>从Windows8开始，Windows的开机速度有了极大的提高，这得益于一项新的功能：快速启动。</p>
<p>其实快速启动和休眠一样，只不过休眠将所有进程写入硬盘，而快速启动只将内核、驱动等写入，开机时再读取到内存。</p>
<p>所以，其实我们的Windows只有在重启是才真正关机，其他关机不过是一次rest。这也导致Windows内核积累了许多bug，只有在内核真正重启时才能得到更正(怪不得说重启大法好)。</p>
<p>快速启动在Windows10中默认启用，需要关闭：</p>
<p>打开设置-系统-电源和睡眠-其他电源设置-选择电源按钮的功能，选择更改当前不可用的设置，取消掉快速启动就好了。</p>
<p>不得不说，取消掉后，不仅Linux挂载Windows分区没问题了，而且Win11的许多bug都不见了！</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>NirvanaArch的配置</title>
    <url>/posts/14643401/</url>
    <content><![CDATA[<p>这是一次惨痛的经历，我的Arch在更新之后之后出现了无法关机的问题，并且我采用了不正确的方法处理——强制断电。最终的结果就是数据没有写入导致系统文件丢失。</p>
<p>于是我不得不重装一遍我的Arch，刚刚才写完Arch的配置篇没想到就用上了，但发现其实远远不够，许多配置根本想不起来了，所以谨以此文记录我的Arch重生之路的配置，以免下次又发生这样的惨剧。(系统更新后那一次非正常关机的问题仍无法解决，不过只存在在我的Arch上，大家不用担心)</p>
<span id="more"></span>

<p>下面描述一下重新配置的经过。(同样，下面引文不加说明均来自<a href="https://wiki.archlinux.org/">ArchWiki</a>)</p>
<h1 id="系统层面"><a href="#系统层面" class="headerlink" title="系统层面"></a>系统层面</h1><h2 id="The-initial-ramdisk"><a href="#The-initial-ramdisk" class="headerlink" title="The initial ramdisk"></a>The initial ramdisk</h2><blockquote>
<p>初始内存盘本质上是一个很小的运行环境（早期用户空间），用于加载一些核心模块，并在 init  接管启动过程之前做必要的准备。有了这个环境，才能支持加密根文件系统、RAID上的根文件系统等高级功能。mkinicpio  支持自定义的钩子扩展、运行时自动检测以及其他功能。</p>
</blockquote>
<center>/etc/mkinitcpio.conf有关HOOK的修改</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">HOOKS</span><span class="token operator">=</span><span class="token punctuation">(</span>base udev block keyboard autodetect modconf filesystems <span class="token function">fsck</span><span class="token punctuation">)</span></code></pre>

<h2 id="Pacman"><a href="#Pacman" class="headerlink" title="Pacman"></a>Pacman</h2><h3 id="mirrorlist"><a href="#mirrorlist" class="headerlink" title="mirrorlist"></a>mirrorlist</h3><center>/etc/pacman.d/mirrorlist 保留源</center>

<pre class="language-bash" data-language="bash"><code class="language-bash">Server <span class="token operator">=</span> https://mirrors.bfsu.edu.cn/archlinux/<span class="token variable">$repo</span>/os/<span class="token variable">$arch</span>
Server <span class="token operator">=</span> http://mirrors.bfsu.edu.cn/archlinux/<span class="token variable">$repo</span>/os/<span class="token variable">$arch</span></code></pre>

<h3 id="conf"><a href="#conf" class="headerlink" title="conf"></a>conf</h3><center>/etc/pacman.conf中的增加和修改</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Misc options</span>
<span class="token comment">#UseSyslog</span>
Color
ILoveCandy
<span class="token comment">#NoProgressBar</span>
CheckSpace
<span class="token comment">#VerbosePkgLists</span>
<span class="token comment">#ParallelDownloads = 5</span>

<span class="token comment"># 末尾加上archlinuxcn的源</span>
<span class="token punctuation">[</span>archlinuxcn<span class="token punctuation">]</span>
SigLevel <span class="token operator">=</span> Never
Server <span class="token operator">=</span> https://mirrors.ustc.edu.cn/archlinuxcn/<span class="token variable">$arch</span></code></pre>

<p><strong>注意：之前不知道，所以也没有提醒，<code>pacman -Sc</code>命令可以删除已下载的旧的软件包的下载文件，建议每次升级Arch之后运行，<code>pacman -Scc</code>是清除所有已下载的软件包的下载文件</strong></p>
<h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><p>使用zsh作为默认shell: <code>pacman -S zsh</code>, 使用<code>oh-my-zsh</code>作为管理</p>
<p><a href="https://ohmyz.sh/">oh-my-zsh</a>提供了两种安装方法：</p>
<center>Install oh-my-zsh via curl</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="token variable">)</span></span>"</span></code></pre>

<center>Install oh-my-zsh via wget</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">wget</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -<span class="token variable">)</span></span>"</span></code></pre>

<p>但是raw.github对我不是很友好，所以我采用的手动安装了，先找到gitee的<a href="https://gitee.com/mirrors/oh-my-zsh">oh-my-zsh</a></p>
<p>在用户home目录</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://gitee.com/mirrors/oh-my-zsh.git ~/.oh-my-zsh</code></pre>

<p>复制提供的模板来创建新的 zsh 配置文件</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</code></pre>

<p>手动安装需要自己修改用户的shell为zsh, 使用<code>chsh</code>命令：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">chsh -l		<span class="token comment"># 查看有哪些shell</span>
chsh -s /bin/zsh 	<span class="token comment"># 切换到zsh</span>
<span class="token builtin class-name">source</span> ~/.zshrc		<span class="token comment"># 读取zshrc的配置，可能需要重新登录用户才能起效</span></code></pre>

<h3 id="zsh插件："><a href="#zsh插件：" class="headerlink" title="zsh插件："></a>zsh插件：</h3><ul>
<li><p>zsh-autosuggestions命令自动补全插件</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-autosuggestions</code></pre>


</li>
<li><p>zsh-syntax-highlighting高亮显示常用命令</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>~<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/plugins/zsh-syntax-highlighting</code></pre></li>
</ul>
<p>在<code>~/.zshrc</code>中启用插件：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>git <span class="token function">sudo</span> zsh-syntax-highlighting zsh-autosuggestions z<span class="token punctuation">)</span></code></pre>

<p>其中sudo是连续按两下<code>Esc</code>键在命令前加上<code>sudo</code>，<code>z</code>是快速目录跳转</p>
<h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><h3 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h3><p>增加<code>sudo</code>权限的正确方法是使用<code>visudo</code></p>
<blockquote>
<p>sudo的配置文件是<code>/etc/sudoers</code>。<code>visudo</code>会锁住<code>sudoers</code>文件，保存修改到临时文件，然后检查文件格式，确保正确后才会覆盖<code>sudoers</code>文件。必须保证<code>sudoers</code>格式正确，否则sudo将无法运行。</p>
</blockquote>
<p>简单来说，使用<code>visudo</code>就是在文件保存是会检查文件格式</p>
<blockquote>
<p><code>visudo</code>调用的默认编辑器是<code>vi</code>。官方仓库里的 sudo 编译时开启了<code>--with-env-editor</code>，会采用环境变量 <code>VISUAL</code> 和 <code>EDITOR</code>的设置。如果设置了<code>VISUAL</code> 就不会使用<code>EDITOR</code>。</p>
<p>如果要临时使用其他编辑器，在该命令前加上<code>EDITOR</code>环境变量即可。例如，要使用 <code>nano</code>，用root运行以下命令：</p>
</blockquote>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">EDITOR</span><span class="token operator">=</span>vim visudo</code></pre>

<center>/etc/sudoers</center>

<pre class="language-bash" data-language="bash"><code class="language-bash">%wheel      <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> NOPASSWD: ALL 	<span class="token comment"># 去掉其注释，是wheel组的用户有sudo权限</span></code></pre>

<h3 id="polkit"><a href="#polkit" class="headerlink" title="polkit"></a>polkit</h3><blockquote>
<p>Polkit 在系统层级进行权限控制，提供了一个低优先级进程和高优先级进程进行通讯的系统。和 sudo 等程序不同，Polkit 并没有赋予进程完全的 root 权限，而是通过一个集中的策略系统进行更精细的授权。</p>
</blockquote>
<p>我们在刚安装好Arch的时候，关机需要<code>sudo poweroff</code>，但是用了一会之后就发现突然不用<code>sudo</code>了，因为图形化环境<a href="https://wiki.archlinux.org/title/Cinnamon">Cinnamon</a>、<a href="https://wiki.archlinux.org/title/Deepin">Deepin</a>、<a href="https://wiki.archlinux.org/title/GNOME">GNOME</a>、<a href="https://wiki.archlinux.org/title/GNOME_Flashback">GNOME Flashback</a>、<a href="https://wiki.archlinux.org/title/KDE">KDE</a>、<a href="https://wiki.archlinux.org/title/LXDE">LXDE</a>、<a href="https://wiki.archlinux.org/title/LXQt">LXQt</a>、<a href="https://wiki.archlinux.org/title/MATE">MATE</a>、theShell 和 <a href="https://wiki.archlinux.org/title/Xfce">Xfce</a> 各自都已有认证组件——也就是对于的polkit。</p>
<p>但是，我这次只使用i3wm作为桌面环境，所以需要<code>pacman -S polkit</code>以获取权限(包括在图形化界面使用NetworkManager的权限)</p>
<h2 id="grub"><a href="#grub" class="headerlink" title="grub"></a>grub</h2><p>取消grub默认的静默启动和关机，便于出现问题时捕获。找到下面这一行，去掉quiet参数</p>
<center>/etc/default/grub </center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="token operator">=</span><span class="token string">"loglevel=3"</span></code></pre>

<p>重新生成grub.cfg</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg</code></pre>

<h1 id="桌面环境-i3wm"><a href="#桌面环境-i3wm" class="headerlink" title="桌面环境(i3wm)"></a>桌面环境(i3wm)</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S xorg-server xorg-xinit i3-gaps	<span class="token comment"># xorg-xinit使用xinit启动i3</span></code></pre>

<p>在<code>~/.xinitrc</code>的最后改成<code>exec i3</code></p>
<h2 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal"></a>Terminal</h2><p>xfce4-terminal属于i3可自动识别的终端模拟器之一，也是xfce4的默认终端模拟器，轻量快速。同时在刚进入i3wm的时候第一个需求就是打开终端使用编辑器来编辑i3的config</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>禁用滚动条(平常不用，看着难受)，透明背景0.7透明度</p>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>在终端使用<code>FreeMono Regular 15</code>，中文字体只安装霞鹜文楷(比微软雅黑好看)</p>
<h2 id="dmenu"><a href="#dmenu" class="headerlink" title="dmenu"></a>dmenu</h2><p>dmenu是i3的默认的快速、轻量级的软件启动器，使用它来打开图形界面的应用</p>
<h2 id="i3-gaps"><a href="#i3-gaps" class="headerlink" title="i3-gaps"></a>i3-gaps</h2><p>i3-gaps是i3wm的一个可调节窗口间隙的变种。</p>
<p>我的部分配置如下：</p>
<h3 id="自启动"><a href="#自启动" class="headerlink" title="自启动"></a>自启动</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Start fcitx5</span>
<span class="token builtin class-name">exec</span> --no-startup-id fcitx5		<span class="token comment"># 启动i3的时候fcitx5自启动</span>

<span class="token comment"># Start ploybar</span>
exec_always --no-startup-id <span class="token environment constant">$HOME</span>/.config/polybar/launch.sh		<span class="token comment"># 启动i3的时候polybar自启动(同时要注释掉i3config最后面的i3status)</span>

<span class="token comment"># Start picom</span>
<span class="token builtin class-name">exec</span> --no-startup-id picom -b		<span class="token comment"># 启动i3的时候picom自启动以支持窗口透明</span>

<span class="token comment"># Start feh to use wallpaper</span>
<span class="token builtin class-name">exec</span> --no-startup-id feh --bg-fill <span class="token environment constant">$HOME</span>/Pictures/Wallpaper/1.jpg		<span class="token comment"># 启动i3的时候feh启动壁纸，这里我只用了一张壁纸，并且用fill的方式填充</span>
</code></pre>

<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># start web browsers in private mod</span>
bindsym <span class="token variable">$mod</span>+Shift+p <span class="token builtin class-name">exec</span> firefox --private		<span class="token comment"># 设置firefox隐私模式的快捷键，其他应用可以之间用dmenu打开，使用firefox的private可以减少cache的产生</span>

<span class="token comment"># use maim to capture screen and save to $HOME/Pictures/Screenshot</span>
<span class="token comment"># $(date +%s)格式不能错</span>
<span class="token comment"># sreenshot the current active window</span>
bindsym <span class="token variable">$mod</span>+i <span class="token builtin class-name">exec</span> maim -i <span class="token variable"><span class="token variable">$(</span>xdotool getactivewindow<span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/Pictures/Screenshot/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>.png		<span class="token comment"># 截取当前活动窗口</span>
<span class="token comment"># screenshot the full screen</span>
bindsym <span class="token variable">$mod</span>+Print <span class="token builtin class-name">exec</span> maim <span class="token environment constant">$HOME</span>/Pictures/Screenshot/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>.png		<span class="token comment"># 全屏截图</span>
<span class="token comment"># screenshot a selected aera</span>
bindsym <span class="token variable">$mod</span>+Shift+Print <span class="token builtin class-name">exec</span> maim -s <span class="token environment constant">$HOME</span>/Pictures/Screenshot/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>.png		<span class="token comment"># 自己选取截图区域</span>
</code></pre>

<h3 id="窗口样式"><a href="#窗口样式" class="headerlink" title="窗口样式"></a>窗口样式</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># design windows</span>
default_border none		<span class="token comment"># 设置窗口没有边框</span>
default_floating_border normal		<span class="token comment"># 浮动窗口边框正常</span>
hide_edge_borders both		<span class="token comment"># 隐藏与屏幕边缘相邻的边框(其实已经没有边框了，上面是none)</span>

gaps inner <span class="token number">9</span>		<span class="token comment"># 窗口之间的间距</span>
gaps outer <span class="token number">3</span>		<span class="token comment"># 窗口与上下栏的距离(outer + inner)，如果outer设置为0,间距就和窗口之间一样</span>

<span class="token comment"># 注意以下语法已经不再建议，并且将来可能不再支持</span>
new_window none
new_float normal
</code></pre>

<h2 id="fcitx5"><a href="#fcitx5" class="headerlink" title="fcitx5"></a>fcitx5</h2><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><p>使用fcitx5作为输入法框架</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S fcitx5-im fcitx5-chinese-addons		<span class="token comment"># fcitx5-chinese-addons为中文输入法的引擎</span></code></pre>

<p>设置以下环境变量，并重新登录：</p>
<center>~/.pam_environment</center>

<pre class="language-bash" data-language="bash"><code class="language-bash">GTK_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
QT_IM_MODULE  <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
<span class="token environment constant">XMODIFIERS</span>    <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>@im<span class="token operator">=</span>fcitx
INPUT_METHOD  <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
SDL_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
GLFW_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>ibus</code></pre>

<h3 id="词库"><a href="#词库" class="headerlink" title="词库"></a>词库</h3><p><code>pacman -S fcitx5-pinyin-zhwiki fcitx5-pinyin-moegirl</code>分别是中文维基和萌娘百科的词库</p>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>使用<a href="https://github.com/fkxxyz/ssfconv">ssfconv</a>将搜狗的皮肤转换成fcitx5的</p>
<p>然后自己调配色、位置、图片之类的</p>
<h2 id="联网"><a href="#联网" class="headerlink" title="联网"></a>联网</h2><p>在学校还是图形界面联网方便(特别是校园网)</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S networkmanager network-manager-applet 	<span class="token comment"># 注意还要装polkit以获取权限</span></code></pre>

<h2 id="声音"><a href="#声音" class="headerlink" title="声音"></a>声音</h2><h3 id="alsa-Advanced-Linux-Sound-Architecture"><a href="#alsa-Advanced-Linux-Sound-Architecture" class="headerlink" title="alsa(Advanced Linux Sound Architecture)"></a>alsa(Advanced Linux Sound Architecture)</h3><pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S alsa-utils	<span class="token comment"># 里面有alsamixer和amixer等</span></code></pre>

<h3 id="dmix混音"><a href="#dmix混音" class="headerlink" title="dmix混音"></a>dmix混音</h3><p>使用alsa的时候两个应用不能同时使用声音，所以需要开启dmix作为软件混音，在alsa的配置文件中加入</p>
<center>~/.asoundrc</center>

<pre class="language-bash" data-language="bash"><code class="language-bash">pcm.card0<span class="token punctuation">&#123;</span>
    <span class="token builtin class-name">type</span> hw
    card <span class="token number">0</span>
<span class="token punctuation">&#125;</span>

pcm.<span class="token operator">!</span>default<span class="token punctuation">&#123;</span>
    <span class="token builtin class-name">type</span> plug
    slave.pcm <span class="token string">"dmix"</span>
<span class="token punctuation">&#125;</span>
</code></pre>

<h2 id="polybar"><a href="#polybar" class="headerlink" title="polybar"></a>polybar</h2><p>作为i3bar的替代品</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">pacman -S polybar
<span class="token function">install</span> -Dm644 /usr/share/doc/polybar/config <span class="token environment constant">$HOME</span>/.config/polybar/config	<span class="token comment"># 拷贝配置文件(也可以用cp)</span>
</code></pre>

<h3 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h3><center>~/.config/polybar/launch.sh</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/usr/bin/env bash</span>

<span class="token comment"># Terminate already running bar instances</span>
<span class="token function">killall</span> -q polybar
<span class="token comment"># If all your bars have ipc enabled, you can also use </span>
<span class="token comment"># polybar-msg cmd quit</span>

<span class="token comment"># Launch bar1 and bar2</span>
<span class="token builtin class-name">echo</span> <span class="token string">"---"</span> <span class="token operator">|</span> <span class="token function">tee</span> -a /tmp/polybar1.log /tmp/polybar2.log
polybar example <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">tee</span> -a /tmp/polybar1.log <span class="token operator">&amp;</span> disown
<span class="token comment"># polybar bar2 2>&amp;1 | tee -a /tmp/polybar2.log &amp; disown</span>
</code></pre>

<p>添加可执行权限：<code>chmod +x ~/.config/polybar/launch.sh</code></p>
<p>在i3的配置文件中加入<code>exec_always --no-startup-id $HOME/.config/polybar/launch.sh	</code></p>
<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><h4 id="字体-1"><a href="#字体-1" class="headerlink" title="字体"></a>字体</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token key attr-name">font-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">fixed:pixelsize=10;1</span>
<span class="token key attr-name">font-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">FontAwesome6FreeSolid:pixelsize=12;1</span>
<span class="token key attr-name">font-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">FontAwesome6Brands:pixelsize=8;1</span>
</code></pre>

<h4 id="键盘提示"><a href="#键盘提示" class="headerlink" title="键盘提示"></a>键盘提示</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===键盘提示===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-xkeyboard</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/xkeyboard</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/xkeyboard</span>


<span class="token comment">; 忽略列表</span>
<span class="token key attr-name">blacklist-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">scroll lock</span>

<span class="token comment">; &lt;label-indicator></span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label-layout> &lt;label-indicator></span>
<span class="token key attr-name">format-spacing</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>

<span class="token key attr-name">label-layout</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-layout-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#93b5cf</span>
<span class="token key attr-name">label-indicator-on-capslock</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-indicator-off-capslock</span> <span class="token punctuation">=</span>
<span class="token comment">;label-indicator-on-numlock = 🅽</span>
<span class="token comment">;label-indicator-off-numlock =</span>

<span class="token key attr-name">label-indicator-on-capslock-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>

</code></pre>

<h4 id="调节亮度"><a href="#调节亮度" class="headerlink" title="调节亮度"></a>调节亮度</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===屏幕亮度===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-xbacklight</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/backlight</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/backlight</span>

<span class="token comment">; 使用命令查询到设备文件:</span>
<span class="token comment">; ls -1 /sys/class/backlight/</span>
<span class="token key attr-name">card</span> <span class="token punctuation">=</span> <span class="token value attr-value">intel_backlight</span>

<span class="token comment">; 滚轮调节亮度</span>
<span class="token comment">; see /etc/udev/rules.d/backlight.rules</span>
<span class="token comment">; Default: false</span>
<span class="token key attr-name">enable-scroll</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>

<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp> &lt;label></span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value">%percentage%%</span>

<span class="token comment">; 用于 &lt;ramp></span>
<span class="token key attr-name">ramp-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span> 
<span class="token key attr-name">ramp-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span> 
<span class="token key attr-name">ramp-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">ramp-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#3d3b4f</span>
<span class="token comment">; 用于 &lt;bar></span>
<span class="token key attr-name">bar-width</span> <span class="token punctuation">=</span> <span class="token value attr-value">10</span>
<span class="token key attr-name">bar-indicator</span> <span class="token punctuation">=</span> <span class="token value attr-value">|</span>
<span class="token key attr-name">bar-fill</span> <span class="token punctuation">=</span> <span class="token value attr-value">-</span>
<span class="token key attr-name">bar-empty</span> <span class="token punctuation">=</span> <span class="token value attr-value">-</span>
</code></pre>

<p>其中调节亮度需要用户权限，根据<a href="https://wiki.archlinux.org/title/Backlight">xblight</a>，在创建文件</p>
<center>/etc/udev/rules.d/backlight.rules</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">RUN</span><span class="token operator">+=</span><span class="token string">"/bin/chgrp wheel /sys/class/backlight/intel_backlight/brightness"</span>
<span class="token assign-left variable">RUN</span><span class="token operator">+=</span><span class="token string">"/bin/chmod g+w /sys/class/backlight/intel_backlight/brightness"</span>
</code></pre>

<h4 id="CPU组件"><a href="#CPU组件" class="headerlink" title="CPU组件"></a>CPU组件</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===CPU===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-cpu</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/cpu</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/cpu</span>

<span class="token comment">; 刷新间隔，默认: 1</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.5</span>

<span class="token comment">;format = &lt;label> &lt;ramp-coreload></span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label></span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %percentage%%</span>
<span class="token key attr-name">label-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#2e4e7e</span>

<span class="token comment">; Spacing between individual per-core ramps</span>
<span class="token key attr-name">ramp-coreload-spacing</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">ramp-coreload-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">▁</span>
<span class="token key attr-name">ramp-coreload-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">▂</span>
<span class="token key attr-name">ramp-coreload-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">▃</span>
<span class="token key attr-name">ramp-coreload-3</span> <span class="token punctuation">=</span> <span class="token value attr-value">▄</span>
<span class="token key attr-name">ramp-coreload-4</span> <span class="token punctuation">=</span> <span class="token value attr-value">▅</span>
<span class="token key attr-name">ramp-coreload-5</span> <span class="token punctuation">=</span> <span class="token value attr-value">▆</span>
<span class="token key attr-name">ramp-coreload-6</span> <span class="token punctuation">=</span> <span class="token value attr-value">▇</span>
<span class="token key attr-name">ramp-coreload-7</span> <span class="token punctuation">=</span> <span class="token value attr-value">█</span>

<span class="token key attr-name">ramp-coreload-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-coreload-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-coreload-5-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-coreload-6-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-coreload-7-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
</code></pre>

<h4 id="内存组件"><a href="#内存组件" class="headerlink" title="内存组件"></a>内存组件</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===内存===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-memory</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/memory</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/memory</span>

<span class="token comment">; 刷新间隔，默认: 1</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>

<span class="token comment">;format = &lt;label> &lt;ramp-used> &lt;ramp-free></span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label></span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %gb_used%/%gb_free%</span>
<span class="token key attr-name">label-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#065279</span>

<span class="token comment">; 用于 &lt;ramp-used></span>
<span class="token key attr-name">ramp-used-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">▁</span>
<span class="token key attr-name">ramp-used-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">▂</span>
<span class="token key attr-name">ramp-used-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">▃</span>
<span class="token key attr-name">ramp-used-3</span> <span class="token punctuation">=</span> <span class="token value attr-value">▄</span>
<span class="token key attr-name">ramp-used-4</span> <span class="token punctuation">=</span> <span class="token value attr-value">▅</span>
<span class="token key attr-name">ramp-used-5</span> <span class="token punctuation">=</span> <span class="token value attr-value">▆</span>
<span class="token key attr-name">ramp-used-6</span> <span class="token punctuation">=</span> <span class="token value attr-value">▇</span>
<span class="token key attr-name">ramp-used-7</span> <span class="token punctuation">=</span> <span class="token value attr-value">█</span>

<span class="token key attr-name">ramp-used-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-used-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-used-5-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-used-6-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-used-7-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>

<span class="token comment">; 用于 &lt;ramp-free></span>
<span class="token key attr-name">ramp-free-0</span> <span class="token punctuation">=</span> <span class="token value attr-value">▁</span>
<span class="token key attr-name">ramp-free-1</span> <span class="token punctuation">=</span> <span class="token value attr-value">▂</span>
<span class="token key attr-name">ramp-free-2</span> <span class="token punctuation">=</span> <span class="token value attr-value">▃</span>
<span class="token key attr-name">ramp-free-3</span> <span class="token punctuation">=</span> <span class="token value attr-value">▄</span>
<span class="token key attr-name">ramp-free-4</span> <span class="token punctuation">=</span> <span class="token value attr-value">▅</span>
<span class="token key attr-name">ramp-free-5</span> <span class="token punctuation">=</span> <span class="token value attr-value">▆</span>
<span class="token key attr-name">ramp-free-6</span> <span class="token punctuation">=</span> <span class="token value attr-value">▇</span>
<span class="token key attr-name">ramp-free-7</span> <span class="token punctuation">=</span> <span class="token value attr-value">█</span>

<span class="token key attr-name">ramp-free-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-free-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff5555</span>
<span class="token key attr-name">ramp-free-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-free-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#fba922</span>
<span class="token key attr-name">ramp-free-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-free-5-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-free-6-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
<span class="token key attr-name">ramp-free-7-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>
</code></pre>

<h4 id="日期时间"><a href="#日期时间" class="headerlink" title="日期时间"></a>日期时间</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===日期时间===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-date</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/date</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/date</span>

<span class="token comment">; 更新间隔, 默认: 1.0</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">1.0</span>
<span class="token key attr-name">format</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label></span>

<span class="token key attr-name">date</span> <span class="token punctuation">=</span> <span class="token value attr-value">%Y-%m-%d%</span>
<span class="token key attr-name">time</span> <span class="token punctuation">=</span> <span class="token value attr-value">%H:%M</span>

<span class="token comment">; 另一种格式</span>
<span class="token key attr-name">date-alt</span> <span class="token punctuation">=</span> <span class="token value attr-value">%A, %d %B %Y</span>
<span class="token key attr-name">time-alt</span> <span class="token punctuation">=</span> <span class="token value attr-value">%H:%M:%S</span>

<span class="token key attr-name">label</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %date%  %time%</span>
<span class="token key attr-name">label-font</span> <span class="token punctuation">=</span> <span class="token value attr-value">1</span>
<span class="token key attr-name">label-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#eefafafa</span>
</code></pre>

<h4 id="声音-1"><a href="#声音-1" class="headerlink" title="声音"></a>声音</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===音量===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-pulseaudio</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/alsa</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/alsa</span>
<span class="token key attr-name">sink</span> <span class="token punctuation">=</span> <span class="token value attr-value">alsa_output.pci-0000_12_00.3.analog-stereo</span>
<span class="token key attr-name">use-ui-max</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
<span class="token key attr-name">interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">5</span>

<span class="token key attr-name">format-volume</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp-volume> &lt;label-volume></span>

<span class="token key attr-name">label-muted</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">label-muted-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#a1afc9</span>

<span class="token key attr-name">ramp-volume-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-volume-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-volume-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token comment">; 左右键功能，pavucontrol 用于开关音量</span>
<span class="token key attr-name">click-left</span> <span class="token punctuation">=</span> <span class="token value attr-value">pavucontrol</span>
<span class="token comment">; click-middle =</span>
</code></pre>

<h4 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h4><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; ===电源提示===</span>
<span class="token comment">; https://github.com/polybar/polybar/wiki/Module:-battery</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">module/battery</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">internal/battery</span>

<span class="token comment">; 电量大于 99% 显示充电完成</span>
<span class="token key attr-name">full-at</span> <span class="token punctuation">=</span> <span class="token value attr-value">99</span>

<span class="token comment">; 使用以下命令列出电池和适配器:</span>
<span class="token comment">; ls -1 /sys/class/power_supply/</span>
<span class="token key attr-name">battery</span> <span class="token punctuation">=</span> <span class="token value attr-value">BAT1</span>
<span class="token key attr-name">adapter</span> <span class="token punctuation">=</span> <span class="token value attr-value">ACAD</span>

<span class="token key attr-name">poll-interval</span> <span class="token punctuation">=</span> <span class="token value attr-value">3</span>

<span class="token comment">; 时间过格式,默认: %H:%M:%S</span>
<span class="token key attr-name">time-format</span> <span class="token punctuation">=</span> <span class="token value attr-value">%H:%M</span>

<span class="token comment">; 充电</span>
<span class="token key attr-name">format-charging</span> <span class="token punctuation">=</span> <span class="token value attr-value"> &lt;animation-charging> &lt;label-charging></span>

<span class="token comment">; 放电</span>
<span class="token key attr-name">format-discharging</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;ramp-capacity> &lt;label-discharging></span>

<span class="token comment">; 充电完成</span>
<span class="token key attr-name">format-full</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;label-full></span>

<span class="token comment">; 充电状态</span>
<span class="token key attr-name">label-charging</span> <span class="token punctuation">=</span>  <span class="token value attr-value">%percentage%(%time%)</span>


<span class="token comment">; 放电状态</span>
<span class="token key attr-name">label-discharging</span> <span class="token punctuation">=</span> <span class="token value attr-value">%percentage%(%time%)</span>

<span class="token comment">;充电完成</span>
<span class="token key attr-name">label-full</span> <span class="token punctuation">=</span> <span class="token value attr-value"> %percentage%</span>
<span class="token key attr-name">label-full-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#aaff77</span>

<span class="token key attr-name">ramp-capacity-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">ramp-capacity-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">ramp-capacity-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff461f</span> 
<span class="token key attr-name">ramp-capacity-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#eaff56</span> 
<span class="token key attr-name">ramp-capacity-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#bddd22</span>
<span class="token key attr-name">ramp-capacity-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#7bcfa6</span>
<span class="token key attr-name">ramp-capacity-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#3de1ad</span>

<span class="token key attr-name">bar-capacity-width</span> <span class="token punctuation">=</span> <span class="token value attr-value">10</span>

<span class="token key attr-name">animation-charging-0</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-1</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-2</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-3</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>
<span class="token key attr-name">animation-charging-4</span> <span class="token punctuation">=</span> <span class="token value attr-value"></span>

<span class="token key attr-name">animation-charging-0-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#ff461f</span> 
<span class="token key attr-name">animation-charging-1-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#eaff56</span> 
<span class="token key attr-name">animation-charging-2-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#bddd22</span>
<span class="token key attr-name">animation-charging-3-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#7bcfa6</span>
<span class="token key attr-name">animation-charging-4-foreground</span> <span class="token punctuation">=</span> <span class="token value attr-value">#3de1ad</span>
<span class="token comment">; 动画帧率(毫秒)</span>
<span class="token key attr-name">animation-charging-framerate</span> <span class="token punctuation">=</span> <span class="token value attr-value">750</span>

<span class="token comment">;animation-discharging-0 = </span>
<span class="token comment">;animation-discharging-1 = </span>
<span class="token comment">;animation-discharging-2 = </span>
<span class="token comment">;animation-discharging-3 = </span>
<span class="token comment">;animation-discharging-4 = </span>
<span class="token comment">; 动画帧率(毫秒)</span>
<span class="token comment">;animation-discharging-framerate = 500</span>
</code></pre>

<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>图形界面的截图工具太冗余了，所以使用<a href="https://github.com/naelstrof/maim">maim</a>作为命令行截图工具，再加上i3的快捷键设置即可</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 其中$(date +%s)是自1970年以来经过的秒数，所以独一无二并且易排序，需要安装xdotool残能截取当前活动窗口</span>

maim -i <span class="token variable"><span class="token variable">$(</span>xdotool getactivewindow<span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/Pictures/Screenshot/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>.png		<span class="token comment"># 截取当前活动窗口</span>

maim <span class="token environment constant">$HOME</span>/Pictures/Screenshot/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>.png		<span class="token comment"># 全屏截图</span>

maim -s <span class="token environment constant">$HOME</span>/Pictures/Screenshot/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>.png		<span class="token comment"># 自己选取截图区域</span></code></pre>

<h2 id="Ranger"><a href="#Ranger" class="headerlink" title="Ranger"></a>Ranger</h2><p>首先运行<code>ranger --copy-config=all</code>生成配置文件</p>
<p>编辑配置修改配色方案：</p>
<center>~/.config/ranger/rc.conf</center>

<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Which colorscheme to use?  These colorschemes are available by default:</span>
<span class="token comment"># default, jungle, snow, solarized</span>
<span class="token builtin class-name">set</span> colorscheme solarized</code></pre>



<h2 id="一堆杂七杂八的软件-无需配置"><a href="#一堆杂七杂八的软件-无需配置" class="headerlink" title="一堆杂七杂八的软件(无需配置)"></a>一堆杂七杂八的软件(无需配置)</h2><pre class="language-bash" data-language="bash"><code class="language-bash">ristretto		<span class="token comment"># 图片查看</span>
vlc				 <span class="token comment"># 视频播放</span>
firefox			<span class="token comment"># 浏览器</span>
typora			<span class="token comment"># markdown编辑器，Linux下永久免费</span>
pandoc			<span class="token comment"># 文件转换</span>
netease-cloud-music		<span class="token comment"># 网易云</span>
bat					<span class="token comment"># cat的替代品</span>
thunar			<span class="token comment"># 文件管理器(虽然很少用)</span>
neofetch		<span class="token comment"># 用来展示系统信息的</span>
ncdu			<span class="token comment"># 磁盘空间查看</span>
xclip				<span class="token comment"># 用来与剪切板交互</span>
arch-install-scripts	<span class="token comment"># 用于安装arch</span></code></pre>

<hr>
<p>附上我的i3截图：</p>
<p><img src="https://s1.ax1x.com/2022/06/27/jE65Y6.png" alt="i3" loading="lazy"><em>i3</em></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Linux配置</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox</title>
    <url>/posts/10fa96af/</url>
    <content><![CDATA[<p>最近在Arch下使用VirtualBox,遇到一点小问题，在此记录分享一下。</p>
<span id="more"></span>

<h1 id="VitrualBox简介"><a href="#VitrualBox简介" class="headerlink" title="VitrualBox简介"></a>VitrualBox简介</h1><p>VirtualBox是一款开源的虚拟机软件，由德国的Innotek公司开发，但似乎已经被Oracle收购了。所谓虚拟机，就是相较于“真机”而言，并不直接安装在真实的物理媒介上接触真实的接口，而是在抽象层上重新模拟出虚拟的真实环境，就像沙盒一样。使用虚拟机的好处就是可以多个系统同时使用，并且互不干扰；缺点就是相对于真机而言受到更大的资源限制，比如调用网络、I&#x2F;O之类的速度受限等等，但是随着虚拟机技术的成熟，已经越来越接近真机的体验了。</p>
<h1 id="VirtualBox安装"><a href="#VirtualBox安装" class="headerlink" title="VirtualBox安装"></a>VirtualBox安装</h1><p>在Arch上安装VirtualBox分两种情况：</p>
<ol>
<li>使用默认的linux内核<pre class="language-none"><code class="language-none">pacman -S virtualbox virtualbox-host-modules-arch linux-headers</code></pre></li>
<li>使用其他内核，以<code>linux-lts</code>为例<pre class="language-none"><code class="language-none">pacman -S virtualbox virtualbox-host-dkms linux-lts-headers</code></pre></li>
</ol>
<p><code>virtualbox</code>就是主要的程序，<code>virtualbox-host-modules-arch linux-headers</code>等是为了VirtualBox和linux内核自动编译模块。</p>
<p>自行编译的内核请参考<a href="https://wiki.archlinux.org/title/VirtualBox">Archwiki:VirtualBox</a></p>
<h1 id="VirtualBox配置"><a href="#VirtualBox配置" class="headerlink" title="VirtualBox配置"></a>VirtualBox配置</h1><p>VirtualBox在启动前要先加载对应的linux内核模块，可以在安装后手动加载模块，但是重启之后系统会自动加载对应模块，所以不如重启来的方便。<br>启动前请先将用户加入<code>vboxusers</code>用户组</p>
<pre class="language-none"><code class="language-none">sudo usermod -a -G vboxusers username</code></pre>

<p>VirtualBox提供了多种启动方式：</p>
<ol>
<li>如果你想通过常规 GUI 使用 VirtualBox，使用 VirtualBox 命令来启动 VirtualBox。</li>
<li>如果你想在命令行下启动与管理 VirtualBox，可以使用 VBoxSDL 命令。从 VBoxSDL 启动的虚拟机，其窗口仅包含虚拟机的画面，没有菜单或是其他控制项。</li>
<li>如果你想使用不想由任何 GUI（例如在服务器上）来使用 VirtualBox，使用 VBoxHeadless 命令。如果还想登录到这种虚拟机的图形界面，就需要安装 VRDP 扩展。</li>
</ol>
<p>正常情况下使用<code>VirtualBox</code>即可。</p>
<h2 id="虚拟机创建"><a href="#虚拟机创建" class="headerlink" title="虚拟机创建"></a>虚拟机创建</h2><ol>
<li>打开<code>VirtualBox</code>，选择新建</li>
<li>输入名称，名称将用于不同虚拟机的标识</li>
<li>选择文件夹，VirtualBox将在该文件夹下面新建一个名为’vbox’的文件夹，并将虚拟机建立在里面</li>
</ol>
<p><img src="https://s1.ax1x.com/2022/07/08/jDEBOf.png" alt="jDEBOf.png" loading="lazy"><em>虚拟机信息</em></p>
<ol start="4">
<li>类型和版本根据自己将要安装的系统选择</li>
<li>分配内存大小，建议不要超过真实内存的一半，当然也得达到虚拟机系统内存的要求。</li>
</ol>
<p><img src="https://s1.ax1x.com/2022/07/08/jDVKAg.png" alt="jDVKAg.png" loading="lazy"><em>内存设置</em></p>
<ol start="6">
<li>创建虚拟硬盘，之前选文件夹的时候确保所在硬盘有足够的空间大小，选择创建虚拟硬盘</li>
</ol>
<p><img src="https://s1.ax1x.com/2022/07/08/jDVIgI.png" alt="jDVIgI.png" loading="lazy"><em>创建虚拟硬盘</em></p>
<ol start="7">
<li>选择虚拟硬盘类型，其中VDI是VirtualBox的虚拟硬盘类型，而VHD和VMDK分别是微软和VMware的虚拟硬盘格式，VirtualBox可以将各种虚拟硬盘格式进行转换。正常使用选择默认即可，其他请参见<a href="https://wiki.archlinux.org/title/VirtualBox">Archwiki:VirtualBox</a></li>
</ol>
<p><img src="https://s1.ax1x.com/2022/07/08/jDV7KP.png" alt="jDV7KP.png" loading="lazy"><em>虚拟硬盘类型</em></p>
<ol start="8">
<li>选择虚拟硬盘是动态分配还是固定大小，随个人喜好吧，我选择的动态分配感觉不出来速度上有什么问题。</li>
</ol>
<p><img src="https://imgtu.com/i/jDZZG9" alt="jDZZG9.png" loading="lazy"></p>
<ol start="9">
<li>创建虚拟硬盘的大小，根据自己的需求，选择动态分配的话，这里的大小只是上限而非实际占用，文件位置默认即可。</li>
</ol>
<p><img src="https://s1.ax1x.com/2022/07/08/jDe9Wd.png" alt="jDe9Wd.png" loading="lazy"><em>虚拟硬盘大小</em></p>
<ol start="10">
<li>(可选)Oracle Extension Pack 为虚拟机提供了额外功能。但它并不是以自由软件协议发布的，仅供个人使用。尽管<code>aur</code>上有打包好的，但是手动下载也比较方便。在<a href="https://www.virtualbox.org/wiki/Downloads">Download</a>页面选择 All supported platforms下载。然后在VirtualBox的开始界面的最顶端中选择管理-全局设定-扩展，加入下载的扩展文件</li>
</ol>
<h2 id="客体机配置"><a href="#客体机配置" class="headerlink" title="客体机配置"></a>客体机配置</h2><p>客体机只需要正常安装即可，但是客体机的扩展提供了很好的体验，解决了许多问题，前往<a href="https://download.virtualbox.org/virtualbox/">Downloads</a>找到最新的版本(或者对应的版本)，下载 VBoxGuestAdditions.iso</p>
<ol>
<li>启动，第一次启动的时候需要选择启动镜像，就是要安装的那个系统的iso镜像，选择注册打开镜像</li>
<li>正常安装</li>
<li>挂载客体机扩展的镜像，在VirtualBox的开始界面中选中虚拟机，选择设置-存储，在第二个设备的地方选择镜像</li>
</ol>
<p><img src="https://s1.ax1x.com/2022/07/08/jDKcDI.png" alt="jDKcDI.png" loading="lazy"><em>客体机扩展挂载</em></p>
<ol start="4">
<li>在虚拟机中，找到挂载的镜像，安装之。</li>
</ol>
<p>然后，你会发现分辨率有所提高，还支持文件双向拖放，还有无缝模式等等。</p>
<h1 id="Tips-and-tricks"><a href="#Tips-and-tricks" class="headerlink" title="Tips and tricks"></a>Tips and tricks</h1><p>在启动虚拟机的时候卡在了20%的进度条没有反应(据”教授”说Windows下VirtualBox最近也这样？)<br>解决方案：参考</p>
<ol>
<li><a href="https://bbs.archlinux.org/viewtopic.php?id=277409">Virtualbox hangs on Starting virtual machine window</a></li>
<li><a href="https://bbs.archlinux.org/viewtopic.php?id=276699">KVM busted in linux 5.18 due to Intel CET</a></li>
<li><a href="https://bbs.archlinux.org/viewtopic.php?id=277611">Virtualbox hangs on booting VM</a></li>
</ol>
<p>简单来说，就是较新的内核(arch-5.18)之后，linux的内核为了提升intel上的表现引入了<code>ibt</code>的功能，但是似乎与VirtualBox的虚拟化产生了一定的冲突。因此在启动linux内核的时候需要把<code>ibt</code>关掉。</p>
<p>具体做法：在grub界面按<code>e</code>进入配置，找到<code>linux /boot/vmlinuz-linux ···</code>这一行，在末尾加上<code>ibt=off</code>，用空格隔开。由于我自己写的grub.cfg,所以我直接改grub.cfg了，这样也行。</p>
<p>这里不得不称赞archlinux的社区，Linux那边刚刚更新的内核，大家一下就解决了问题，甚至把Linux的源码给翻了出来。(至于windows那边卡住，只能坐等VirtualBox更新了)</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VirtualBOx</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows安装与激活</title>
    <url>/posts/af4d8cb5/</url>
    <content><![CDATA[<p>最近决定将ArchLinux作为主力了，但是无奈微软和腾讯这样几乎垄断的存在会影响日常的使用，只好装个Win的虚拟机应付一下。所以先记录一下Windows方面的安装和激。</p>
<span id="more"></span>

<h1 id="Windows-ltsc"><a href="#Windows-ltsc" class="headerlink" title="Windows ltsc"></a>Windows ltsc</h1><p>自从升级到了win11之后(<del>可恶，竟然用WSL和Win无缝连接作为诱饵，结果呢？连个文件资源管理器都卡半天，别说对LInux子系统的支持了</del>)，使用Windows的欲望就下降了，所以还是不用win11了。</p>
<p>Win10其实已经比较吃内存了，至少就我自己的Windows而言，开机就吃了将近4g内存了。但是，实在是受不了winxp和win7的时代了。于是发现了还有windos ltsc.</p>
<p>Windows ltsc是Windows企业版的长期支持版本，例如win10 ltsc 2019是十年，而win10 ltsc 2021是5年，在生命周期内微软保证了系统的稳定性，且不进行版本更新。事实上，就连功能性的更新也很少，微软的原话是：</p>
<div class="success">

<blockquote>
<p>功能更新每 2-3 年（而不是每 6 个月）在新的 LTSC 版本中提供，组织可以选择将其安装为就地升级，甚至跳过版本。</p>
</blockquote>
</div>

<p><del>想起了之前win11每个礼拜都有更新并关机的选项的日子。</del></p>
<p>除此之外，更重要的是，为了系统的稳定性和长期支持，微软自己把ltsc版本里面诸如<strong>edge</strong>、微软小娜、应用商店，甚至许多系统的后台服务都去掉了。(看来微软是知道这些东西没什么必要的)所以，相对应的，所需的内存也会减小，我的虚拟机(64位的)现在开机占2g内存，分配了4g内存，使用流畅。</p>
<p>微软官方没有提供ltsc版本的镜像，官方的回答是到MSDN上下载。(有需要也可找我要镜像)</p>
<h1 id="关于Office"><a href="#关于Office" class="headerlink" title="关于Office"></a>关于Office</h1><p>装好Windows之后还要解决Office的问题，Office的镜像在MSDN上也有，但是没有Office2019或者2021的Vol版本。而如果要使用本文后面的方式激活Office的话，是需要Vol版本的。可惜我对于其他地方的镜像并不放心(<del>不是懒得找</del>)，发现微软也提供了Office安装的其他方式——<a href="https://docs.microsoft.com/en-us/deployoffice/office-deployment-tool-configuration-options">Office Deployment Tool</a>，简称ODT。</p>
<p>ODT是Office的部署工具，可以自定义部署Office。(不吐槽了，从来没有告诉过我，原来可以不要诸如team之类的东西)</p>
<h2 id="下载ODT"><a href="#下载ODT" class="headerlink" title="下载ODT"></a>下载ODT</h2><p>去<a href="https://www.microsoft.com/en-us/download/details.aspx?id=49117">下载ODT</a>界面下载即可</p>
<p>下载完成后运行ODT,按照提示将文件提取到每个位置，自己建一个文件夹就行。里面会提取出<code>setup.exe</code>的主程序和几个<code>xml</code>配置文件。</p>
<h2 id="定制Office"><a href="#定制Office" class="headerlink" title="定制Office"></a>定制Office</h2><p>定制Office就是自己写一个<code>xml</code>配置文件，可以参照<a href="https://docs.microsoft.com/en-us/deployoffice/office-deployment-tool-configuration-options">Office Deployment Tool</a>进行编写或者改一改提取出来的<code>xml</code>的范例就行，当然更简单的方式是用<a href="https://config.office.com/">图形化的配置(请点击这里)</a>。</p>
<p>使用图形化的配置过程，只要选择创建新的配置，然后按照自己的需求配置，最后导出即可。</p>
<h2 id="安装Office"><a href="#安装Office" class="headerlink" title="安装Office"></a>安装Office</h2><p>在ODT的目录里打开命令行，记得把之前的配置文件也放到这个目录里。然后运行<code>.\setup.exe /download .\Configuration.xml</code>下载Office,等待几分钟后，目录下会出现名为Office的文件夹，接着运行<code>.\setup.exe /configure .\Configuration.xml</code>即可安装。实际上，直接运行第二条命令也是可以的，只是把下载和安装在一起了，且安装之后没有下载的文件罢了。</p>
<h1 id="Windows-激活"><a href="#Windows-激活" class="headerlink" title="Windows 激活"></a>Windows 激活</h1><p>参见微软官方页面<a href="https://docs.microsoft.com/zh-cn/windows-server/get-started/kms-client-activation-keys">密钥管理服务 (KMS) 客户端激活和产品密钥</a>，这可是正经的激活，只是接下来我们用开源的软件搭建里一个KMS服务器罢了。</p>
<h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p>项目地址：<a href="https://github.com/Wind4/vlmcsd">Wind4&#x2F;vlmcsd</a></p>
<p>直接用docker比较方便：</p>
<pre class="language-none"><code class="language-none">docker pull mikolatero&#x2F;vlmcsd
docker run -d -p 1688:1688 --restart&#x3D;always --name&#x3D;&quot;vlmcsd&quot; mikolatero&#x2F;vlmcsd</code></pre>

<p>需要打开1688端口以供vlmsd使用</p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>打开命令行，开始激活。</p>
<h3 id="配置GVLK"><a href="#配置GVLK" class="headerlink" title="配置GVLK"></a>配置GVLK</h3><p>一般情况下，key是自带的，不需要安装，除非之前手动配置过其他密钥。</p>
<p>如果需要配置GVLK,输入以下命令，将<code>Key</code>替换为对应系统版本的<code>Key</code>:</p>
<pre class="language-none"><code class="language-none">#slmgr &#x2F;pik GVLK
#Example(Windows 10 LTSC 2019):
slmgr &#x2F;pik M7XTQ-FN8P6-TTKYV-9D4CC-J462D</code></pre>

<p>需要其他版本的GVLK请到<a href="https://docs.microsoft.com/zh-cn/windows-server/get-started/kms-client-activation-keys">这里</a>查看。</p>
<h3 id="配置使用KMS服务"><a href="#配置使用KMS服务" class="headerlink" title="配置使用KMS服务"></a>配置使用KMS服务</h3><pre class="language-none"><code class="language-none"># slmgr &#x2F;skms kms-server[:tcp-port]
# Example:
slmgr &#x2F;skms kms.xxx.xxx:1688</code></pre>

<p>将<code>kmx.xxx.xxx</code>换成你的<code>vlmscd</code>服务器即可，1688是默认端口可以省略。</p>
<h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><pre class="language-none"><code class="language-none">slmgr &#x2F;ato</code></pre>

<p>等待一会儿会看到激活成功的提示。</p>
<p>可以输入以下命令查看激活状态，一般显示批量激活将于 xxxx&#x2F;x&#x2F;x xx:xx:xx 过期，一般是 180 天或 45 天的有效期。过期后，如果 KMS 服务器还在，会自动续期的。</p>
<pre class="language-none"><code class="language-none">slmgr &#x2F;xpr</code></pre>

<h3 id="激活Office"><a href="#激活Office" class="headerlink" title="激活Office"></a>激活Office</h3><p>首先切换到Office的文件夹：</p>
<pre class="language-none"><code class="language-none">if exist &quot;C:\Program Files (x86)\Microsoft Office\Office14\ospp.vbs&quot; (cd &quot;C:\Program Files (x86)\Microsoft Office\Office14&quot;) else (cd &quot;c:\Program Files\Microsoft Office\Office14&quot;)
if exist &quot;C:\Program Files (x86)\Microsoft Office\Office15\ospp.vbs&quot; (cd &quot;C:\Program Files (x86)\Microsoft Office\Office15&quot;) else (cd &quot;c:\Program Files\Microsoft Office\Office15&quot;)
if exist &quot;C:\Program Files (x86)\Microsoft Office\Office16\ospp.vbs&quot; (cd &quot;C:\Program Files (x86)\Microsoft Office\Office16&quot;) else (cd &quot;c:\Program Files\Microsoft Office\Office16&quot;)</code></pre>

<p>上面命令嫌麻烦也可以手动打开文件夹，注意文件夹里面一定有一个<code>ospp.vbs</code>。</p>
<h4 id="配置GVLK-1"><a href="#配置GVLK-1" class="headerlink" title="配置GVLK"></a>配置GVLK</h4><p>同样，没有装过密钥的可以忽略这一步。</p>
<pre class="language-none"><code class="language-none"># Example(Office LTSC Professional Plus 2021):
cscript ospp.vbs &#x2F;inpkey:FXYTK-NJJ8C-GB6DW-3DYQT-6F7TH</code></pre>

<h4 id="配置使用KMS服务-1"><a href="#配置使用KMS服务-1" class="headerlink" title="配置使用KMS服务"></a>配置使用KMS服务</h4><pre class="language-none"><code class="language-none"># cscript ospp.vbs &#x2F;sethst:kms-server
# Example:
cscript ospp.vbs &#x2F;sethst:kms.xxx.xxx
# cscript ospp.vbs &#x2F;setprt:tcp-port
# Example:
cscript ospp.vbs &#x2F;setprt:1688</code></pre>

<p>将<code>kms.xxx.xxx</code>换成你的服务器，<code>1688</code>为默认端口可以不设置。</p>
<h4 id="激活-1"><a href="#激活-1" class="headerlink" title="激活"></a>激活</h4><pre class="language-none"><code class="language-none">cscript ospp.vbs &#x2F;act</code></pre>

<p>等一会儿就能看到成功的信息，可以输入以下命令查看激活状态，一般是 180 天或 45 天的有效期。过期后，如果 KMS 服务器还在，会自动续期的。</p>
<pre class="language-none"><code class="language-none">cscript ospp.vbs &#x2F;dstatus</code></pre>

<h1 id="After-Words"><a href="#After-Words" class="headerlink" title="After Words"></a>After Words</h1><p>上面的kms服务器可以搭建在windows本地，如果不方便可以用我的kms服务:kms.zephyr.monster,就不要用网上奇怪的工具激活了。祝大家<del>早日摆脱</del>好好享受Windows.</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Winodws</tag>
      </tags>
  </entry>
  <entry>
    <title>fbterm MIT1</title>
    <url>/posts/72d67d3f/</url>
    <content><![CDATA[<p>这是我的第一个系列文章，打算花一个学期的时间打造一个没有图形界面但是功能齐全的Archlinux。经过讨论，采用<a href="https://g-dab.github.io/">G.dab</a>的提议来命名此系列为Moonlight in Twilight，暮光中的月色，简称MIT。在此感谢G.dab，也希望大家一起进步！</p>
<span id="more"></span>

<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>参见我的另一篇文章——<a href="https://zephyrheather.github.io/2021/07/16/arch-linux-usb-an-zhuang-pian/">Arch Linux USB（安装篇）</a>，里面详细介绍了整个安装的过程。在这次的MIT系列中，又提供了安装的<a href="https://asciinema.org/a/cYwN6bRh3W2pmB89AIQl8L6hI">视频</a>过程，注意其中在格式化的时候采用的命令&#96;mkfs.ext4 -0 “^has_journal” &#x2F;dev&#x2F;sdXx”是为了增加U盘的读写次数而不创建日志文件，其他的步骤与之前的文章一致。但是要注意，没有日志文件如果在使用过程中出现意外断电或者热拔插，就会损失数据，所以最后我还是选择了使用日志。</p>
<h1 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>尽管没有了图形界面，但是linux原生的tty并不能支持256色的输出、中文显示、输入法等功能，所以需要其他的解决方案。在这里，我采用的是framebuffer，也就是帧缓冲，不经由X服务器，直接对帧缓冲设备&#x2F;dev&#x2F;fb0进行操作，实现图像的显示。理论上来说，framebuffer的支持没有上限，可以调控屏幕的每一个像素点，但是直接基于framebuffer的应用很少(毕竟大家都去图形界面了)。这里我们使用fbterm这一基于framebuffer的终端。其实还有yaft也是基于framebuffer的，还有另一种技术KMS可以提供选择，但是fbterm是其中对中文最友好一个，fcitx对其有默认的插件支持。</p>
<p>主要参考：</p>
<ul>
<li><a href="https://zh.opensuse.org/SDB:Fbterm">SDB:Fbterm</a></li>
<li><a href="https://aur.archlinux.org/packages/fbterm">AUR fbterm</a></li>
<li><a href="https://linux.die.net/man/1/fbterm">fbterm(1) - Linux man page</a>(这个版本已经有点过时了，建议各位直接<code>man fbterm</code>查看)</li>
</ul>
<p>主要还是多看看man page里面怎么写的，然后在AUR的讨论区看看有哪些问题别人已经遇到过了。</p>
<p>下面引自<a href="https://zh.opensuse.org/SDB:Fbterm">SDB:Fbterm</a></p>
<blockquote>
<p>fbterm 是一个基于帧缓冲设备或 VESA 视频卡的 Linux 终端模拟器。它是用于 Runlevel 3 控制台也即无 X11  环境的纯终端，也就是说，和 Bash，Zsh 不同，它不能在 konsole 或 gnome-terminal  里面跑。它是目前可用的最强中文控制台。</p>
<p>特性</p>
<ul>
<li>启用了加速滚动后，和 Linux 内核终端的速度一样，也即作为一个模拟器，它能和 Runlevel 3 默认终端一样快。</li>
<li>使用 fontconfig 配置字体，freetype2 渲染，与基于 Qt&#x2F;Gtk+ 的图形应用一样</li>
<li>可以动态的创建&#x2F;销毁多达 10 个窗口</li>
<li>可记录每个窗口的滚动历史</li>
<li>自动检测当前语言的文本编码，支持中日韩双字节脚本。</li>
<li>可动态使用快捷键切换预配置的额外文本编码</li>
<li>与 gpm 服务器配合可跨窗口复制粘贴文本</li>
<li>支持屏幕转向</li>
<li>支持服务器-客户端结构的输入法</li>
<li>支持背景图片</li>
</ul>
</blockquote>
<p>(<em>其实这就是把man page翻译了一遍</em>)</p>
<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>在Archlinux上，你很容易安装fbterm，只要通过AUR即可</p>
<ul>
<li>aur: <a href="https://aur.archlinux.org/packages/fbterm">https://aur.archlinux.org/packages/fbterm</a></li>
<li>github: <a href="https://github.com/sfzhi/fbterm">https://github.com/sfzhi/fbterm</a></li>
</ul>
<h2 id="权限配置"><a href="#权限配置" class="headerlink" title="权限配置"></a>权限配置</h2><p>一般来说，framebuffer设备的使用权限归于root和video组(可以用<code>ls -l /dev/fb0</code>查看)</p>
<p>所以需要把你的用户加到<code>video</code>组：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gpasswd -a username video</code></pre>

<p>同时，根据man page:</p>
<blockquote>
<p>FbTerm 尝试将 linux 内核键映射表更改为设置快捷方式，这需要 <em>SYS_TTY_CONFIG</em>功能，因为内核版本 2.6.15。这意味着 FbTerm 应该是一个 setuid 0 程序，以允许非 root 用户使用快捷方式。FbTerm 仅在更改键映射表时暂时切换到 root 权限，我们相信它几乎没有安全问题。如果你真的不喜欢这个并且有一个启用了文件系统功能的 linux 内核，它允许用户在不使用 setuid 0（官方内核 2.6.27 包括它）的情况下为二进制文件提供 root 权限的子集，你可以运行命令“ <strong>sudo setcap ‘cap_sys_tty_config+ep’ &#x2F;path&#x2F;to&#x2F;fbterm</strong> “。</p>
<p>FbTerm 将 &#x2F;dev&#x2F;tty0 输出重定向到当前子窗口的伪终端。在 linux 2.6.10 之前的版本中，只要输出还没有被重定向，任何人都可以这样做；从 2.6.10 版开始，只有 root 或具有<em>CAP_SYS_ADMIN</em>功能的进程可以执行此操作。您应该对 FbTerm 进行与上述类似的工作，以便为非 root 用户启用此功能。</p>
</blockquote>
<p>简单来说，如果普通用户要使用快捷键，需要运行命令</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> setcap <span class="token string">'cap_sys_tty_config+ep'</span> /usr/bin/fbterm</code></pre>

<h2 id="中文显示"><a href="#中文显示" class="headerlink" title="中文显示"></a>中文显示</h2><p>你得先创建配置文件，将其拷贝到<code>~/.config/fbterm/fbtermrc</code>(配置文件应该就在编译的目录下面，找不到的话可以参考文末我给出的配置)</p>
<p>通过<code>fc-list</code>查看已安装了那些字体，如果没有装中文字体先装上，在<code>fbtermrc</code>的<code>font-names=</code>一栏填上你需要使用的字体，并用逗号<code>,</code>分隔，比如<code>font-names=XXX(通用字体),XXX(中文字体)</code></p>
<p><code>text-encoding</code>一栏是编码格式，fbterm默认使用<code>UTF-8</code>，不改也没事。</p>
<p>通过<code>fbterm -s xx(数字) -n XXX(字体)</code>可以指定字体和字体大小进行调试，<del>不过framebuffer对中文的绘制的确不是很好，能看就行了</del>(最新测试，中文字体在fbterm下显示和图形界面完全一样，不过要确保使用的第一个字体里面没有中文，这样才会使用中文字体，因为我之前的配置是<code>font-names=Freemono, LXGW WenKai Mono</code>但是Freemono有比较难看的中文字体，我还以为是fbterm的问题)。</p>
<h2 id="背景图像"><a href="#背景图像" class="headerlink" title="背景图像"></a>背景图像</h2><blockquote>
<p>FbTerm 不会直接加载和解析任何格式的图像文件，而是在定义变量<em>FBTERM_BACKGROUND_IMAGE</em>的情况下在启动时截取帧缓冲设备的屏幕截图，然后将此屏幕截图用作文本渲染的背景。为了启用背景图像支持，用户应首先使用图像查看器将图像放入帧缓冲设备。下面列出了使用 fbv 的脚本：</p>
</blockquote>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># fbterm-bi: a wrapper script to enable background image with fbterm</span>
<span class="token comment"># usage: fbterm-bi /path/to/image fbterm-options</span>

<span class="token builtin class-name">echo</span> -ne <span class="token string">"<span class="token entity" title="\e">\e</span>[?25l"</span> <span class="token comment"># hide cursor</span>

fbv -ciuker <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
q
EOF</span>

<span class="token builtin class-name">shift</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">FBTERM_BACKGROUND_IMAGE</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token builtin class-name">exec</span> fbterm <span class="token string">"<span class="token variable">$@</span>"</span></code></pre>

<p>首先得安装framebuffer下的图像显示工具fbv，可以直接由pacman安装，然后创建以上脚本，别忘了赋予可执行权限</p>
<p>你可以给这个脚本添加路径的环境变量，不过我采用的方式是在<code>.zshrc</code>里面创建了一个命令别名<code>alias fbterm-bi=&quot;/path-to/fbterm-bi&quot;</code>，这样也很方便</p>
<p>在这个脚本的使用中，需要指定图片路径<code>$1&quot;</code>就是这个意思，如果只需要用一张背景图片而不愿意每次把图片路径打一遍，可以将<code>fbv -ciuker &quot;$1&quot; &lt;&lt; EOF</code>改为<code>fbv -ciuker &quot;/path-to/image&quot; &lt;&lt; EOF</code>。我的做法是又偷懒用zsh创建了别名，并且由于想改变背景的亮度(因为有时候终端的壁纸太亮，有些颜色看不清)，所以一口气创建了四个命令<code>fbterm1-fbterm4</code>，分别对应不同的亮度和心情。</p>
<p>这里顺带提一笔，可以用fbgrab作为截图软件</p>
<hr>
<h2 id="闲谈"><a href="#闲谈" class="headerlink" title="闲谈"></a>闲谈</h2><p>这里把话题扯开一下，这样看来配置和使用这个fbterm还是蛮简单的，为什么我还花了一个礼拜的时间折腾它呢。主要的困难在于输入法和颜色。但是，把问题解决了之后也还是蛮简单的，不要放弃，我们继续前行。</p>
<h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><p>正如前文所说，fcitx对fbterm提供了支持。但是wiki上说fcitx正在维护，推荐使用fcitx5。没想到fcitx-fbterm也迁移到了fcitx5-fbterm，可以在aur上获取。但是出于我也不清楚的原因，fcitx5并没有在我的实验中正常运行。所以最后还是使用fcitx作为输入法。并且fcitx-fbterm虽然在aur里面，但是需要从google.code拉源码，所以一直下不下来，所以需要特殊的网络环境。</p>
<p>安装之后的配置倒是轻松，只要在fbtermrc找到<code>input-method=fcitx-fbterm</code>即可。</p>
<p>fbterm将fcitx作为一个服务器来使用，所以需要先自己运行fcitx，只要<code>fcitx -d</code>(注意，fcitx运行之后不会由于fbterm的退出而退出，所以只要运行一次即可)</p>
<p>当然，也可以设置fcitx自启动，但是考虑到使用中文输入法的机会也不多，各位根据自己的需求吧。</p>
<p>另外，需要在<code>~/.config/fcitx/profile</code>里面将需要使用的输入法改为Ture(不得不说，fcitx的配置文件真奇怪，里面都是注释。)</p>
<h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><p>fbterm支持256色，但是……</p>
<p>当我运行<code>ranger</code>的时候并不能正确预览，就像在控制台一样，python会报颜色超出范围的错误。一开始我还以为是ranger出错了，看到在github上的确有类似的issue,不过人家是图形界面，需要设置<code>TERM=xterm-256color</code>的环境变量。我<code>export</code>了一下，还真的能显示了，但完全不是想要的效果。</p>
<p>后来仔细阅读了man page (fbterm)，发现，fbterm虽然支持256色，但是默认<code>TERM=linux</code>，需要在命令前手动加上<code>TERM=fbterm</code>才能使用256色。在aur的评论区也有类似的讨论，不过没有很好的解决方案，直接设置<code>TERM=fbterm</code>的环境变量会在tmux和控制台中出现一定的问题，所以我又在<code>.zshrc</code>里加上了<code>TERM=fbterm</code>以及<code>TERM=tmux-256color</code>的别名，一个在fbterm中使用，一个在tmux中使用。</p>
<h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>其实还是有许多问题的解救不是令人满意，如果大家有什么问题和解决方案，欢迎在讨论区提出。<br>贴一下我的fbtermrc：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Configuration for FbTerm</span>

<span class="token comment"># Lines starting with '#' are ignored.</span>
<span class="token comment"># Note that end-of-line comments are NOT supported, comments must be on a line of their own.</span>


<span class="token comment"># font family names/pixelsize used by fbterm, multiple font family names must be seperated by ','</span>
<span class="token comment"># and using a fixed width font as the first is strongly recommended</span>
font-names<span class="token operator">=</span>LXGW WenKai Mono
font-size<span class="token operator">=</span><span class="token number">19</span>

<span class="token comment"># force font width (and/or height), usually for non-fixed width fonts</span>
<span class="token comment"># legal value format: n (fw_new = n), +n (fw_new = fw_old + n), -n (fw_new = fw_old - n)</span>
<span class="token comment">#font-width=</span>
<span class="token comment">#font-height=</span>

<span class="token comment"># terminal palette consists of 256 colors (0-255)</span>
<span class="token comment"># 0 = black, 1 = red, 2 = green, 3 = brown, 4 = blue, 5 = magenta, 6 = cyan, 7 = white</span>
<span class="token comment"># 8-15 are brighter versions of 0-7</span>
<span class="token comment"># 16-231 is 6x6x6 color cube</span>
<span class="token comment"># 232-255 is grayscale</span>
color-0<span class="token operator">=</span>000000
color-1<span class="token operator">=</span>AA0000
color-2<span class="token operator">=</span>00AA00
color-3<span class="token operator">=</span>AA5500
color-4<span class="token operator">=</span>0000AA
color-5<span class="token operator">=</span>AA00AA
color-6<span class="token operator">=</span>00AAAA
color-7<span class="token operator">=</span>AAAAAA
color-8<span class="token operator">=</span><span class="token number">555555</span>
color-9<span class="token operator">=</span>FF5555
color-10<span class="token operator">=</span>55FF55
color-11<span class="token operator">=</span>FFFF55
color-12<span class="token operator">=</span>5555FF
color-13<span class="token operator">=</span>FF55FF
color-14<span class="token operator">=</span>55FFFF
color-15<span class="token operator">=</span>FFFFFF

<span class="token comment"># default foreground/background colors (chosen from palette)</span>
color-foreground<span class="token operator">=</span><span class="token number">7</span>
color-background<span class="token operator">=</span><span class="token number">0</span>

<span class="token comment"># max scroll-back history lines of every window, value must be [0 - 65535], 0 means disable it</span>
history-lines<span class="token operator">=</span><span class="token number">0</span>

<span class="token comment"># up to 5 additional text encodings, multiple encodings must be seperated by ','</span>
<span class="token comment"># run 'iconv --list' to get available encodings.</span>
text-encodings<span class="token operator">=</span>UTF-8

<span class="token comment"># cursor shape: 0 = underline, 1 = block</span>
<span class="token comment"># cursor flash interval in milliseconds, 0 means disable flashing</span>
cursor-shape<span class="token operator">=</span><span class="token number">1</span>
cursor-interval<span class="token operator">=</span><span class="token number">500</span>

<span class="token comment"># additional ascii chars considered as part of a word while auto-selecting text, except ' ', 0-9, a-z, A-Z</span>
word-chars<span class="token operator">=</span>._-

<span class="token comment"># change the clockwise orientation angle of screen display</span>
<span class="token comment"># available values: 0 = 0 degree, 1 = 90 degrees, 2 = 180 degrees, 3 = 270 degrees</span>
screen-rotate<span class="token operator">=</span><span class="token number">0</span>

<span class="token comment"># specify the favorite input method program to run</span>
input-method<span class="token operator">=</span>fcitx-fbterm

<span class="token comment"># treat ambiguous width characters as wide</span>
<span class="token comment">#ambiguous-wide=yes</span></code></pre>

<hr>
<p>至于tmux是什么，请看下回分解。</p>
<p>附上新的终端照片(用fbgrab截的图)</p>
<p><img src="https://s1.ax1x.com/2022/06/27/jE6ySU.png" alt="fbterm" loading="lazy"><em>fbterm</em></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Moonlight in Twilight</tag>
      </tags>
  </entry>
  <entry>
    <title>muscic and ramroot MIT3</title>
    <url>/posts/e49049b6/</url>
    <content><![CDATA[<p>今天是清明节，本来早就准备好文章了，但是不小心删掉了，所以只好重写一篇。既然放假，就来点简单轻松又愉快的。</p>
<span id="more"></span>

<h1 id="musicbox"><a href="#musicbox" class="headerlink" title="musicbox"></a>musicbox</h1><p>学习怎么能没有音乐呢。muscibox是用python编写的网易云命令行版，使用体验不错。先放github链接:<a href="https://github.com/darknessomi/musicbox">musicbox</a></p>
<blockquote>
<p>高品质网易云音乐命令行版本，简洁优雅，丝般顺滑，基于 Python 编写</p>
</blockquote>
<p>它具有以下特性</p>
<ol>
<li>320kbps 的高品质音乐</li>
<li>歌曲，艺术家，专辑检索</li>
<li>网易 22 个歌曲排行榜</li>
<li>网易新碟推荐</li>
<li>网易精选歌单</li>
<li>网易主播电台</li>
<li>私人歌单，每日推荐</li>
<li>随心打碟</li>
<li>本地收藏，随时加 ❤</li>
<li>播放进度及播放模式显示</li>
<li>现在播放及桌面歌词显示</li>
<li>歌曲评论显示</li>
<li>一键进入歌曲专辑</li>
<li>定时退出</li>
<li>Vimer 式快捷键让操作丝般顺滑</li>
<li>可使用数字快捷键</li>
<li>可使用自定义全局快捷键</li>
<li>对当前歌单列表进行本地模糊搜索</li>
</ol>
<p>快捷键如下：</p>
<table>
<thead>
<tr>
<th>Key</th>
<th>Effect</th>
<th>效果</th>
</tr>
</thead>
<tbody><tr>
<td>j</td>
<td>Down</td>
<td>下移</td>
</tr>
<tr>
<td>k</td>
<td>Up</td>
<td>上移</td>
</tr>
<tr>
<td>num + j</td>
<td>Quick Jump</td>
<td>快速向后跳转n首</td>
</tr>
<tr>
<td>num + k</td>
<td>Quick Up</td>
<td>快速向前跳转n首</td>
</tr>
<tr>
<td>h</td>
<td>Back</td>
<td>后退</td>
</tr>
<tr>
<td>l</td>
<td>Forword</td>
<td>前进</td>
</tr>
<tr>
<td>u</td>
<td>Prev Page</td>
<td>上一页</td>
</tr>
<tr>
<td>d</td>
<td>Next Page</td>
<td>下一页</td>
</tr>
<tr>
<td>f</td>
<td>Search</td>
<td>当前列表模糊搜索</td>
</tr>
<tr>
<td>[</td>
<td>Prev Song</td>
<td>上一曲</td>
</tr>
<tr>
<td>]</td>
<td>Next Song</td>
<td>下一曲</td>
</tr>
<tr>
<td>num + [</td>
<td>Quick Prev Song</td>
<td>快速前n首</td>
</tr>
<tr>
<td>num + ]</td>
<td>Quick Next Song</td>
<td>快速后n首</td>
</tr>
<tr>
<td>num + Shift + g</td>
<td>Index for Song</td>
<td>跳到第n首</td>
</tr>
<tr>
<td>&#x3D;</td>
<td>Volume +</td>
<td>音量增加</td>
</tr>
<tr>
<td>-</td>
<td>Volume -</td>
<td>音量减少</td>
</tr>
<tr>
<td>Space</td>
<td>Play&#x2F;Pause</td>
<td>播放&#x2F;暂停</td>
</tr>
<tr>
<td>?</td>
<td>Shuffle</td>
<td>手气不错</td>
</tr>
<tr>
<td>m</td>
<td>Menu</td>
<td>主菜单</td>
</tr>
<tr>
<td>p</td>
<td>Present&#x2F;History</td>
<td>当前&#x2F;历史播放列表</td>
</tr>
<tr>
<td>i</td>
<td>Music Info</td>
<td>当前音乐信息</td>
</tr>
<tr>
<td>Shift + p</td>
<td>Playing Mode</td>
<td>播放模式切换</td>
</tr>
<tr>
<td>a</td>
<td>Add</td>
<td>添加曲目到打碟</td>
</tr>
<tr>
<td>Shift + a</td>
<td>Enter Album</td>
<td>进入专辑</td>
</tr>
<tr>
<td>g</td>
<td>To the First</td>
<td>跳至首项</td>
</tr>
<tr>
<td>Shift + g</td>
<td>To the End</td>
<td>跳至尾项</td>
</tr>
<tr>
<td>z</td>
<td>DJ List</td>
<td>打碟列表</td>
</tr>
<tr>
<td>s</td>
<td>Star</td>
<td>添加到收藏</td>
</tr>
<tr>
<td>c</td>
<td>Collection</td>
<td>收藏列表</td>
</tr>
<tr>
<td>r</td>
<td>Remove</td>
<td>删除当前条目</td>
</tr>
<tr>
<td>Shift + j</td>
<td>Move Down</td>
<td>向下移动当前项目</td>
</tr>
<tr>
<td>Shift + k</td>
<td>Move Up</td>
<td>向上移动当前项目</td>
</tr>
<tr>
<td>Shift + c</td>
<td>Cache</td>
<td>缓存歌曲到本地</td>
</tr>
<tr>
<td>,</td>
<td>Like</td>
<td>喜爱</td>
</tr>
<tr>
<td>.</td>
<td>Trash FM</td>
<td>删除FM</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>Next FM</td>
<td>下一FM</td>
</tr>
<tr>
<td>q</td>
<td>Quit</td>
<td>退出</td>
</tr>
<tr>
<td>t</td>
<td>Timing Exit</td>
<td>定时退出</td>
</tr>
<tr>
<td>w</td>
<td>Quit &amp; Clear</td>
<td>退出并清除用户信息</td>
</tr>
</tbody></table>
<h1 id="ramroot"><a href="#ramroot" class="headerlink" title="ramroot"></a>ramroot</h1><p>ramroot可以让archlinux在内存中运行，成为内存系统。这意味着运行速度(涉及数据读写时)会非常快，并且对于Archlinux USB可以在数据转到内存之后将U盘拔除。</p>
<blockquote>
<p>Run Linux entirely from RAM! This is customizable mkinitcpio hook that completely loads the root file system to a zram partition during the initramfs boot stage.</p>
</blockquote>
<p>通过aur安装之后armroot会自动生成基本的配置，只要再次重启，开机时就会询问你是否要进入ramlinux，选择y就会开始将根目录拷贝到内存中，显示登录界面的时候就可以拔出U盘了。</p>
<p>作者还给出了详细的配置说明：<a href="https://github.com/arcmags/ramroot">armroot</a></p>
<p>(再也不用忍受USB3.0的摧残了)</p>
<h1 id="magic-wormhole"><a href="#magic-wormhole" class="headerlink" title="magic-wormhole"></a>magic-wormhole</h1><p>github:<a href="https://github.com/magic-wormhole/magic-wormhole">magic-wormhole</a><br>Magic Wormhole 提供了这样一种文件传输方式：不需要任何的上传、网页界面，或登录密码，只需输入几个代码，即可传送文件。</p>
<p>Magic Wormhole 提供了一个名为 wormhole 的库和命令行工具，它可以从一台计算机到另一台计算机获取任意大小的文件和目录（或短文本）。通过使用相同的“虫洞代码”（wormhole codes）来识别两个端点。使用的代码很简短，人性化，接收方通常只需要输入几个字符。虫洞代码是一次性使用，不需要记住。</p>
<p>示例</p>
<p>Sender :</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">$ wormhole send README.md
Sending <span class="token number">7924</span> byte <span class="token function">file</span> named <span class="token string">'README.md'</span>
On the other computer, please run: wormhole receive
Wormhole code is: <span class="token number">7</span>-crossover-clockwork

Sending <span class="token punctuation">(</span><span class="token operator">&lt;</span>-10.0.1.43:58988<span class="token punctuation">)</span><span class="token punctuation">..</span>
<span class="token number">100</span>%<span class="token operator">|</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">|</span> <span class="token number">7</span>.92K/7.92K <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">6</span>.02MB/s<span class="token punctuation">]</span>
File sent<span class="token punctuation">..</span> waiting <span class="token keyword">for</span> confirmation
Confirmation received. Transfer complete.

Receiver <span class="token builtin class-name">:</span>

$ wormhole receive
Enter receive wormhole code: <span class="token number">7</span>-crossover-clockwork
Receiving <span class="token function">file</span> <span class="token punctuation">(</span><span class="token number">7924</span> bytes<span class="token punctuation">)</span> into: README.md
ok? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>: y
Receiving <span class="token punctuation">(</span>-<span class="token operator">></span>tcp:10.0.1.43:58986<span class="token punctuation">)</span><span class="token punctuation">..</span>
<span class="token number">100</span>%<span class="token operator">|</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">|</span> <span class="token number">7</span>.92K/7.92K <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">6</span>.02MB/s<span class="token punctuation">]</span>
Received <span class="token function">file</span> written to README.md</code></pre>

<p>经测试，传输速度非常快，且不需要公网ip，不用折腾内网穿透啦！</p>
<hr>
<p>希望疫情早日结束，大家加油啊！</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Moonlight in Twilight</tag>
      </tags>
  </entry>
  <entry>
    <title>tmux MIT2</title>
    <url>/posts/987d9346/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一次我们解决了tty中的中文显示和输入问题，fbterm的表现良好。可是在实际工作中，我们往往需要分屏同时进行一些操作和查看信息，有时还需要复制粘贴一些信息。</p>
<span id="more"></span>

<h2 id="不使用tmux的尝试"><a href="#不使用tmux的尝试" class="headerlink" title="不使用tmux的尝试"></a>不使用tmux的尝试</h2><p>vim也可以调用终端实现分屏。在命令行模式执行<code>term</code>，就可以打开一个竖直方向的终端，加上修饰<code>vertical</code>，即<code>vertical term</code>就可以打开一个水平方向的终端。<br>term在vim中仍被视为一个vim的进程，甚至也有不同的模式，可以使用vim的快捷键在不同的窗口跳转。使用<code>Ctrl+D</code>或者<code>exit</code>退出用户时默认退出了term。</p>
<p>在vim的term中也可以执行一定的复制粘贴操作，需要用快捷键<code>Ctrl+\ Ctrl+N</code>从Insert模式转换到Normal模式。但是只能从term复制内容而不能在term粘贴内容，尝试粘贴的时候会显示<code>E21: Cannot make changes, &#39;modifiable&#39; is off</code>，按下<code>i</code>重新回到term中执行命令。</p>
<p>其实用vim来实现分屏是个不错的选择，设置一些快捷键之后可以比较方便。但是如果只是想同时运行多个命令就不得不先打开vim，但这实在是有点鸡肋。</p>
<h1 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a>Tmux</h1><p>tmux是一个终端复用器，tmux就是terminal muliplexer的缩写，可以使窗口和会话解绑。</p>
<p>命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称”窗口”），在里面输入命令。用户与计算机的这种临时的交互，称为一次”会话”（session）。</p>
<p>会话的一个重要特点是，窗口与其中启动的进程是连在一起的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。</p>
<p>一个典型的例子就是，SSH 登录远程计算机，打开一个远程窗口执行命令。这时，网络突然断线 ，再次登录的时候，是找不回上一次执行的命令的。因为上一次 SSH 会话已经终止了，里面的进程也随之消失了。</p>
<p>为了解决这个问题，会话与窗口可以”解绑”：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话”绑定”其他窗口。</p>
<p>Tmux 就是会话与窗口的”解绑”工具，将它们彻底分离。</p>
<ol>
<li><p>它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。</p>
</li>
<li><p>它可以让新窗口”接入”已经存在的会话。</p>
</li>
<li><p>它允许每个会话有多个连接窗口，因此可以多人实时共享会话。</p>
</li>
<li><p>它还支持窗口任意的垂直和水平拆分。</p>
</li>
</ol>
<p>类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大。</p>
<p>以上内容参考自<a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">&lt;Tmux 使用教程 - 阮一峰的网络日志&gt;</a></p>
<p>简单总结一下，就是通常的会话（也就是我们运行的命令和计算机进行交互）是与窗口绑定的，关闭窗口的时候会话就会终止，导致我们正在运行的命令也随之终止，而tmux将会话单独保存，可以指定不同的窗口连接会话。就像是本来用碗盛一碗水，碗摔碎了，水也就没了。有了tmux这个冰箱，把会话变成了冰，碗随便摔，冰不会没有，还会放到冰箱里贴上标签一直运行，等你想拿出来的时候可以重新拿一只碗来，什么东西都不会变。</p>
<h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><p><code>pacman -S tmux</code>即可安装tmux，配置文件需要自己创建，用户私人配置文件在~&#x2F;.tmux.conf, 全局配置文件在 &#x2F;etc&#x2F;tmux.conf。</p>
<p>默认的tmux快捷键并没有想象中的友好，我们先参考archwiki上建议的一份配置文件进行vim风格化</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#Prefix is Ctrl-a</span>
<span class="token builtin class-name">set</span> -g prefix C-a
<span class="token builtin class-name">bind</span> C-a send-prefix
unbind C-b

<span class="token builtin class-name">set</span> -sg escape-time <span class="token number">1</span>
<span class="token builtin class-name">set</span> -g base-index <span class="token number">1</span>
setw -g pane-base-index <span class="token number">1</span>

<span class="token builtin class-name">set</span> -g mode-keys <span class="token function">vi</span>
<span class="token builtin class-name">set</span> -g history-limit <span class="token number">10000</span>

<span class="token comment"># y and p as in vim</span>
<span class="token builtin class-name">bind</span> Escape copy-mode
unbind p
<span class="token builtin class-name">bind</span> p paste-buffer
bind-key -T copy-mode-vi <span class="token string">'v'</span> send -X begin-selection
bind-key -T copy-mode-vi <span class="token string">'y'</span> send -X copy-selection
bind-key -T copy-mode-vi <span class="token string">'Space'</span> send -X halfpage-down
bind-key -T copy-mode-vi <span class="token string">'Bspace'</span> send -X halfpage-up

<span class="token comment"># easy-to-remember split pane commands</span>
<span class="token builtin class-name">bind</span> <span class="token operator">|</span> split-window -h
<span class="token builtin class-name">bind</span> - split-window -v
unbind <span class="token string">'"'</span>
unbind %

<span class="token comment"># moving between panes with vim movement keys</span>
<span class="token builtin class-name">bind</span> h select-pane -L
<span class="token builtin class-name">bind</span> j select-pane -D
<span class="token builtin class-name">bind</span> k select-pane -U
<span class="token builtin class-name">bind</span> l select-pane -R

<span class="token comment"># moving between windows with vim movement keys</span>
<span class="token builtin class-name">bind</span> -r C-h select-window -t :-
<span class="token builtin class-name">bind</span> -r C-l select-window -t :+

<span class="token comment"># resize panes with vim movement keys</span>
<span class="token builtin class-name">bind</span> -r H resize-pane -L <span class="token number">5</span>
<span class="token builtin class-name">bind</span> -r J resize-pane -D <span class="token number">5</span>
<span class="token builtin class-name">bind</span> -r K resize-pane -U <span class="token number">5</span>
<span class="token builtin class-name">bind</span> -r L resize-pane -R <span class="token number">5</span></code></pre>

<p>接下来的就基于上面的配置进行简单的说明。</p>
<ul>
<li>首先是设置前缀键为<code>Ctrl-a</code>，然后设置按键风格为vim，可以使用<code>hjkl</code>进行移动。</li>
<li>对<code>copy-paste</code>的模式，使用<code>C-a Esc</code>进入，通过<code>v</code>和<code>y</code>来选择和复制，<code>C-a p</code>进行粘贴。</li>
<li>将窗口分割的快捷键调整为<code>C-a |</code>竖直分割，<code>C-a -</code>水平分割。</li>
<li><code>C-a h,j,k,l</code>进行各个pane的跳转</li>
<li><code>C-a H,J,K,L</code>调整各个pane的大小</li>
</ul>
<p>还有其他一些快捷键可以通过<code>C-a ?</code>查看，man上面也给出了不少说明。</p>
<p>对于256色的终端需要设置<code>TERM</code>变量以显示正确的颜色，具体看<a href="https://wiki.archlinux.org/title/Tmux">archwiki</a>。</p>
<p>一个简单省事的方式是直接在<code>conf</code>中加上<code>set -g default-terminal &quot;tmux-256color&quot; </code>。</p>
<h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><ol>
<li><p>新建会话<code>tmux new -s my_session</code></p>
</li>
<li><p>在 Tmux 窗口运行所需的程序</p>
</li>
<li><p>按下快捷键<code>Ctrl-a d</code>将会话分离</p>
</li>
<li><p>下次使用时，重新连接到会话<code>tmux attach-session -t my_session</code>。</p>
</li>
</ol>
<p>一些涉及窗口操作的快捷键</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">Ctrl-a c  创建一个新窗口，状态栏会显示多个窗口的信息。
Ctrl-b p  切换到上一个窗口（按照状态栏上的顺序）。
Ctrl-b n  切换到下一个窗口。
Ctrl-b <span class="token operator">&lt;</span>number<span class="token operator">></span>  切换到指定编号的窗口，其中的<span class="token operator">&lt;</span>number<span class="token operator">></span>是状态栏上的窗口编号。
Ctrl-b w  从列表中选择窗口。
Ctrl-b ,  窗口重命名。</code></pre>

<hr>
<p>具体怎么使用大家慢慢探索吧！</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Moonlight in Twilight</tag>
      </tags>
  </entry>
  <entry>
    <title>w3m MIT4</title>
    <url>/posts/c6c191e5/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>w3m是一款命令行下的终端浏览器，与之相似的还有历史悠久的lynx。但是w3m对中文的支持更友好，并且可以显示图片，也有类似于vim的键绑定。虽然图形界面的浏览器有丰富的特性，但是终端浏览器也有占用资源少、没有广告等的优势。尽管现在的网页有十分丰富的ccs特性，终端浏览器并不能显示，但服务于基本的搜索需求已经足够了。</p>
<span id="more"></span>

<p>w3m的官方简介：</p>
<blockquote>
<p>w3m is a text-based web browser as well as a pager like <code>more&#39; or </code>less’. With w3m you can browse web pages through a terminal emulator window (xterm, rxvt or something like that). Moreover, w3m can be used as a text formatting tool which typesets HTML into plain text.</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>由于w3m内置的图像查看w3mimgdisplay需要<code>libImlib2</code>库，如果没有的话就不能显示图像。所以需要<code>pacman -S w3m imlib2</code>，因为在图形界面中<code>imlib2</code>是默认安装的。</p>
<p>注意，没有<code>imlib2</code>，w3m并不会报错，只是无法显示图像，如果没有显示图像的需求可以不安装，同时如果开启了ranger的w3m图像预览，ranger在遇到图片的时候报错<code>/usr/lib/w3m/w3mdisplay: error while loading shared libraries: libImlib2.so.1: cannot open shared object file: No such file or directory</code>。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>作为一款终端浏览器，虽然他也支持鼠标操作，但是主要依靠键盘，所以我们先简要熟悉一下它的按键。</p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="Page-x2F-Cursor-motion"><a href="#Page-x2F-Cursor-motion" class="headerlink" title="Page&#x2F;Cursor motion"></a>Page&#x2F;Cursor motion</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>**SPC,C-v **</td>
<td><strong>Forward page</strong></td>
</tr>
<tr>
<td>**b,ESC v **</td>
<td><strong>Backward page</strong></td>
</tr>
<tr>
<td>**l,C-f   **</td>
<td><strong>Cursor right</strong></td>
</tr>
<tr>
<td>**h,C-b   **</td>
<td><strong>Cursor left</strong></td>
</tr>
<tr>
<td>**j,C-n   **</td>
<td><strong>Cursor down</strong></td>
</tr>
<tr>
<td>**k,C-p   **</td>
<td><strong>Cursor up</strong></td>
</tr>
<tr>
<td>**J       **</td>
<td><strong>Roll up one line</strong></td>
</tr>
<tr>
<td>**K       **</td>
<td><strong>Roll down one line</strong></td>
</tr>
<tr>
<td>^,C-a</td>
<td>Go to the beginning of line</td>
</tr>
<tr>
<td>$,C-e</td>
<td>Go to the end of line</td>
</tr>
<tr>
<td>**w       **</td>
<td><strong>Go to next word</strong></td>
</tr>
<tr>
<td>W</td>
<td>Go to previous word</td>
</tr>
<tr>
<td>&gt;</td>
<td>Shift screen right</td>
</tr>
<tr>
<td>&lt;</td>
<td>Shift screen left</td>
</tr>
<tr>
<td>.</td>
<td>Shift screen one column right</td>
</tr>
<tr>
<td>,</td>
<td>Shift screen one column left</td>
</tr>
<tr>
<td>g,M-&lt;</td>
<td>Go to the first line</td>
</tr>
<tr>
<td>G,M-&gt;</td>
<td>Go to the last line</td>
</tr>
<tr>
<td>ESC g</td>
<td>Go to specified line</td>
</tr>
<tr>
<td>Z</td>
<td>Move to the center line</td>
</tr>
<tr>
<td>**z       **</td>
<td><strong>Move to the center column</strong></td>
</tr>
<tr>
<td>**TAB     **</td>
<td><strong>Move to next hyperlink</strong></td>
</tr>
<tr>
<td>C-u,ESC+TAB</td>
<td>Move to previous hyperlink</td>
</tr>
<tr>
<td>[</td>
<td>Move to the first hyperlink</td>
</tr>
<tr>
<td>]</td>
<td>Move to the last hyperlink</td>
</tr>
</tbody></table>
<h3 id="Hyperlink-operation"><a href="#Hyperlink-operation" class="headerlink" title="Hyperlink operation"></a>Hyperlink operation</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>**RET            **</td>
<td><strong>Follow hyperlink</strong></td>
</tr>
<tr>
<td>a, ESC+RET</td>
<td>Save link to file</td>
</tr>
<tr>
<td>**u              **</td>
<td><strong>Peek link URL</strong></td>
</tr>
<tr>
<td>i</td>
<td>Peek image URL</td>
</tr>
<tr>
<td>I</td>
<td>View inline image</td>
</tr>
<tr>
<td>ESC+I</td>
<td>Save inline image to file</td>
</tr>
<tr>
<td>:</td>
<td>Mark URL-like strings as anchors</td>
</tr>
<tr>
<td>ESC+:</td>
<td>Mark Message-ID-like strings as news anchors</td>
</tr>
<tr>
<td>**c              **</td>
<td><strong>Peek current URL</strong></td>
</tr>
<tr>
<td>&#x3D;</td>
<td>Display information about current document</td>
</tr>
<tr>
<td>C-g</td>
<td>Show current line number</td>
</tr>
<tr>
<td>C-h</td>
<td>View history of URL</td>
</tr>
<tr>
<td>F</td>
<td>Render frame</td>
</tr>
<tr>
<td>M</td>
<td>Browse current document using external browser (use 2M and 3M to invoke second and third browser)</td>
</tr>
<tr>
<td>ESC+M</td>
<td>Browse link using external browser (use 2ESC M and 3ESC M to invoke second and third browser)</td>
</tr>
</tbody></table>
<h3 id="File-x2F-Stream-operation"><a href="#File-x2F-Stream-operation" class="headerlink" title="File&#x2F;Stream operation"></a>File&#x2F;Stream operation</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>**U    **</td>
<td><strong>Open URL</strong></td>
</tr>
<tr>
<td>V</td>
<td>View new file</td>
</tr>
<tr>
<td>@</td>
<td>Execute shell command and load</td>
</tr>
<tr>
<td>#</td>
<td>Execute shell command and browse</td>
</tr>
</tbody></table>
<h3 id="Buffer-operation"><a href="#Buffer-operation" class="headerlink" title="Buffer operation"></a>Buffer operation</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>**B       **</td>
<td><strong>Back to the previous buffer</strong></td>
</tr>
<tr>
<td>v</td>
<td>View HTML source</td>
</tr>
<tr>
<td>**s       **</td>
<td><strong>Select buffer</strong></td>
</tr>
<tr>
<td>E</td>
<td>Edit buffer source</td>
</tr>
<tr>
<td>C-l</td>
<td>Redraw screen</td>
</tr>
<tr>
<td>**R       **</td>
<td><strong>Reload buffer</strong></td>
</tr>
<tr>
<td>S</td>
<td>Save buffer</td>
</tr>
<tr>
<td>ESC+s</td>
<td>Save source</td>
</tr>
<tr>
<td>**ESC+e   **</td>
<td><strong>Edit buffer image</strong></td>
</tr>
</tbody></table>
<h3 id="Buffer-selection-mode"><a href="#Buffer-selection-mode" class="headerlink" title="Buffer selection mode"></a>Buffer selection mode</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>k,C-p</td>
<td>Select previous buffer</td>
</tr>
<tr>
<td>j,C-n</td>
<td>Select next buffer</td>
</tr>
<tr>
<td>D</td>
<td>Delect current buffer</td>
</tr>
<tr>
<td>RET</td>
<td>Go to the selected buffer</td>
</tr>
</tbody></table>
<h3 id="Bookmark-operation"><a href="#Bookmark-operation" class="headerlink" title="Bookmark operation"></a>Bookmark operation</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>**ESC+b  **</td>
<td><strong>Load bookmark</strong></td>
</tr>
<tr>
<td>**ESC+a  **</td>
<td><strong>Add current to bookmark</strong></td>
</tr>
</tbody></table>
<h3 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>**&#x2F;,C-s **</td>
<td><strong>Search forward</strong></td>
</tr>
<tr>
<td>**?,C-r **</td>
<td><strong>Search backward</strong></td>
</tr>
<tr>
<td>n</td>
<td>Search next</td>
</tr>
<tr>
<td>N</td>
<td>Search previous</td>
</tr>
<tr>
<td>C-w</td>
<td>Toggle wrap search mode</td>
</tr>
</tbody></table>
<h3 id="Mark-operation"><a href="#Mark-operation" class="headerlink" title="Mark operation"></a>Mark operation</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>C-SPC</td>
<td>Set&#x2F;unset mark</td>
</tr>
<tr>
<td>ESC p</td>
<td>Go to previous mark</td>
</tr>
<tr>
<td>ESC n</td>
<td>Go to next mark</td>
</tr>
<tr>
<td>“</td>
<td>Mark by regular expression</td>
</tr>
</tbody></table>
<h3 id="Miscellany"><a href="#Miscellany" class="headerlink" title="Miscellany"></a>Miscellany</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>!</td>
<td>Execute shell command</td>
</tr>
<tr>
<td>H</td>
<td>Help (load this file)</td>
</tr>
<tr>
<td>**o    **</td>
<td><strong>Set option</strong></td>
</tr>
<tr>
<td>C-k</td>
<td>Show cookie jar</td>
</tr>
<tr>
<td>**C-c  **</td>
<td><strong>Stop</strong></td>
</tr>
<tr>
<td>C-z</td>
<td>Suspend</td>
</tr>
<tr>
<td>**q    **</td>
<td><strong>Quit (with confirmation, if you like)</strong></td>
</tr>
<tr>
<td>Q</td>
<td>Quit without confirmation</td>
</tr>
</tbody></table>
<h3 id="Line-edit-mode"><a href="#Line-edit-mode" class="headerlink" title="Line-edit mode"></a>Line-edit mode</h3><table>
<thead>
<tr>
<th>key</th>
<th>effect</th>
</tr>
</thead>
<tbody><tr>
<td>C-f</td>
<td>Move cursor forward</td>
</tr>
<tr>
<td>C-b</td>
<td>Move cursor backward</td>
</tr>
<tr>
<td>C-h</td>
<td>Delete previous character</td>
</tr>
<tr>
<td>C-d</td>
<td>Delete current character</td>
</tr>
<tr>
<td>C-k</td>
<td>Kill everything after cursor</td>
</tr>
<tr>
<td>**C-u     **</td>
<td><strong>Kill everything before cursor</strong></td>
</tr>
<tr>
<td>C-a</td>
<td>Move to the top of line</td>
</tr>
<tr>
<td>C-e</td>
<td>Move to the bottom of line</td>
</tr>
<tr>
<td>C-p</td>
<td>Fetch the previous string from the history list</td>
</tr>
<tr>
<td>C-n</td>
<td>Fetch the next string from the history list</td>
</tr>
<tr>
<td>TAB,SPC</td>
<td>Complete filename</td>
</tr>
<tr>
<td>RETURN</td>
<td>Accept</td>
</tr>
</tbody></table>
<p>w3m还贴心地为lynx的用户准备了一套按键，详见<a href="http://w3m.sourceforge.net/MANUAL">w3m manual</a></p>
<p>以上快捷键我已经加粗标注了常用的(不过是我常用的，要考虑到我还不熟悉w3m)。</p>
<h2 id="使用参数"><a href="#使用参数" class="headerlink" title="使用参数"></a>使用参数</h2><p>w3m还给出了许多可用的附加参数以特定的方式启动，详见<a href="http://w3m.sourceforge.net/MANUAL">w3m manual#Options</a></p>
<p>我自己在使用过程中会用<code>w3m -o auto_image=0 bing.com</code>，<code>0</code>代表不显示图片，<code>1</code>代表显示图片。因为有时候，特别是使用framebuffer并且使用tmux分屏的时候，图片的位置会出问题，而且加载图片需要时间。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>w3m的用户配置文件位于<code>~/.w3m/</code>中，其中<code>~/.w3m/keymap</code>需要用户自己创建，会覆盖原有的快捷键，<code>~/.w3m/config</code>和在w3m中按<code>o</code>配置的一样，但是在w3m中修改要记得按<code>[OK]</code>保存。</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Moonlight in Twilight</tag>
      </tags>
  </entry>
  <entry>
    <title>命令行小工具</title>
    <url>/posts/e392976/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好久没有更新blog了，愈发认清了当年“教授”对我的教导。趁着寒假还没有结束，赶紧水一篇文章。</p>
<span id="more"></span>

<hr>
<p>不像在Windows中(上次看到有人Mac竟然不知道Terminal)，在Unix&#x2F;Linux中，命令行就是生产力。之前我自己配置Arch的时候，光顾着图形界面了，现在回过头来，还是命令行快啊。</p>
<p>举个例子，写程序用什么编辑器，什么C语言用VS(Visual Studio)，python用Pycharm的，还有vscode大法。当然，这些IDE(集成开发环境)好是好，从语法知识到项目管理一应俱全。但是其中大部分功能都用不到，一堆插件自己都不知道什么时候装的。甚至还有同学一个学期C语言课上下来，认为只有VS才能运行C语言，还必须要有一堆.??的文件。但事实上，C语言最省事了，随便来个编辑器加个编译器就行，没必要把一堆东西集成吧。这个学期的C语言作业，我都是在字符界面里用vim写，然后用gcc编译的。简单方便，隔壁同学还在问我创建一个新项目要点哪里的时候，我的代码都写了一半了。</p>
<p>但是许多命令行工具都和vim一样，学习成本高，毕竟没有图形界面这么友好，时不时要看看help&#x2F;man&#x2F;info之类的。不过呢，倘若一个人真要把VS的角角落落都熟悉，这精力估计能把C语言学得不错了。</p>
<p>还是回到正题，介绍一下最近遇到的不错的小工具。</p>
<h2 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h2><p>在进程管理的时候经常要借助top和ps来查看各个进程的运行状态，类似于windows的任务管理器。ps 命令可以一次性给出当前系统中进程状态，但使用此方式得到的信息缺乏时效性，并且，如果需要实时监控进程运行情况，就必须不停地执行 ps 命令，这显然是缺乏效率的。top 命令可以动态地持续监听进程地运行状态，与此同时，该命令还提供了一个交互界面，用户可以根据需要，人性化地定制自己的输出，进而更清楚地了进程的运行状态。</p>
<p>而htop有着更加友好的输出，甚至可以用鼠标点击。htop可以更改配色方案，过滤进程，跟踪进程等等。</p>
<p>GitHub: <a href="https://github.com/hishamhm/htop">htop</a></p>
<p>官网: <a href="https://htop.dev/">htop</a></p>
<h2 id="glances"><a href="#glances" class="headerlink" title="glances"></a>glances</h2><p>glance也是一个系统监控工具，用python编写。它的主要功能为(摘录自Linux中国):</p>
<ul>
<li>可以监控系统上的 15 个之多的指标（包括 Docker 容器）。</li>
<li>灵活的使用模式：单机模式、客户端-服务器模式、通过 SSH 和 Web 模式。</li>
<li>可用于集成的各种 REST API 和 XML-RPC API。</li>
<li>支持将数据轻松导出到不同的服务和数据库。</li>
<li>高度的可配置性和适应不同的需求。</li>
<li>非常全面的文档。</li>
</ul>
<p>当我使用它的时候，我还以为它也像htop一样可以用鼠标，结果不行，于是以为它是vim风格的，按下了k，结果它问我是否杀死该进程。</p>
<p>虽然glance的功能强大，但还是得先好好学习一下如何使用。</p>
<p>让大家看一下top, htop, glances的对比：</p>
<script id="asciicast-wERQLPd8x2vxuyahPmABCDIi7" src="https://asciinema.org/a/wERQLPd8x2vxuyahPmABCDIi7.js" async></script>

<p>GitHub: <a href="https://github.com/nicolargo/glances">glances</a></p>
<p>官网: <a href="https://nicolargo.github.io/glances/">An Eye on your system</a></p>
<h2 id="Bat"><a href="#Bat" class="headerlink" title="Bat"></a>Bat</h2><p>正如cat不是指猫咪，bat也不是指蝙蝠(当然也不是球棒之类的)。cat的全拼是concatenate，用于连接文件并打印到标准输出设备上。学C语言的getchar&amp;putchar的时候曾经写过一个类似的脚本，就是把文字输出到stdout流里。简单来说，最常用的就是<code>cat [filename]</code>将一个文件的内容在屏幕上打印出来。就是不像打开编辑器，只是看看里面的内容。当然也可以配合重定向符使用，实现更多的功能。</p>
<p>而bat则在cat的基础上增加了语法高亮、文本对齐、自动分页、git集成，还可以修改主题。bat给我的感觉更像是less或者more这样的文本查看工具，可是它不止是简单的文本查看，还做到了更加友好的输出。</p>
<p>cat, bat, cat+less, 自己写的C程序练习对比:</p>
<script id="asciicast-4eJYXeiVLgJTuywJIS4i07gzi" src="https://asciinema.org/a/4eJYXeiVLgJTuywJIS4i07gzi.js" async></script>

<p>GitHub: <a href="https://github.com/sharkdp/bat">A cat(1) clone with wings.</a></p>
<h2 id="ranger"><a href="#ranger" class="headerlink" title="ranger"></a>ranger</h2><blockquote>
<p>Ranger，这是我在nethack里最喜欢玩的一个角色。 –请忽略</p>
</blockquote>
<p>有时候，鼠标点来点去太麻烦了，而且查看文件属性也不方便，这是图形界面的文件管理器，在Unix&#x2F;Linux中我真的很少用。于是就是cd+ls，再加上mkdir, mv, rm，文件管理还不简单，还有find命令，总之比图形界面舒服多了。</p>
<p>而ranger是终端文件管理器。并且是vim风格！还提供文件预览！</p>
<p>效果如下：</p>
<script id="asciicast-qmLX2uEPBJMznJBcvrkIWThN1" src="https://asciinema.org/a/qmLX2uEPBJMznJBcvrkIWThN1.js" async></script>

<p>ArchWiki: <a href="https://wiki.archlinux.org/title/Ranger">Ranger</a></p>
<p>GitHub: <a href="https://github.com/ranger/ranger">ranger</a></p>
<h2 id="ncdu"><a href="#ncdu" class="headerlink" title="ncdu"></a>ncdu</h2><p>经典的 Linux 命令 df 和 du 是快速了解硬盘上的内容的方法，它们提供了一个可靠的报告，易于解析和处理。这对脚本和处理来说是很好的，但我们对数百行的原始数据并不总是反应良好。</p>
<p>我的Arch装在这个32G U盘上已经这么久了，前段时间只剩下2G的空间了。之前一直用df命令试图找到可以瘦身的地方，但是效果不佳(也可能是自己太烂了)。当我发现ncdu的时候，我以为它没什么用处，但没想到今天一用，立马查出了一堆已经不用的东西，可用空间重回5Gb，在这里提醒大家垃圾要及时清理！</p>
<p>ncdu用可视化的方法将文件夹和文件按照大小排序，十分方便(也是vim风格)：</p>
<script id="asciicast-NG5QUNUNOOLdba7e0yFzAbY9o" src="https://asciinema.org/a/NG5QUNUNOOLdba7e0yFzAbY9o.js" async></script>

<p>Github: <a href="https://github.com/rofl0r/ncdu">inofficial fork of “NCurses Disk Usage”</a></p>
<p>官网: <a href="https://dev.yorhel.nl/ncdu">NCurses Disk Usage</a></p>
<h2 id="Alpine"><a href="#Alpine" class="headerlink" title="Alpine"></a>Alpine</h2><p>之前把没用的程序删除，把邮件客户端也给删除了(之前用的是mailspring其实很好，界面美观，功能强大，开源免费)。但是用网页版的outlook打开实在太慢了，而且内容繁杂(看到那个和微软账户登录一模一样的东西就没好感了)，于是去archwiki上找了个邮件客户端。</p>
<p>Alpine历史悠久，配置也说不上简单。</p>
<p>参见    <a href="https://scateu.me/">Scateu Blog - S.B.</a>的<a href="https://scateu.me/2015/08/23/alpine.html">推荐使用邮件客户端Alpine</a></p>
<p>作为一个命令行下的邮件客户端，我认为它的表现十分出色，我需要的功能都有了，而且启动快，只要键盘使用，有许多快捷键。但是我配置Outlook的邮箱配置了好久，这里留个小坑，如果有同学想试一试Alpine，可以自己查一查怎么处理，如果有问题的话可以留言或者直接联系我。</p>
<p>ArchWiki: <a href="https://wiki.archlinux.org/title/Alpine">Alpine</a></p>
<p>官网: <a href="https://alpine.x10host.com/alpine/release/">Alpine Email Program</a></p>
<h2 id="asciinema"><a href="#asciinema" class="headerlink" title="asciinema"></a>asciinema</h2><p>先上官方宣传视频(怀疑它是嵌套录制了)：</p>
<script id="asciicast-335480" src="https://asciinema.org/a/335480.js" async></script>

<p>asciinema *[as-kee-nuh-muh]*是一个免费的开源解决方案，用于记录终端会话并在网络上共享它们。</p>
<ul>
<li><p>录制简单：在您工作的地方录制 - 在终端中。开始只是运行<code>asciinema rec</code>，完成击中Ctrl-D或键入<code>exit</code>。</p>
</li>
<li><p>复制粘贴：每当您在自己的终端中看到想要尝试的命令时，只需暂停播放器并复制粘贴您想要的内容。毕竟只是一个文本！</p>
</li>
<li><p>嵌入：在您的博客文章、项目文档页面或会议演讲幻灯片中轻松嵌入 asciicast 播放器。</p>
</li>
</ul>
<p>大家应该已经注意到之前的演示都是用asciinema做的吧，是不是非常棒？(不是说我的视频啦，是说这个终端录制)</p>
<p>而且偶然发现，asciinema生成的gif用作微信表情包也不错，送大家一只鹦鹉：</p>
<p><img src="https://camo.githubusercontent.com/d3ca3f081c1ba73086f60f91f8c32a6c488d79a72e1f9990b5bf83f539151643/68747470733a2f2f642e70722f692f6a4b6c7563302e676966" alt="parrot" loading="lazy"></p>
<p>GitHub: <a href="https://github.com/asciinema">asciinema</a></p>
<p>官网: <a href="https://asciinema.org/">asciinema</a></p>
<h2 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h2><p>这个就不讲了，大家熟的很，只是觉得网上人人都说ys主题好，要么就是cloud主题，上面每次终端录制采用的都是random的zsh主题，大家完全可以试试看有什么好的主题，然后再做决定，也可以取长补短自己制作自己的theme,到时候别忘了分享给我。</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token variable">$RANDOM_THEME</span> <span class="token operator">>></span> path/zshtheme</code></pre>

<blockquote>
<p>tips: 这样可以记录自己当前的主题到zshtheme文件中慢慢搜集哦</p>
</blockquote>
<p>GitHub: <a href="https://github.com/ohmyzsh/ohmyzsh">ohmyzsh</a></p>
<p>官网: <a href="https://ohmyz.sh/">Oh My ZSH!</a></p>
<hr>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>水一篇文章水了一天，难以想象那些春节日更“水文”，平常周更技术贴的公众号是怎么做到的。</p>
<p>今天下大雪，也是年初，送大家新年礼物。</p>
<p>终端字体推荐：</p>
<ul>
<li>字母： Freemono(gnu-free-fonts)</li>
<li>中文：霞鹜文楷(ttf-lxgw-wenkai)</li>
</ul>
<p>翻遍了网上的最佳编程字体，结果阴差阳错安装别的东西的时候作为依赖安装了gnu-free-fonts，里面的Freemono字体正和我意，唯一一个符合我的要求的字体：免费开源，字符集大，最重要的是o和0和O分辨清晰并且没有中间的横杠，唯一的缺憾是1和l的分辨在于1的头是斜的。至于霞鹜文楷也是一款不错的开源字体，兼有仿宋和楷体的特点，可读性高。</p>
<p>给大家拜年啦！</p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>在分区上创建Arch启动盘</title>
    <url>/posts/c2cc92a9/</url>
    <content><![CDATA[<p>身边放个启动盘(Live USB)总是令人安心，出了问题至少可以救援，也可以比较方便得帮人安装Arch。</p>
<p>我身边呢，也的确一直放着我的启动盘，一个只有3.7个G的小家伙，陪伴了我很久的时间，也不知道用它装过几次Arch了。但是突然基础物理实验要用U盘(还非要fat32格式的，我手头只有ntfs, exfat, ext4格式的)，所以只好把它格式化为fat32了。</p>
<p>当然啦，其实一直很想试试Arch的最小化安装，从xfce4到i3折腾。之前其实还拿这个3.7G的U盘装过Arch, 用i3作为桌面，但是还是太大了，以失败告终。</p>
<p>结果物理实验没有用到U盘，所以正好开启新一轮的尝试，打算打造一个功能齐全的无桌面环境的Arch使用(这是之后我的blog的一个系列，名字暂时还没想好(tty求生?))</p>
<p>回到正题，还是希望身边放一个启动盘，但是手头只剩下一个32g的平时用来当正常U盘用的U盘了，所以就安在它身上了。其实在Archwiki上有怎么把启动盘安装在一个分区而其他分区正常使用的方法，一方面中文版本的翻译<del>又</del>落后了，另一方面有同学竟然看了那篇文章还不会，那我正好<del>水文</del>分享一下怎么在一个分区上制作Arch启动盘。</p>
<span id="more"></span>

<h1 id="简单制作一个普通的启动盘"><a href="#简单制作一个普通的启动盘" class="headerlink" title="简单制作一个普通的启动盘"></a>简单制作一个普通的启动盘</h1><p>准备一个U盘，你甚至不需要分区和格式化它，因为<code>dd</code>命令会完全改变这个U盘</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">dd</span> <span class="token assign-left variable">bs</span><span class="token operator">=</span>4M <span class="token assign-left variable">if</span><span class="token operator">=</span> path/to/ archlinux- version -x86_64.iso <span class="token assign-left variable">of</span><span class="token operator">=</span>/dev/ sdx <span class="token assign-left variable">conv</span><span class="token operator">=</span>f​​sync <span class="token assign-left variable">oflag</span><span class="token operator">=</span>direct <span class="token assign-left variable">status</span><span class="token operator">=</span>progress</code></pre>

<p>这样，我们就能得到一个启动盘了，不过尽管Arch Linux Installer USB drive只用了不到1个G的空间，但是这个U盘的其他空间都用不了了，所以如果想要使用这种方便快捷的方式，那就准备一个小一点的U盘吧。</p>
<h1 id="在分区上创建启动盘"><a href="#在分区上创建启动盘" class="headerlink" title="在分区上创建启动盘"></a>在分区上创建启动盘</h1><blockquote>
<p>This method is more complicated than writing the image directly with <code>dd</code>, but it does keep the flash drive usable for data storage (that is, the  ISO is installed in a specific partition within the already <a href="https://wiki.archlinux.org/title/Partitioning">partitioned device</a> without altering other partitions).		——ArchWiki</p>
</blockquote>
<p>Wiki说很难，但其实也蛮简单的，一步步按照Wiki来就行。</p>
<h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>一般不可能手头正好有一个U盘有一个大小和格式都合适的分区吧，所以还是重新分过。(注意，不要把日常使用的数据分区分成许多个，至少要留下一个较大的分区来存储比较大的文件)</p>
<p>只要有一个分区是fat32就行了，大小1个G就可以，archiso大小是807.3 MiB(2022.3.1的数据)，启动盘的制作几乎就是把iso里的文件拷贝过去，所以大小基本也是一样的，所以1个G基本够了。</p>
<p><strong>这里还要设置一个卷标，后面要用的，全英文别带特殊符号</strong>(如果不设置的话也行，先看完这篇文章就知道了)</p>
<p>下面以<code>/dev/sdX</code>盘的<code>/dev/sdXn</code>分区为例</p>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>先下载好Archiso, 然后挂载要制作的对应U盘分区，把Archiso解压到其中</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/sdXn /mnt		<span class="token comment"># 不知道那个的fdisk -l 查看一下</span>
bsdtar -x -f archlinux-version-x86_64.iso -C /mnt	<span class="token comment"># 解压</span></code></pre>

<h2 id="启动配置"><a href="#启动配置" class="headerlink" title="启动配置"></a>启动配置</h2><p>显然不可能直接解压到对应分区就好了，还有修改启动参数使其正常启动。</p>
<p>需要在一下文件修改：</p>
<ul>
<li><p>BIOS boot:<br><code>/mnt/syslinux/archiso_sys-linux.cfg</code></p>
</li>
<li><p>UEFI boot:</p>
<p><code>/mnt/loader/entries/01-archiso-x86_64-linux.conf</code></p>
<p><code>/mnt/loader/entries/02-archiso-x86_64-speech-linux.conf</code></p>
<p><code>/mnt/loader/entries/03-archiso-x86_64-ram-linux.conf</code></p>
</li>
</ul>
<p>具体修改，就是把以上文件中的<code>archisolabel=ARCH_*YYYYMM*</code>改为你自己的卷标或者UUID，就是改成：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">archisolabel</span><span class="token operator">=</span>YOUR-LABEL		<span class="token comment"># 使用label，前提是前面设置了卷标</span>
<span class="token comment"># 或者</span>
<span class="token assign-left variable">archisodevice</span><span class="token operator">=</span>/dev/disk/by-uuid/YOUR-UUID	<span class="token comment"># 使用uuid</span></code></pre>

<p>可以用这个命令查看label和uuid，注意千万别改错了</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">blkid /dev/sdXn		<span class="token comment"># 查看卷标和UUID</span></code></pre>

<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><pre class="language-bash" data-language="bash"><code class="language-bash">umonut /mnt
syslinux --directory syslinux --install /dev/sdXn	<span class="token comment"># 得先安装syslinux和mtolls包</span>
<span class="token function">dd</span> <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">440</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">conv</span><span class="token operator">=</span>notrunc <span class="token assign-left variable">if</span><span class="token operator">=</span>/usr/lib/syslinux/bios/mbr.bin <span class="token assign-left variable">of</span><span class="token operator">=</span>/dev/sdX 	<span class="token comment"># 如果U盘是mbr分区表</span>
<span class="token function">dd</span> <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">440</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">conv</span><span class="token operator">=</span>notrunc <span class="token assign-left variable">if</span><span class="token operator">=</span>/usr/lib/syslinux/bios/gptmbr.bin <span class="token assign-left variable">of</span><span class="token operator">=</span>/dev/sdX		<span class="token comment"># 如果U盘是gpt分区表</span></code></pre>

<p>要我说，这比安装Arch简单多了，而Wiki的说法是Arch的安装很简单的。</p>
<p>祝大家使用愉快，这里只讲述了Linux下的方法，Wiki上还提供了Windows, Mac甚至Android上的方式。</p>
<p>参考：<a href="https://wiki.archlinux.org/title/USB_flash_installation_medium#Using_manual_formatting">USB flash installation medium</a></p>
]]></content>
      <categories>
        <category>GNU/Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d2f73b37c820072b523fb7b21ba1c0579c4480d457a71746e6b785dea3687c0f">10d79030e8222445804370796b90fca1cf7dd2ee01010d95413afa643c36d75c6da7dc8584583c53132d123565a83bc482d57efe09dbb13f6be1ebadf67b396c5e9af14ae37a94b87d779719bc8c1cd1a95420a6d53586101970b6bd1e11383c5fb9eb6a2afd2dfd764940c736e232c31819ba63da4a7c6eb6c1003cc6443dcf2082b9f749ca03a1484b87b08c908b3c310d7b631064a7fc3f9ca36177e4c3059978875c3caa78a7dceb6037a9522caf5c4adf858dd97440561f76a5ba5e4fd77e9898dfeb4cad54c4bb643f9c0ecbaef49a3431bdd2455830a88255232397afbbe9b23eb9395dfae6f0824e03416bc0b3804386abdc6c923976a913424fdbf1ba89bde972822239ac5e9109f398b65ae65ef00629508a203d30649f6408e1f61f5f6e73d99349907d745bd4c4ef0763621826913a2677273e3b66ae19439d1940d9ebcc45d324738506f0ac5dca5093adf45b82a24da2d49432e9f7cea3b56d73ea8b80628014008c75e6df0aa070ccdaa53907f1adc5e6234b2ab2f7f8485fb9383dc64927d631e20713c7d719815e20c9d6247aa120998e681a19e43d40ca49e20ce7419d535072ff85e74c96caabe848f11f049126a6f4cbbfc746a3cae3d4b6c98db711e8b3bdbd372def67e3d1bf776ee35037a2377d5898704789976ec22fc47c64eb83da5766f0408afee5b438701c6084a1025c673100e7ac0cf710407782790b56679a3fbb40313022e90f715c1a39914fe4b710beb621310bee163ece727a9d02da8b2ef0925acbeedbed1bdf2fb2a5a106956f607dcb5fcef0e36a97afa6fe5d415be51d647cc196fec6186575845eba2577edf79b237f40501d9e0516fe26fcc18e5bb029218ceea51ede676deec935b859e1ea1db682dcc6d6c6bbbcd33e2a7abfc8dcef7496752bc2d28fa413bfe6e5547019fd69bbb14ed9680e425b8820ba3179a6613a2c24635096077121c1bb97efd32549d6268977041c4caf88740dd80265ca9cd1c8acf712734967a3d0ab367713abda734152a9debcfc1e63380f480c67a86f841a6c0186a22b755c486715f9239282ac67a48be60c6d1d2e771ffd6a6e803f07e2e14050f271f77b0605d6306dc68516cbf9fadc715e15180f60c3c1bb2e5f6aa27ededbf9cc8bae922f4d577c278c739e809449ec7ec377b3c11d8dc70f0ecb81250383e3baabf720690d9280a62d42eb89c70088febdff50079b83288c71f30b93e612d03df47598e1f198f9024095bd550115f7b564a51fb0ccdef94ab90dd0e890e2ca3abbd9454ce516c23e4598769c9a86f654ae06bfeade878aab66c69a5101316d805eae02115effb999da9588aa68f9972a9c8252ff518bfd8fb3006fc75fc8fc63c9679c43a35209143d8341521fadbd1d9021b10d11f0ab7a89bc12dccf411b51e5bd2901c8644d8eb35fa669b5afbc06f3b162be8accda4e6f7186483f05be030660ae042593db86f6d89ab9079078c3154f00c676eaf404a54b44b722991cd41a9be94dcd8511e9fc7399ef139ae6efd4807f0e377c4fd5485b3bbc36799458011d6dc84ba9bda73a6adb9dd4de37e2987ff33df523b5dbf6e872b2b6b0d0b3e783e5de9f71296e3a540aeb3434c8dea0c245ebf3a0d45b6b5f0c5445f706cbb1b79b9ab3375e76eefe2e35b1781df3562fda58d551e431e034e4be772e1704ea763a778473a9e2e052dd57a42ad549f1356107b9fa161dfe39e0a916e9aa3540a886e4df4c5e1b34b5a3e6743731519658ffc7e8ae4376fdf24cfdd3f9fa820f0d90b59ccc7faa5b2d2bae18799c680059a32762d3f364ead607ede99889ddd2fe4f5d39a336e5160b159f4fe1bfc8863b043b41efa9fc37c562c9837ee304168dc1654233f8d5a5a86f81462cc284fcceedb4d39857e58c80fd35dc8ef0b2c38f7d1396029be1b86a42ba875e4ae5a5ec88c0c49b2350e358bb8d110634be51c20a6037d1f1203d026b8c77bcdeadd902b8de3c6a17a2170405693ebf692b042cae2e30694b1900bfa5f9e553a6a683ed83bb6e91ebfa8b9ba93bdb7409fca3f0ccd27fb73863632f4c922da7c3f9234f3993a854ce21f3b68cf69d6b186163f1da2b0022cc871069774f0ff62eedfe5ce3d733121ecbabee97e88df0f41aa282b8f05b35daf70eca8fd4bb08df8100276f380d14926766fb9b0c54bb33d88a5fd0685aee3a688e88c5256fc81a90edeeebb6261ef4dc16c685e0c78e5e7bc280c563bf717f1f714df99ba0eeac1773558fa4e6e742bc11b164808df62446e8012fa6cbe97687c7885dd1a7039f63b0d93f62af64cc6c16e5c386c840fd41839316b2d6d520a3a8b61c2ca7a36833c3ddc8cafef146fe4f489d5fc88c1b4210c9b28e510862025cdeb3cb23c3611ef44bda6d622abf205c01dca8d1049a0a986552cf2022a8ee7246a4c3a76ec8b639d0cb094a9f1a72f5c6cd7a156b5f9903a7947704e69834584ae3a023de38320ac16f34a0d06fa3e8cf78ad2d5189dcb3d39e629acfe7c7891e998a8bf24ab6f878bd0f9b7410a76f96f2849d0c</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-wave">
      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">hello</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>第一篇文章</title>
    <url>/posts/5c2fafc7/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>2021年7月，我刚刚走出高中的校门，开始人生的下一段旅途。也许当我许久以后再来看这段时间，会觉得和其他的部分一样。但我相信这种一样并不是生命的重复，而是生命的运动；这份一样将是一样的精彩、一样的律动。  </p>
<p>为此，我开始不断地尝试新的知识、新的思想、新的生命形式，我努力去把每一天活得值得珍重。  </p>
<p>最近在学习Linux、Python，刷高数、普物，学车，甚至练习双拼。</p>
<p>感谢每一个自己搭建个人博客分享个人收获的博主，在他们的建站经历下，才有了我的博客，才有了并肩同行的归属感。  </p>
<span id="more"></span>

<p>这是我参考的文章<a href="https://www.yshawlon.cn/1.html" title="Github + Hexo 搭建个人博客超详细教程">Github + Hexo</a>。照着这个流程走下来完全没问题，希望你也能拥有自己的博客。</p>
<h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>个人是物理走向，业余时间学习信科，爱好文学，所以把博客内容分为以下几块：</p>
<ul>
<li>技术</li>
<li>记录（生活）</li>
<li>文学</li>
<li>其他</li>
</ul>
<h3 id="希望"><a href="#希望" class="headerlink" title="希望"></a>希望</h3><p>为什么要搭建自己的博客？刘未鹏的这篇文章<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/">[BetterExplained]为什么你应该（从现在开始就）写博客 </a>写的很多，但我也有自己的想法和希望。</p>
<p>个人博客首先是“个人”：</p>
<ol>
<li><p>自由。</p>
<p>这意味着文章有自己的脉络，有自己的生命。好的作品不是创作者个人决定的，而是由创作者与作品不断交流的。这里的自由即是创作者与作品共同的自由。创作者可以不拘于时空，听从自己的思想和心灵；作品亦可以像小溪一样流淌出自然的形式。</p>
</li>
<li><p>个体独立性。</p>
<p>个体独立性是一个人的本质，与自由不同。这意味着对个体的尊重，对个体生命和意志的尊重。我们的时代是什么？是一个新的时代，一个信息的时代。每一个时代都有其闪光点，也有其令人忧伤的痛楚。我们不可避免地怀念过去地优雅，却也应当知晓——这是我们的时代，应该由我们去创造。天下大势浩浩汤汤，哪一个时代没有她的潮流？我们的使命不是去“浮”，去“卷”，去“躺”，被事、被物裹挟着向前，这是集体无意识的，也的确是可悲的。我们应当去“潜”，去“站直”，坚守自己的方向，有个人的尊严。</p>
<blockquote>
<p>他是一座个人的孤岛 </p>
</blockquote>
<p>我们立在这时代的风口浪尖，尊重这时代的巨浪；但时代也尊重我们脚下的土地，尊重我们的位置。</p>
</li>
</ol>
<p>个人博客其次是”博客“：</p>
<ol>
<li><p>广度。</p>
<p>博客可以展现个人的多角度，亦可以折射时代的精神。人和时代，都不可以被一个词定义的。不能说Einstein只是个理论物理学家，他自己有言”我不信仰一个人格化的神“；也不能说1931—1945只是伟大的抗战时期，时代有其无限的漩涡。不能把一个人看”扁“了，只强调某些方面。生命是一个集合，有好的方面，也有坏的方面，生命因丰富而出彩。</p>
</li>
<li><p>深度。</p>
<p>QQ、Wechat，这些即时通讯的确浅化了我们的思想，言难达意，更难传情。即使是面对面的交流也少有深入思想，穿透人心。好的思想应该用笔写下来，慢慢咀嚼，不断升华。博客为我们提供了一个机遇，让不同时空的人（包括自己）去体验一个特定的生命。</p>
</li>
</ol>
<p>祝，</p>
<p>​	好梦</p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>琐记</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
